{"version":3,"sources":["components/Redux/reducers/authenticationReducer.js","components/Helpers/ReduxFormValidations.js","components/Authentication/LoginForm.jsx","config/axios.js","components/Authentication/audiocell.png","components/Authentication/Login.jsx","components/Redux/actions/loginActions.js","components/Redux/store.js","components/Redux/actions/usersActions.js","components/Navbar.jsx","components/Home.jsx","components/Authentication/VerificationAuth.jsx","components/Redux/actions/productosActions.js","components/Redux/actions/ventasActions.js","components/Ventas/ProductoCard.jsx","components/Ventas/CardItem.jsx","components/Redux/actions/cajaActions.js","components/Ventas/VentaForm.jsx","components/Ventas/Recibo.jsx","components/Ventas/ListadoProductos.jsx","components/ControlProductos/ProductsTable.jsx","components/ControlProductos/ProductoForm.jsx","components/ControlProductos/ProductoEditForm.jsx","components/ControlProductos/ProductoStockForm.jsx","components/ControlProductos/ListadoStock.jsx","components/ControlProductos/ReporteStock.jsx","components/ControlProductos/Productos.jsx","components/Redux/actions/categoriasActions.js","components/Ventas/ReporteUsuarios.jsx","components/Ventas/ReporteGanancias.jsx","components/Ventas/VentasEncabezadosTable.jsx","components/Ventas/VentaProductos.jsx","components/Ventas/VentasDetalleTable.jsx","components/Ventas/ListadoVentas.jsx","components/Ventas/ReporteCategorias.jsx","components/Caja/ControlCaja.jsx","components/Caja/CajasTable.jsx","components/Caja/ListadoCajas.jsx","components/Users/UsuariosTable.jsx","components/Users/UserForm.jsx","components/Users/UserEditForm.jsx","components/Users/ListUsers.jsx","components/Ventas/VentasCanceladasTable.jsx","components/Ventas/ListadoVentasCanceladas.jsx","components/Redux/actions/productosBaruchActions.js","components/ControlProductosBaruch/ProductoStockForm.jsx","components/ControlProductosBaruch/ListadoStockBaruch.jsx","components/ControlProductosBaruch/ReporteStockBaruch.jsx","components/ControlProductosBaruch/ProductoBaruchForm.jsx","components/ControlProductosBaruch/ProductsBaruchTable.jsx","components/ControlProductosBaruch/ProductoEditFormBaruch.jsx","components/ControlProductosBaruch/ProductosBaruch.jsx","components/Redux/actions/categoriasBaruchActions.js","components/Redux/actions/ventasActionBaruch.js","components/VentasBaruch/ProductoCardBaruch.jsx","components/VentasBaruch/CardItemBaruch.jsx","components/Redux/actions/cajaActionsBaruch.js","components/VentasBaruch/VentaFormBaruch.jsx","components/VentasBaruch/ReciboBaruch.jsx","components/VentasBaruch/ListadoProductosBaruch.jsx","components/VentasBaruch/VentasEncabezadosTableBaruch.jsx","components/CajaBaruch/ControlCajaBaruch.jsx","components/CajaBaruch/CajasTableBaruch.jsx","components/CajaBaruch/ListadoCajasBaruch.jsx","components/VentasBaruch/VentaProductosBaruch.jsx","components/VentasBaruch/VentasDetalleTableBaruch.jsx","components/VentasBaruch/VentasTableBaruch.jsx","components/VentasBaruch/ReporteGananciasBaruch.jsx","components/VentasBaruch/ListadoVentasBaruch.jsx","App.js","reportWebVitals.js","index.js","components/Redux/reducers/productosReducer.js","components/Redux/reducers/categoriasReducer.js","components/Redux/reducers/ventasReducer.js","components/Redux/reducers/cajaReducer.js","components/Redux/reducers/usersReducer.js","components/Redux/reducers/productosBaruchReducer.js","components/Redux/reducers/categoriasBaruchReducer.js","components/Redux/reducers/cajaBaruchReducer.js","components/Redux/reducers/ventasBaruchReducer.js","components/Redux/reducers/index.js","components/Redux/actionTypes.js"],"names":["initialState","access_token","localStorage","getItem","authenticated","errorResponse","user","authenticationReducer","state","arguments","length","undefined","action","type","LOGIN_EXITOSO","setItem","token","id","_objectSpread","LOGIN_ERROR","LOGOUT","removeItem","CLEAR_AUTENTICACION","min","renderField","_ref","input","label","_ref$meta","meta","touched","error","warning","_jsx","children","_jsxs","style","maxWidth","margin","placeholder","className","marginLeft","fontSize","color","opacity","reduxForm","form","validate","values","errors","username","password","props","handleSubmit","onSubmit","htmlFor","Field","name","component","autoComplete","backgroundColor","clientToken","axios","create","baseURL","headers","clientTwoToken","client","Login","dispatch","useDispatch","history","useHistory","useSelector","authentication","useEffect","push","src","logo","alt","width","borderRadius","LoginForm","_asyncToGenerator","_regeneratorRuntime","mark","_callee","resp","wrap","_context","prev","next","post","sent","data","Swal","fire","imageUrl","imageWidth","title","concat","icon","confirmButtonText","t0","stop","_x","apply","reducer","require","default","store","createStore","compose","applyMiddleware","thunk","window","__REDUX_DEVTOOLS_EXTENSION__","f","obtenerUsuario","_yield$clientToken$po","usuario","rol","TiendaId","GET_ME","me","console","log","seleccionarUsuario","_ref5","_callee5","_context5","SELECCIONAR_USUARIO","_x5","obtenerTiendas","_ref7","_callee7","_yield$clientToken$ge5","_context7","get","OBTENER_TIENDAS","tiendas","_x7","selectTienda","tiendaId","_ref8","_callee8","_context8","SELECT_TIENDA","tienda","_x8","Navbar","usuarios","onClick","cursor","e","preventDefault","_ref2","_callee2","_context2","_x2","href","Home","_useState","useState","_useState2","_slicedToArray","selectedOption","setSelectedOption","_useState3","_useState4","storeType","setStoreType","_useState5","_useState6","selectedStore","setSelectedStore","Tienda","display","alignItems","justifyContent","Loader","height","_Fragment","map","x","y","seleccionarTienda","position","left","top","VerificationAuth","obtenerTotalProductos","buscador","_yield$clientToken$ge","params","OBTENER_TOTAL_PRODUCTOS","totalProductos","total","OBTENER_PRODUCTOS_ERROR","obtenerProductos","page","getState","productos","Number","selectedTienda","OBTENER_PRODUCTOS","productosNoDisponibles","_x3","obtenerProductosVenta","_ref3","_callee3","_yield$clientToken$ge2","_context3","OBTENER_PRODUCTOS_VENTA","productosVenta","results","_x4","seleccionarProducto","producto","_ref9","_callee9","_context9","SELECTED_PRODUCT","_x15","seleccionarVenta","venta","_yield$clientToken$ge3","SELECCIONAR_VENTA","_x12","generarVenta","formValues","_ref10","parseInt","ventas","productosSeleccionados","VENTA_REALIZADA","recibo","productosVendidos","then","result","isConfirmed","location","reload","_x14","cancelarVentaCaja","_ref12","_callee11","_context11","OBTENER_VENTAS_ERROR","_x18","_x19","agregarProductoCarrito","_ref13","_callee12","productosCarrito","productoExistente","_iterator","_step","_context12","includes","precioVenta","stock","idProducto","precioFinal","_createForOfIteratorHelper","s","n","done","value","abrupt","finish","AGREGAR_PRODUCTO_CARRITO","t1","_x20","_x21","getReporteEncabezadosHoy","_ref23","_callee20","_context20","OBTENER_VENTAS_ENCABEZADO_HOY","_x32","_x33","ProductoCard","CardItem","handleChangePrecio","_ref14","_callee13","listadoProductosSeleccionados","_context13","prod","cantidad","AGREGAR_PRODUCTOS_CARRITO","_x22","_x23","cambiarCantidadPrecio","target","onChange","defaultValue","_ref16","_callee15","prods","nuevosProductosSeleccionados","_context15","forEach","p","_x25","_x26","obtenerCaja","cajaActual","ok","OBTENER_CAJA","status","cantidadEfectivoCierre","cajaAbierta","OBTENER_CAJA_ERROR","VentaForm","setPrintRecibo","showData","setShowData","metodoPago","nombre","nit","direccion","dpi","imei","icc","numero","setFormValues","handleInputChange","_defineProperty","showCancelButton","cancelButtonText","confirmButtonColor","required","maxLength","onInput","slice","Recibo","_Component","_inherits","_super","_createSuper","_this","_classCallCheck","call","totalVenta","_createClass","key","this","infoRecibo","padding","fontFamily","filter","textAlign","correlativo","Date","createdAt","toLocaleDateString","nombreCliente","marginRight","Producto","Categorium","marginTop","Component","ListadoProductos","componentRef","useRef","loading","setLoading","setBuscador","setProductosSeleccionados","productosSeleccionado","caja","nuevosProductos","toLowerCase","search","handlePrint","useReactToPrint","content","current","ref","index","ProductsTable","handleSelectProducto","handleDelete","handleListStock","admin","setAdmin","actualPage","scope","categoria","disponible","BsListCheck","size","FaEdit","AiFillDelete","max","maxLength50","maxLength200","minValue","categorias","showForm","setShowForm","cat","ProductoEditForm","presentacion","precio","connect","initialValues","selectedProduct","load","precioCompra","setProductoStock","productoStock","Select","options","ListadoStock","stocks","setShowListadoStock","handleDeleteStock","_yield$clientToken$ge6","totalInvertido","put","CREAR_PRODUCTO","Invertido","isNaN","OBTENER_TOTAL_INVERTIDO","parseFloat","deleteStock","setDisponible","temp","cantidadRestante","err","proveedor","cantidadComprada","TiDeleteOutline","ReporteStock","setInvertido","Productos","show","setShow","showFormEdit","setShowFormEdit","showStock","setShowStock","_useState7","_useState8","_useState9","_useState10","showListadoStock","_useState11","fechaInicio","fechaFin","_useState12","formFechasReporte","setFormFechasReporte","handleInputChangeReporte","_useState13","_useState14","_useState15","_useState16","productsOptions","setProductOptions","_useState17","_useState18","_useState19","_useState20","listadoStock","reporteStock","_callee14","_context14","_x24","_callee10","_context10","OBTENER_REPORTE_PRODUCTOS","_x16","OBTENER_CATEGORIAS","_yield$clientToken$ge7","productsTransform","productsTransformNo","_toConsumableArray","crearProducto","handleSubmitStock","productoId","_ref6","_callee6","_yield$clientToken$ge4","_context6","_x9","_x10","inputAttributes","autocapitalize","showLoaderOnConfirm","preConfirm","response","msg","catch","showValidationMessage","allowOutsideClick","isLoading","handleAgregarStock","_ref4","_callee4","_context4","OBTENER_LISTADO_STOCK","listado","_x6","obtenerListadoStock","handleSubmitEdit","EDITAR_PRODUCTO","_x11","handleChangeBuscador","_x13","deleteProducto","Tabs","defaultActiveKey","Tab","eventKey","flexWrap","overflowY","maxHeight","Modal","onHide","backdrop","keyboard","Header","closeButton","Title","Body","ProductoForm","ProductoStockForm","scrollable","formInicio","formFin","formFechas","endDate","setDate","getDate","_ref11","inicio","fin","OBTENER_REPORTE_STOCK","_x17","toLocaleString","timeZone","ReporteUsuarios","ReporteGanancias","totalGanancias","setGanancias","v","Ganancia","Categoria","Vendidos","VentasEncabezosTable","tipoVenta","handleSelectVenta","FaRegEye","_yield$Swal$fire","text","inputLabel","inputPlaceholder","razon","handleCancelVenta","setProductoVenta","VentasDetalleTable","ControlVentas","_ventaSeleccionada$en","_ventaSeleccionada$en2","_ventaSeleccionada$en3","formFechasGanancia","setFormFechasGanancia","formFechasEncabezado","setFormFechasEncabezado","_ref27","_callee23","_context23","CLEAR_LISTADOS_VENTAS","_x37","usuarioVerificacion","reporteVentasUsuarios","reporteGanancias","ventaSeleccionada","reporteEncabezados","encabezadosHoy","reporteVentasProducto","handleInputChangeGanancia","handleInputChangeEncabezado","Redirect","to","_ref24","_ref25","_callee21","_yield$clientToken$ge8","_context21","_x34","_x35","getReporteEncabezados","Container","encabezado","Row","Col","xs","md","RiPrinterLine","Footer","OBTENER_VENTAS_USUARIOS","obtenerVentasUsuarios","_ref19","_ref20","_callee17","_context17","OBTENER_VENTAS_GANANCIAS","_x28","_x29","getReporteVentasGanancias","VentaProductos","_ref26","_callee22","_yield$clientToken$ge9","_context22","REPORTE_VENTA_PRODUCTOS","_x36","ReporteCategorias","ControlCaja","ventasHoy","reporteVentasCategoria","valorCaja","setValorCaja","buttonLoader","setButtonLoader","closeButtonLoader","setCloseButtonLoader","_ref21","_callee18","_context18","OBTENER_REPORTE_VENTAS_CATEGORIA","_x30","apertura","ABRIR_CAJA","role","overflowX","cantidadEfectivo","cantidadEfectivoDia","cantidadTarjeta","CajasTable","cantidadEfectivoApertura","ListadoCajas","cajasSeleccionadas","setCajasSeleccionadas","cajas","cajasGeneral","cajasObtenidas","OBTENER_CAJAS_GENERAL","OBTENER_CAJAS_GENERAL_ERROR","nuevasCajas","UsuariosTable","handleSelectUser","handleDeleteUser","_usuario$Tienda","UserEditForm","selectedUser","ListUsers","showEditForm","setShowEditForm","OBTENER_USUARIOS","users","ELIMINAR_USUARIO","deleteUsuario","UserForm","CREAR_USUARIO","VentasCanceladasTable","setShowDetail","SELECCIONAR_VENTA_CANCELADA","seleccionarVentaCancelada","razonCancelacion","ListadoVentasCanceladas","showDetail","ventasCanceladas","ventaCanceladaSeleccionada","OBTENER_VENTAS_CANCELADAS","obtenerVentasCanceladas","_yield$clientTwoToken","OBTENER_TOTAL_PRODUCTOS_BARUCH","OBTENER_PRODUCTOS_ERROR_BARUCH","OBTENER_PRODUCTOS_BARUCH","_yield$clientTwoToken2","OBTENER_PRODUCTOS_BARUCH_VENTA","SELECTED_PRODUCT_BARUCH","ListadoStockBaruch","ELIMINAR_STOCK_BARUCH","CREAR_PRODUCTO_BARUCH","ProductsBaruchTable","ProductoEditFormBaruch","productosBaruch","selectedProductBaruch","ProductosBaruch","totalProductosBaruch","productosBaruchNoDisponibles","categoriasBaruch","listadoStockBaruch","reporteStockBaruch","totalInvertidoBaruch","OBTENER_REPORTE_PRODUCTOS_BARUCH","OBTENER_CATEGORIAS_BARUCH","_yield$clientTwoToken6","OBTENER_TOTAL_INVERTIDO_BARUCH","_yield$clientTwoToken4","dataTotal","_yield$clientTwoToken3","OBTENER_LISTADO_STOCK_BARUCH","EDITAR_PRODUCTO_BARUCH","ProductoBaruchForm","_yield$clientTwoToken5","OBTENER_REPORTE_STOCK_BARUCH","ReporteStockBaruch","ventasBaruch","totalBaruch","productosSeleccionadosBaruch","VENTA_REALIZADA_BARUCH","OBTENER_VENTAS_ENCABEZADO_HOY_BARUCH","OBTENER_VENTAS_ERROR_BARUCH","ProductoCardBaruch","AGREGAR_PRODUCTO_CARRITO_BARUCH","CardItemBaruch","AGREGAR_PRODUCTOS_CARRITO_BARUCH","OBTENER_CAJA_BARUCH","OBTENER_CAJA_ERROR_BARUCH","VentaFormBaruch","ReciboBaruch","borderColor","borderStyle","ListadoProductosBaruch","productosVentaBaruch","cajaBaruch","cajaAbiertaBaruch","reciboBaruch","productosVendidosBaruch","VentasEncabezosTableBaruch","SELECCIONAR_VENTA_BARUCH","ControlCajaBaruch","cajaActualBaruch","encabezadosHoyBaruch","ventaSeleccionadaBaruch","reporteVentasCategoriaBaruch","OBTENER_REPORTE_VENTAS_CATEGORIA_BARUCH","ABRIR_CAJA_BARUCH","subTotal","CajasTableBaruch","ListadoCajasBaruch","cajasGeneralBaruch","OBTENER_CAJAS_GENERAL_BARUCH","OBTENER_CAJAS_GENERAL_ERROR_BARUCH","VentasDetalleTableBaruch","VentasTableBaruch","totalVendido","setTotalVendido","Math","ceil","Total","VD","ReporteGananciasBaruch","ControlVentasBaruch","setFormFechas","reporteGananciasBaruch","reporteVentasProductoBaruch","OBTENER_VENTAS_BARUCH","obtenerVentas","OBTENER_LISTADO_VENTAS_HOY_BARUCH","OBTENER_VENTAS_GANANCIAS_BARUCH","VentaProductosBaruch","REPORTE_VENTA_PRODUCTOS_BARUCH","App","Router","Provider","Switch","Route","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById","productosFilter","productosNoDisponiblesFilter","reporteProductos","productosReducer","CLEAR_PRODUCTOS","categoriasReducer","informacionVenta","reporteVentas","ventasReducer","OBTENER_VENTAS","OBTENER_LISTADO_VENTAS_HOY","OBTENER_VENTAS_HOY","OBTENER_REPORTE_VENTAS","AGREGAR_PRODUCTO_CANTIDAD","carrito","CAMBIO_TOTAL_VENTA","RESTAR_PRODUCTO_CANTIDAD","ELIMINAR_PRODUCTO_CARRITO","ELIMINAR_REPORTE_VENTAS","CLEAR_VENTAS","cajaReducer","CLEAR_CAJAS","usersReducer","CLEAR_USUARIOS","loadingBaruch","errorResponseBaruch","reporteProductosBaruch","productosBaruchReducer","categoriasBaruchReducer","cajaBaruchReducer","ventaCanceladaSeleccionadaBaruch","tipoVentaBaruch","ventasHoyBaruch","ventasCanceladasBaruch","informacionVentaBaruch","reporteVentasBaruch","reporteVentasUsuariosBaruch","ventasBaruchReducer","SELECCIONAR_VENTA_CANCELADA_BARUCH","OBTENER_VENTAS_HOY_BARUCH","OBTENER_VENTAS_USUARIOS_BARUCH","OBTENER_REPORTE_VENTAS_BARUCH","OBTENER_VENTAS_CANCELADAS_BARUCH","AGREGAR_PRODUCTO_CANTIDAD_BARUCH","carritoBaruch","CAMBIO_TOTAL_VENTA_BARUCH","RESTAR_PRODUCTO_CANTIDAD_BARUCH","ELIMINAR_PRODUCTO_CARRITO_BARUCH","ELIMINAR_REPORTE_VENTAS_BARUCH","combineReducers","reduxFormReducer","OBTENER_TOTAL_VENTAS","OBTENER_TOTAL_VENTAS_BARUCH"],"mappings":"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","file":"static/js/main.ed49aefd.chunk.js","sourcesContent":["// ACTION TYPES\n\nimport { CLEAR_AUTENTICACION, LOGIN_ERROR, LOGIN_EXITOSO, LOGOUT } from \"../actionTypes\";\n\n\n// INITIAL STATE\nconst initialState = {\n    access_token: localStorage.getItem(\"access_token\"),\n    authenticated: localStorage.getItem(\"access_token\") ? true : false,\n    errorResponse: false,\n    user: null\n};\n\n// REDUCER FUNCTION\nconst authenticationReducer = (state = initialState, action) => {\n    switch(action.type){\n        case LOGIN_EXITOSO:\n            localStorage.setItem(\"access_token\", action.token);\n            localStorage.setItem(\"id\", action.user.id);\n            return {\n                ...state,\n                access_token: action.token,\n                authenticated: true,\n                errorResponse: false,\n                user: action.user\n            }\n        case LOGIN_ERROR:\n            return {\n                ...state,\n                authenticated: false,\n                errorResponse: true\n            }\n        case LOGOUT:\n            localStorage.removeItem(\"access_token\");\n            localStorage.removeItem(\"id\");\n            localStorage.removeItem(\"s\");\n            return {\n                ...state,\n                access_token: null,\n                authenticated: false,\n                errorResponse: false\n            }\n        case CLEAR_AUTENTICACION: {\n            return initialState;\n        }\n        default:\n            return state;\n    }\n}\n\nexport default authenticationReducer;","export const required = value => (value || typeof value === 'number' ? undefined : 'Required')\nexport const maxLength = max => value =>\n    value && value.length > max ? `Debe tener ${max} carácteres o menos.` : undefined\nexport const maxLength15 = maxLength(15)\nexport const maxLength50 = maxLength(50)\nexport const maxLength200 = maxLength(200)\nexport const minLength = min => value =>\n    value && value.length < min ? `Must be ${min} characters or more` : undefined\nexport const minLength2 = minLength(2)\nexport const number = value =>\n    value && isNaN(Number(value)) ? 'Must be a number' : undefined\nexport const minValue = min => value =>\n    value && value < min ? `Must be at least ${min}` : undefined\nexport const minValue13 = minValue(13)\nexport const email = value =>\n    value && !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(value)\n    ? 'Invalid email address'\n    : undefined","import React from 'react';\nimport {Field, reduxForm} from 'redux-form';\nconst validate = values => {\n    const errors = {}\n    if(!values.username){\n        errors.username = \"Debes ingresar un nombre de usuario\";\n    }\n    if(!values.password){\n        errors.password = \"Debes ingresar una contraseña\";\n    }\n\n    return errors;\n}\n\nconst renderField = ({\n        input,\n        label,\n        type,\n        meta: { touched, error, warning }\n    }) => (\n    <div>\n      <div\n        style={{maxWidth:\"500px\", margin:\"0 auto\"}}\n      >\n        <input {...input} placeholder={label} type={type} className=\"form-control\" />\n        {touched &&\n          ((error && <span style={{marginLeft: \"30px\", fontSize: \"15px\", color: \"red\", opacity: \"0.7\"}}>{error}</span>) ||\n            (warning && <span>{warning}</span>))}\n      </div>\n    </div>\n  )\n\nconst LoginForm = (props) => {\n    \n    const {handleSubmit} = props;\n    return (\n        <form \n            onSubmit={handleSubmit}\n        >\n            <div\n                className=\"form-group\"\n            >\n                <label htmlFor=\"\"><b>Ingrese usuario</b></label>\n                <Field\n                    name=\"username\"\n                    type=\"text\"\n                    component={renderField}\n                    label=\"Usuario\"\n                    autoComplete={true}\n                />\n                <br/>\n                <label htmlFor=\"\"><b>Ingrese contraseña</b></label>\n                <Field\n                    name=\"password\"\n                    type=\"password\"\n                    component={renderField}\n                    label=\"Contraseña\"\n                    \n                />\n            </div>\n            <div>\n                <button \n                    style={{backgroundColor:\"#121D3B\", color: \"white\"}}\n                    type=\"submit\"\n                    className=\"mt-2 btn btn-block\"\n                >\n                Ingresar\n                </button>\n            </div>\n        </form>\n    );\n}\n\nexport default reduxForm({\n    form: 'loginForm',\n    validate\n})(LoginForm);","import axios from 'axios';\n\n\n/*\n// Configuracion de cliente axios\nexport const clientToken = axios.create({\n    baseURL: 'http://137.184.192.120:3001/',\n    headers: {'Authorization': localStorage.getItem(\"access_token\")}\n});\n\nexport const clientTwoToken = axios.create({\n    baseURL: 'http://137.184.192.120:3002/',\n    headers: {'Authorization': localStorage.getItem(\"access_token\")}\n});\n\nexport const client = axios.create({\n    baseURL: 'http://137.184.192.120:3001/',\n});\n*/\n\nexport const clientToken = axios.create({\n    baseURL: 'http://206.189.200.56:3001/',\n    headers: {'Authorization': localStorage.getItem(\"access_token\")},\n});\n\nexport const clientTwoToken = axios.create({\n    baseURL: 'http://localhost:3002/',\n    headers: {'Authorization': localStorage.getItem(\"access_token\")}\n});\n\nexport const client = axios.create({\n    baseURL: 'http://206.189.200.56:3001/',\n});\n","export default __webpack_public_path__ + \"static/media/audiocell.08d41517.png\";","import React, {useEffect} from 'react';\nimport LoginForm from './LoginForm';\nimport {useDispatch, useSelector} from 'react-redux';\nimport { loginUser } from '../Redux/actions/loginActions';\nimport {useHistory} from 'react-router-dom';\nimport './login.css';\nimport logo from './audiocell.png';\n\nconst Login = () => {\n    const dispatch = useDispatch();\n    const history = useHistory();\n\n    const handleLogin = (values) => {\n        dispatch(loginUser(values));   \n    }\n\n    const authenticated = useSelector((state) => state.authentication.authenticated);\n\n    useEffect(() => {\n        if(authenticated){\n            history.push('/home');\n        }\n    }, [authenticated, history]);\n\n    return (\n        <div className='log-container'>\n            <div className='image-container'>\n                <img className=\"card-img-top\" src={logo} alt=\"Audiocell\" style={{width:\"90%\", margin:\"0 auto\", borderRadius: \"20px\"}}/>\n            </div>\n            <div className='login-container'>\n                <div className='form-container'>\n                    <h3>Inicio de Sesión</h3>\n                    <br />\n                    <hr />\n                    <br />\n                    <LoginForm onSubmit={handleLogin} />\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default Login;","// Actions types\nimport {\n    LOGIN_EXITOSO,\n    LOGIN_ERROR,\n    LOGOUT,\n    CLEAR_STORE,\n    CLEAR_AUTENTICACION,\n    CLEAR_CAJAS,\n    CLEAR_USUARIOS,\n    CLEAR_PRODUCTOS,\n    CLEAR_CATEGORIAS,\n    CLEAR_VENTAS\n} from '../actionTypes';\n// ACTIONS DE AUTENTICACION\nimport {client} from '../../../config/axios';\nimport Swal from 'sweetalert2';\n\n// Login Usuario\nexport const loginUser = (user) => {\n    return async (dispatch) => {\n        try {\n            const resp = await client.post('api/users/login', user);\n            debugger;\n            dispatch({\n                type: LOGIN_EXITOSO,\n                user: resp.data.user,\n                token: resp.data.access_token\n            });\n            Swal.fire({\n                imageUrl: \"icons/audiocell.jpeg\",\n                imageWidth: 200,\n                title: `Bienvenido ${resp.data.user.name}`,\n                icon:'success',\n                confirmButtonText: 'Continuar'\n            });\n        } catch(error) {\n            dispatch({\n                type: LOGIN_ERROR\n            });\n            Swal.fire(\n                'Credenciales incorrectas.',\n                'El usuario o contraseña son incorrectos.',\n                'error'\n            );\n        }\n    }\n}\n\nexport const userLogout = () => {\n    return async(dispatch) => {\n        dispatch({type: LOGOUT});\n        Swal.fire({\n            imageUrl: \"icons/audiocell.jpeg\",\n            imageWidth: 200,\n            title: `Ha finalizado sesión correctamente.`,\n            icon:'success',\n            confirmButtonText: 'Cerrar'\n        });\n    }\n}","// STORE\nimport {createStore, applyMiddleware, compose} from 'redux';\n// Redux thunk\nimport thunk from 'redux-thunk';\nconst { default: reducer } = require(\"./reducers\");\n// Reducers\nconst store = createStore(\n    reducer,\n    compose( applyMiddleware(thunk), \n        typeof window === 'object' &&\n            typeof window.__REDUX_DEVTOOLS_EXTENSION__ !== 'undefined' ? \n                window.__REDUX_DEVTOOLS_EXTENSION__() : f => f\n    )\n);\n\nexport default store;","// Actions types\nimport {\n    OBTENER_USUARIOS, CREAR_USUARIO, SELECCIONAR_USUARIO, GET_ME, ELIMINAR_USUARIO, OBTENER_TIENDAS, SELECT_TIENDA\n} from '../actionTypes';\n// ACTIONS DE AUTENTICACION\nimport {clientToken, clientTwoToken} from '../../../config/axios';\nimport Swal from 'sweetalert2';\n\n// Obtener información de usuario logueado.\nexport const obtenerUsuario = () => {\n    return async (dispatch) => {\n        try {\n            const id = localStorage.getItem(\"id\");\n            const {data} = await clientToken.post('api/users/me', {id});\n            try {\n                if(data.usuario.rol !== \"ADMIN\"){\n                    localStorage.setItem(\"s\", data.usuario.TiendaId);\n                }\n            } catch(error){}\n            dispatch({\n                type: GET_ME,\n                me: data.usuario\n            });\n        } catch(error) {\n            console.log(error);\n        }\n    }\n}\n\n// Obtener listado de usuarios\nexport const obtenerUsuarios = () => {\n    return async (dispatch) => {\n        try {\n            const {data} = await clientToken.get('api/users');\n            dispatch({\n                type: OBTENER_USUARIOS,\n                usuarios: data.users\n            });\n        } catch(error) {\n            console.log(error);\n        }\n    }\n}\n\n// Crear nuevo usuario\nexport const crearUsuario = (usuario) => {\n    return async (dispatch) => {\n        try {\n            await clientToken.post('api/users', usuario);\n            const {data} = await clientToken.get('api/users');  \n            Swal.fire(\n                'Usuario creado correctamente.',\n                'Audiocell.',\n                'success'\n            );\n\n            dispatch({\n                type: CREAR_USUARIO,\n                usuarios: data.users\n            });\n        }catch(error){\n            console.log(error);\n            Swal.fire(\n                'Ha ocurrido un error.',\n                'Audiocell.',\n                'error'\n            );\n        }\n    }\n}\n\n// Editar usuario\nexport const editarUsuario = (usuario) => {\n    return async (dispatch) => {\n        try {\n            console.log(usuario);\n            await clientToken.put('api/users', usuario);\n            const {data} = await clientToken.get('api/users');  \n            Swal.fire(\n                'Usuario editado correctamente.',\n                'Audiocell.',\n                'success'\n            );\n\n            dispatch({\n                type: CREAR_USUARIO,\n                usuarios: data.users\n            });\n        }catch(error){\n            console.log(error);\n            Swal.fire(\n                'Ha ocurrido un error.',\n                'Audiocell.',\n                'error'\n            );\n        }\n    }\n}\n\n// Seleccionar usuario para editar\nexport const seleccionarUsuario = (usuario) => {\n    return async (dispatch) => {\n        try {\n            usuario.password = null;\n            dispatch({\n                type: SELECCIONAR_USUARIO,\n                usuario\n            });\n        }catch(error){\n            console.log(error);\n            Swal.fire(\n                'Ha ocurrido un error.',\n                'Audiocell.',\n                'error'\n            );\n        }\n    }\n}\n\n// Eliminar usuario\nexport const deleteUsuario = (id) => {\n    return async (dispatch) => {\n        try {\n            const resp = await clientToken.put('api/users/delete', {id});\n            if(resp.data.data === 1){\n                const {data} = await clientToken.get('api/users');\n                dispatch({\n                    type: ELIMINAR_USUARIO,\n                    usuarios: data.users\n                });\n                Swal.fire(\n                    'Usuario eliminado correctamente.',\n                    'Audiocell.',\n                    'success'\n                );\n            } else {\n                Swal.fire(\n                    'Usuario no existente.',\n                    'Audiocell.',\n                    'error'\n                );\n            }\n        } catch(error){\n            console.log(error);\n        }\n    }\n}\n\n// Obtener listado de tiendas\nexport const obtenerTiendas = () => {\n    return async (dispatch) => {\n        try {\n            const {data} = await clientToken.get('api/tienda');\n            dispatch({\n                type: OBTENER_TIENDAS,\n                tiendas: data.tiendas\n            });\n        } catch(error) {\n            console.log(error);\n        }\n    }\n}\n\n// Seleccionar tienda\nexport const selectTienda = (tiendaId=0) => {\n    return async (dispatch) => {\n        if(tiendaId === 0){\n            tiendaId = localStorage.getItem(\"s\");\n        } else {\n            localStorage.setItem(\"s\", tiendaId);\n        }\n        try {\n            dispatch({\n                type: SELECT_TIENDA,\n                tienda: tiendaId\n            });\n        }\n        catch(error){\n            console.log(error);\n        }\n    }\n}","import React, {useEffect} from 'react';\nimport {useDispatch, useSelector} from 'react-redux';\nimport { userLogout } from './Redux/actions/loginActions';\nimport { useHistory } from 'react-router-dom';\nimport { obtenerUsuario, selectTienda } from './Redux/actions/usersActions';\nimport './style.css';\n\nconst Navbar = () => {\n\n    const dispatch = useDispatch();\n    const history = useHistory();\n\n    useEffect(() => {\n        // Obtener info del usuario logueado.\n        dispatch(selectTienda());\n        dispatch(obtenerUsuario());\n    }, [dispatch])\n\n    const handleLogout = (e) => {\n        e.preventDefault();\n        dispatch(userLogout());\n        history.push(\"/login\");\n    }\n\n    const usuario = useSelector((state) => state.usuarios.me);\n\n    return (\n        <nav className=\"navbar navbar-dark fixed-top\" style={{backgroundColor: \"#121D3B\"}}>\n            <div className=\"container-fluid\">\n                <span \n                    className=\"navbar-media\"\n                    onClick={() => history.push(\"/home\")}\n                    style={{cursor: \"pointer\"}}\n                >\n                    <img src=\"icons/inicio.png\" width=\"50px\" alt=\"Audiocell\" />\n                    Audiocell - {usuario && usuario.name}\n                </span>\n                <span\n                    className=\"navbar-media\"\n                    onClick={handleLogout}\n                    href=\"#\"\n                    style={{cursor: \"pointer\"}}\n                >\n                    Cerrar Sesión\n                </span>\n            </div>\n            \n        </nav>\n    );\n}\n\nexport default Navbar;","import React, {useEffect, useState} from 'react';\nimport './style.css';\nimport {useHistory} from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport { useDispatch } from 'react-redux';\nimport { obtenerTiendas, obtenerUsuario, selectTienda } from './Redux/actions/usersActions';\nimport Loader from 'react-loader-spinner';\nimport Navbar from './Navbar';\n\nconst Home = () => {\n    // HOOKS\n    const dispatch = useDispatch();\n    const history = useHistory();\n    // STORE\n    const usuario = useSelector((state) => state.usuarios);\n    const tiendas = useSelector((state) => state.usuarios.tiendas);\n    // STATE\n    const [selectedOption, setSelectedOption] = useState(false);\n    const [storeType, setStoreType] = useState(0);\n    const [selectedStore, setSelectedStore] = useState({});\n\n    useEffect(() => {\n        dispatch(obtenerTiendas());\n        // Obtener info del usuario logueado.\n        dispatch(obtenerUsuario());\n        dispatch((selectTienda(0)))\n    }, [dispatch])\n\n    useEffect(() => {\n        try {\n            setStoreType(usuario.me.Tienda.type);\n        }\n        catch(e){\n            setStoreType(0);\n        }\n    }, [usuario])\n\n    const seleccionarTienda = (x) => {\n        setStoreType(x.type);\n        setSelectedOption(true);\n        setSelectedStore(x);\n        dispatch(selectTienda(x.id));\n    }\n\n    if(usuario.me !== null && tiendas?.length > 0){\n        if(usuario.me.rol === \"ADMIN\"){\n            if(!selectedOption){\n                return (\n                    <>\n                        <Navbar />\n                        <div className=\"adminHomeView\">\n                            <div className='adminHomeViewBox' onClick={() => history.push(\"/usuarios\")}>\n                                <h2>Usuarios</h2>\n                                <img className=\"homeViewImage\" src=\"icons/usuarios.png\" alt=\"USUARIOS\"></img>\n                            </div>\n                            {tiendas.map((x,y) => \n                                <div className='adminHomeViewBox' onClick={() => seleccionarTienda(x)}>\n                                    <h2>{x.name}</h2>\n                                    {y%2 === 0 &&\n                                        <img src=\"icons/charging.png\" alt=\"\" className=\"homeViewImage\" style={{cursor: \"pointer\"}} onClick={()=>setSelectedOption(false)}/>\n                                    }\n                                    {y%2 !== 0 &&\n                                        <img src=\"icons/010-chat.png\" alt=\"\" className=\"homeViewImage\" style={{cursor: \"pointer\"}} onClick={()=>setSelectedOption(false)}/>\n                                    }\n                                </div>)}\n                        </div>\n                    </>\n                )\n            }\n            else if(selectedOption && selectedStore.type === 1){\n                return (\n                    <div className=\"contenedor\">\n                    <h4 style={{position: 'absolute', left: \"0\", top: \"0\", cursor: \"pointer\"}} onClick={() => setSelectedOption(false)}>←Regresar</h4>\n                    <p className='titleMenuText'>{selectedStore.name}</p>\n                    {/* VENTAS */}  \n                    <div className=\"contenedor1\" id=\"uno\" onClick={() => history.push(\"/venta\")}>\n                        <img  className=\"icon\" src=\"icons/ventas.png\" width=\"100px\" alt=\"VENTAS\"></img>\n                        <p className=\"texto\">VENTAS</p>\n                    </div>\n                    < div className=\"contenedor0\" id=\"cero\" /> \n                    {/* PRODUCTOS */}\n                    <div className=\"contenedor1\" id=\"dos\" onClick={() => history.push(\"/productos\")}>\n                        <img  className=\"icon\" src=\"icons/productos.png\" width=\"100px\" alt=\"PRODUCTOS\"></img>\n                        <p className=\"texto\">PRODUCTOS</p>\n                    </div>\n                    <div className=\"contenedor0\" id=\"cero\" /> \n                        {/* USUARIOS Y REPORTES */}\n                        {\n                            usuario.me !== null && usuario.me.rol === \"ADMIN\" &&\n                            <>\n                                < div className=\"contenedor0\" id=\"cero\" /> \n                                {/* REPORTES */}\n                                <div className=\"contenedor1\" id=\"cuatro\" onClick={() => history.push(\"/ventas\")}>\n                                    <img  className=\"icon\" src=\"icons/reportes.png\" width=\"50px\" alt=\"REPORTES\"></img>\n                                    <p className=\"texto\">REPORTES</p>\n                                </div>\n                                <div className=\"contenedor0\" id=\"cero\" /> \n                            </>\n                        }\n                        {/* CAJA */}\n                        <div className=\"contenedor1\" id=\"cinco\" onClick={() => history.push(\"/caja\")}>\n                            <img  className=\"icon\" src=\"icons/caja.png\" width=\"50px\" alt=\"CAJA\"></img>\n                            <p className=\"texto\">CAJA</p>\n                        </div>\n                        <div className=\"contenedor0\" id=\"cero\" /> \n                        {/* CANCELACIONES */}\n                        <div className=\"contenedor1\" id=\"cinco\" onClick={() => history.push(\"/canceladas\")}>\n                            <img  className=\"icon\" src=\"icons/cancelaciones.png\" width=\"50px\" alt=\"CANCELACIONES\"></img>\n                            <p className=\"texto\">CANCELACIONES</p>\n                        </div>\n                        <div className=\"contenedor0\" id=\"cero\" /> \n                    </div>\n                )\n            }\n            else if(selectedOption && selectedStore.type === 2){\n                return (\n                    <>\n                    <div className=\"contenedor\">\n                        <h4 style={{position: 'absolute', left: \"0\", top: \"0\", cursor: \"pointer\"}} onClick={() => setSelectedOption(false)}>←Regresar</h4>\n                            {/* VENTAS */}\n                            <div className=\"contenedor1\" id=\"uno\" onClick={() => history.push(\"/ventaBaruch\")}>\n                                <img  className=\"icon\" src=\"icons/ventas.png\" width=\"50px\" alt=\"VENTAS\"></img>\n                                <p className=\"texto\">VENTAS</p>\n                            </div>\n                            < div className=\"contenedor0\" id=\"cero\" /> \n                            {/* PRODUCTOS */}\n                            < div className=\"contenedor1\" id=\"dos\" onClick={() => history.push(\"/productosBaruch\")}>\n                                <img  className=\"icon\" src=\"icons/productos.png\" width=\"50px\" alt=\"PRODUCTOS\"></img>\n                                <p className=\"texto\">PRODUCTOS</p>\n                            </div>\n                            < div className=\"contenedor0\" id=\"cero\" /> \n                            {/* USUARIOS Y REPORTES */}\n                            {\n                                usuario.me !== null && usuario.me.rol === \"ADMIN\" &&\n                                <>\n                                    < div className=\"contenedor0\" id=\"cero\" /> \n                                        {/* REPORTES */}\n                                        <div className=\"contenedor1\" id=\"cuatro\" onClick={() => history.push(\"/ventasBaruch\")}>\n                                            <img  className=\"icon\" src=\"icons/reportes.png\" width=\"50px\" alt=\"REPORTES\"></img>\n                                            <p className=\"texto\">REPORTES</p>\n                                        </div>\n                                        <div className=\"contenedor0\" id=\"cero\" /> \n                                </>\n                            }\n                            {/* CAJA */}\n                            <div className=\"contenedor1\" id=\"cinco\" onClick={() => history.push(\"/cajaBaruch\")}>\n                                <img  className=\"icon\" src=\"icons/caja.png\" width=\"50px\" alt=\"CAJA\"></img>\n                                <p className=\"texto\">CAJA</p>\n                            </div>\n                            <div className=\"contenedor0\" id=\"cero\" /> \n                        </div>\n                    </>\n                )\n            }\n        }\n        // TIPO CELULARES\n        else if(usuario.me.rol === \"VENTAS\" && storeType === 1){\n            return (\n                <>\n                <div className=\"contenedor\">\n                    <Navbar />\n                    {/* VENTAS */}  \n                    <div className=\"contenedor1\" id=\"uno\" onClick={() => history.push(\"/venta\")}>\n                        <img  className=\"icon\" src=\"icons/ventas.png\" width=\"100px\" alt=\"VENTAS\"></img>\n                        <p className=\"texto\">VENTAS</p>\n                    </div>\n                    < div className=\"contenedor0\" id=\"cero\" /> \n                    {/* PRODUCTOS */}\n                    <div className=\"contenedor1\" id=\"dos\" onClick={() => history.push(\"/productos\")}>\n                        <img  className=\"icon\" src=\"icons/productos.png\" width=\"100px\" alt=\"PRODUCTOS\"></img>\n                        <p className=\"texto\">PRODUCTOS</p>\n                    </div>\n                    <div className=\"contenedor0\" id=\"cero\" /> \n                        {/* USUARIOS Y REPORTES */}\n                        {\n                            usuario.me !== null && usuario.me.rol === \"ADMIN\" &&\n                            <>\n                                < div className=\"contenedor0\" id=\"cero\" /> \n                                {/* REPORTES */}\n                                <div className=\"contenedor1\" id=\"cuatro\" onClick={() => history.push(\"/ventas\")}>\n                                    <img  className=\"icon\" src=\"icons/reportes.png\" width=\"50px\" alt=\"REPORTES\"></img>\n                                    <p className=\"texto\">REPORTES</p>\n                                </div>\n                                <div className=\"contenedor0\" id=\"cero\" /> \n                            </>\n                        }\n                        {/* CAJA */}\n                        <div className=\"contenedor1\" id=\"cinco\" onClick={() => history.push(\"/caja\")}>\n                            <img  className=\"icon\" src=\"icons/caja.png\" width=\"50px\" alt=\"CAJA\"></img>\n                            <p className=\"texto\">CAJA</p>\n                        </div>\n                        <div className=\"contenedor0\" id=\"cero\" /> \n                        {/* CANCELACIONES */}\n                        <div className=\"contenedor1\" id=\"cinco\" onClick={() => history.push(\"/canceladas\")}>\n                            <img  className=\"icon\" src=\"icons/cancelaciones.png\" width=\"50px\" alt=\"CANCELACIONES\"></img>\n                            <p className=\"texto\">CANCELACIONES</p>\n                        </div>\n                        <div className=\"contenedor0\" id=\"cero\" /> \n                    </div>\n                    </>\n            )\n        }\n        // TIPO DETALLE\n        else if(usuario.me.rol === \"VENTAS\" && storeType === 2){\n            return (\n                <div className=\"contenedor p-5\">\n                    <Navbar />\n                    <h4 style={{position: 'absolute', left: \"0\", top: \"0\", cursor: \"pointer\"}} onClick={() => setSelectedOption(false)}>←Regresar</h4>\n                    {/* VENTAS */}\n                    <div className=\"contenedor1\" id=\"uno\" onClick={() => history.push(\"/ventaBaruch\")}>\n                        <img  className=\"icon\" src=\"icons/ventas.png\" width=\"50px\" alt=\"VENTAS\"></img>\n                        <p className=\"texto\">VENTAS</p>\n                    </div>\n                    < div className=\"contenedor0\" id=\"cero\" /> \n                    {/* PRODUCTOS */}\n                    < div className=\"contenedor1\" id=\"dos\" onClick={() => history.push(\"/productosBaruch\")}>\n                        <img  className=\"icon\" src=\"icons/productos.png\" width=\"50px\" alt=\"PRODUCTOS\"></img>\n                        <p className=\"texto\">PRODUCTOS</p>\n                    </div>\n                    < div className=\"contenedor0\" id=\"cero\" /> \n                    {/* USUARIOS Y REPORTES */}\n                    {\n                        usuario.me !== null && usuario.me.rol === \"ADMIN\" &&\n                        <>\n                            < div className=\"contenedor0\" id=\"cero\" /> \n                                {/* REPORTES */}\n                                <div className=\"contenedor1\" id=\"cuatro\" onClick={() => history.push(\"/ventasBaruch\")}>\n                                    <img  className=\"icon\" src=\"icons/reportes.png\" width=\"50px\" alt=\"REPORTES\"></img>\n                                    <p className=\"texto\">REPORTES</p>\n                                </div>\n                                <div className=\"contenedor0\" id=\"cero\" /> \n                        </>\n                    }\n                    {/* CAJA */}\n                    <div className=\"contenedor1\" id=\"cinco\" onClick={() => history.push(\"/cajaBaruch\")}>\n                        <img  className=\"icon\" src=\"icons/caja.png\" width=\"50px\" alt=\"CAJA\"></img>\n                        <p className=\"texto\">CAJA</p>\n                    </div>\n                    <div className=\"contenedor0\" id=\"cero\" /> \n                </div>\n            )\n        }\n        else if(usuario.me.rol === \"VENTAS\" && storeType === 0){\n            return( <p></p> )\n        }\n    }else {\n        return(\n            <div\n                style={{display:\"flex\", alignItems:\"center\", justifyContent:\"center\"}}\n            >\n                <Loader\n                    type=\"ThreeDots\"\n                    color=\"#121D3B\"\n                    height={100}\n                    width={100}\n                />\n            </div>\n        )\n    }\n}\n\nexport default Home;","import React, {useEffect} from 'react'\nimport {useHistory} from 'react-router-dom';\nconst VerificationAuth = (props) => {\n    const history = useHistory();\n    useEffect(() => {\n        if(!localStorage.getItem(\"access_token\")){\n            history.push('/login');\n        }\n    }, [history])\n    return (\n        <>\n            {props.children}\n        </>\n    )\n}\n\nexport default VerificationAuth;\n","// Actions types\nimport {\n    OBTENER_PRODUCTOS, OBTENER_PRODUCTOS_ERROR, CREAR_PRODUCTO, SELECTED_PRODUCT, EDITAR_PRODUCTO, OBTENER_TOTAL_PRODUCTOS, OBTENER_REPORTE_PRODUCTOS, OBTENER_LISTADO_STOCK, OBTENER_PRODUCTOS_VENTA, OBTENER_REPORTE_STOCK, ELIMINAR_STOCK, OBTENER_TOTAL_INVERTIDO\n} from '../actionTypes';\n// ACTIONS DE AUTENTICACION\nimport {clientToken} from '../../../config/axios';\nimport Swal from 'sweetalert2';\n\n// Obtener total de productos registrados\nexport const obtenerTotalProductos = (buscador='') => {\n    return async (dispatch) => {\n        try {\n            const {data} = await clientToken.get('api/producto/total', {params: {buscador}});\n            dispatch({\n                type: OBTENER_TOTAL_PRODUCTOS,\n                totalProductos: data.total\n            });\n        } catch(error) {\n            dispatch({\n                type: OBTENER_PRODUCTOS_ERROR\n            });\n        }\n    }\n}\n\nexport const obtenerProductos = (page=1,buscador='') => {\n    return async (dispatch, getState) => {\n        try {\n            const tienda = Number(getState().usuarios.selectedTienda) || 0;\n            const productos = await clientToken.get(`api/producto`, {params: {page, buscador,tienda}});\n            dispatch({\n                type: OBTENER_PRODUCTOS,\n                productos: productos.data.productos,\n                productosNoDisponibles: productos.data.productosNoDisponibles\n            });\n        } catch(error) {\n            dispatch({\n                type: OBTENER_PRODUCTOS_ERROR\n            });\n        }\n    }\n}\n\nexport const obtenerProductosVenta = (page=1,buscador='') => {\n    return async (dispatch, getState) => {\n        try {\n            const tienda = Number(getState().usuarios.selectedTienda) || 0;\n            const {data} = await clientToken.get('api/venta/productos', {params: {page, buscador,tienda}});\n            dispatch({\n                type: OBTENER_PRODUCTOS_VENTA,\n                productosVenta: data.results\n            });\n        } catch(error) {\n            dispatch({\n                type: OBTENER_PRODUCTOS_ERROR\n            });\n        }\n    }\n}\n\nexport const obtenerListadoStock = (producto) => {\n    return async (dispatch) => {\n        try {\n            const {data} = await clientToken.get('api/producto/stock', {params: {id: producto}});\n            dispatch({\n                type: OBTENER_LISTADO_STOCK,\n                listado: data.listado\n            });\n        } catch(error) {\n            dispatch({\n                type: OBTENER_PRODUCTOS_ERROR\n            });\n        }\n    }\n}\n\nexport const crearProducto = (producto, buscador='') => {\n    return async (dispatch, getState) => {\n        try {\n            const tienda = Number(getState().usuarios.selectedTienda) || 0;\n            producto = {\n                ...producto,\n                precioCompra: parseInt(producto.precioCompra),\n                precioVenta: parseInt(producto.precioVenta),\n                stock: parseInt(producto.stock),\n                tiendaId: tienda\n            }\n\n            await clientToken.post('api/producto', producto);\n            const productos = await clientToken.get('api/producto', {params: {page: 1, buscador, tienda}});\n            Swal.fire(\n                'Producto creado correctamente.',\n                'Audiocell.',\n                'success'\n            );\n            dispatch({\n                type: CREAR_PRODUCTO,\n                productos: productos.data.productos,\n                productosNoDisponibles: productos.data.productosNoDisponibles\n            });\n        } catch(error){\n            console.log(error);\n        }\n    }\n}\n\nexport const crearProductoStock = (producto) => {\n    return async (dispatch, getState) => {\n        try {\n            const tienda = Number(getState().usuarios.selectedTienda) || 0;\n            await clientToken.post('api/producto/stock', producto);\n            const productos = await clientToken.get('api/producto', {params: {page: 1,buscador:'',tienda}});\n            // Obtener total invertido\n            const {data} = await clientToken.get('api/venta/invertido', {params: {tienda}});\n            const totalInvertido = data.results[0].Invertido;\n            if(isNaN(totalInvertido)){\n                dispatch({\n                    type: OBTENER_TOTAL_INVERTIDO,\n                    totalInvertido: parseFloat(0)\n                });\n            } else {\n                dispatch({\n                    type: OBTENER_TOTAL_INVERTIDO,\n                    totalInvertido: parseFloat(totalInvertido)\n                });\n            }\n\n            Swal.fire(\n                'Stock agregado correctamente.',\n                'Audiocell.',\n                'success'\n            );\n            dispatch({\n                type: CREAR_PRODUCTO,\n                productos: productos.data.productos,\n                productosNoDisponibles: productos.data.productosNoDisponibles\n            });\n        } catch(error){\n            console.log(error);\n        }\n    }\n}\n\nexport const editarProducto = (producto) => {\n    return async (dispatch, getState) => {\n        try {\n            const tienda = Number(getState().usuarios.selectedTienda) || 0;\n            producto = {\n                ...producto,\n                categoria: parseInt(producto.categoria),\n                precioVenta: parseInt(producto.precioVenta),\n                precioCompra: parseInt(producto.precioCompra),\n                stock: parseInt(producto.stock)\n            }\n            const resp = await clientToken.put('api/producto', producto);\n            if(resp.data.data === 1){\n                const productos = await clientToken.get('api/producto', {params: {page: 1, buscador: '', tienda}});\n                dispatch({\n                    type: EDITAR_PRODUCTO,\n                    productos: productos.data.productos,\n                    productosNoDisponibles: productos.data.productosNoDisponibles\n                });\n                Swal.fire(\n                    'Producto editado correctamente.',\n                    'Audiocell.',\n                    'success'\n                );\n            } else {\n                Swal.fire(\n                    'Producto no existente.',\n                    'Audiocell.',\n                    'error'\n                );\n            }\n        } catch(error){\n            console.log(error);\n        }\n    }\n}\n\nexport const deleteProducto = (id) => {\n    return async (dispatch, getState) => {\n        try {\n            const tienda = Number(getState().usuarios.selectedTienda) || 0;\n            const resp = await clientToken.put('api/producto/delete', {id: id});\n            if(resp.data.data === 1){\n                \n                const productos = await clientToken.get('api/producto', {params: {page: 1, buscador: '', tienda}});\n                dispatch({\n                    type: EDITAR_PRODUCTO,\n                    productos: productos.data.productos,\n                    productosNoDisponibles: productos.data.productosNoDisponibles\n                });\n                Swal.fire(\n                    'Producto eliminado correctamente.',\n                    'Audiocell.',\n                    'success'\n                );\n            } else {\n                Swal.fire(\n                    'Producto no existente.',\n                    'Audiocell.',\n                    'error'\n                );\n            }\n        } catch(error){\n            console.log(error);\n        }\n    }\n}\n\nexport const seleccionarProducto = (producto) => {\n    return async(dispatch) => {\n        try {\n            dispatch({\n                type: SELECTED_PRODUCT,\n                producto\n            });\n        } catch(error){\n            console.log(error);\n        }\n    }\n}\n\n/* REPORTES */\nexport const getReporteProductos = () => {\n    return async(dispatch) => {\n        try {\n            const productos = await clientToken.get('api/producto/reporte');\n            dispatch({\n                type: OBTENER_REPORTE_PRODUCTOS,\n                productos: productos.data.productos\n            });\n        } catch(error){\n            console.log(error);\n        }\n    }\n}\n\nexport const getReporteProductosStock = (formFechas) => {\n    return async(dispatch, getState) => {\n        try {\n            const tienda = Number(getState().usuarios.selectedTienda) || 0;\n            const {data} = await clientToken.get('api/producto/reporteStock', {params: {inicio: formFechas.fechaInicio, fin: formFechas.fechaFin, tienda}});\n            dispatch({\n                type: OBTENER_REPORTE_STOCK,\n                productos: data.results\n            });\n        } catch(error){\n            console.log(error);\n        }\n    }\n}\n\nexport const deleteStock = (id) => {\n    return async (dispatch, getState) => {\n        try {\n            const tienda = Number(getState().usuarios.selectedTienda) || 0;\n            await clientToken.put('api/producto/stock', {id});\n            const productos = await clientToken.get('api/producto', {params: {page: 1, buscador: '',tienda}});\n            Swal.fire(\n                'Stock eliminado correctamente.',\n                'Audiocell.',\n                'success'\n            );\n            dispatch({\n                type: CREAR_PRODUCTO,\n                productos: productos.data.productos,\n                productosNoDisponibles: productos.data.productosNoDisponibles\n            });\n\n            // Obtener total invertido\n            const {data} = await clientToken.get('api/venta/invertido', {params: {tienda}});\n            const totalInvertido = data.results[0].Invertido;\n            if(!totalInvertido || isNaN(totalInvertido)){\n                dispatch({\n                    type: OBTENER_TOTAL_INVERTIDO,\n                    totalInvertido: parseFloat(0)\n                });\n            } else {\n                dispatch({\n                    type: OBTENER_TOTAL_INVERTIDO,\n                    totalInvertido: parseFloat(totalInvertido)\n                });\n            }\n        } catch(error){\n            console.log(error);\n        }\n    }\n}\n\n// Obtener listado de usuarios\nexport const obtenerTotalInvertido = () => {\n    return async (dispatch, getState) => {\n        try {\n            const tienda = Number(getState().usuarios.selectedTienda) || 0;\n            const {data} = await clientToken.get('api/venta/invertido', {params: {tienda}});\n            const totalInvertido = data.results[0].Invertido;\n            if(!totalInvertido){\n                dispatch({\n                    type: OBTENER_TOTAL_INVERTIDO,\n                    totalInvertido: parseFloat(0)\n                });\n            }\n            else if(isNaN(totalInvertido)){\n                dispatch({\n                    type: OBTENER_TOTAL_INVERTIDO,\n                    totalInvertido: parseFloat(0)\n                });\n                Swal.fire(\n                    'Error al obtener total invertido.',\n                    'Audiocell.',\n                    'error'\n                );\n            }else {\n                dispatch({\n                    type: OBTENER_TOTAL_INVERTIDO,\n                    totalInvertido: parseFloat(totalInvertido)\n                });\n            }\n        } catch(error) {\n            console.log(error);\n        }\n    }\n}\n\nexport const limpiarProductos = () => {\n    return async (dispatch, getState) => {\n        try {\n            dispatch({\n                type: OBTENER_PRODUCTOS,\n                productos: null,\n                productosNoDisponibles: null\n            });\n        } catch(error) {\n            dispatch({\n                type: OBTENER_PRODUCTOS_ERROR\n            });\n        }\n    }\n}\n","// Actions types\nimport {\n    SELECCIONAR_VENTA, AGREGAR_PRODUCTO_CARRITO, CAMBIO_TOTAL_VENTA, ELIMINAR_PRODUCTO_CARRITO, OBTENER_TOTAL_VENTAS, OBTENER_VENTAS, OBTENER_VENTAS_ERROR, VENTA_REALIZADA, OBTENER_VENTAS_CANCELADAS, SELECCIONAR_VENTA_CANCELADA, OBTENER_REPORTE_VENTAS, ELIMINAR_REPORTE_VENTAS, OBTENER_VENTAS_HOY, OBTENER_VENTAS_USUARIOS, OBTENER_LISTADO_VENTAS_HOY, OBTENER_REPORTE_VENTAS_CATEGORIA, OBTENER_VENTAS_GANANCIAS, AGREGAR_PRODUCTOS_CARRITO, OBTENER_VENTAS_ENCABEZADO_HOY, REPORTE_VENTA_PRODUCTOS, CLEAR_LISTADOS_VENTAS\n} from '../actionTypes';\n// ACTIONS DE AUTENTICACION\nimport {clientToken} from '../../../config/axios';\nimport Swal from 'sweetalert2';\n\n/* OBTENER EL TOTAL DE VENTAS REALIZADAS */\nexport const obtenerTotalVentas = () => {\n    return async (dispatch) => {\n        try {\n            const {data} = await clientToken.get('api/venta/total');\n            dispatch({\n                type: OBTENER_TOTAL_VENTAS,\n                totalVentas: data.total\n            });\n        } catch(error) {\n            dispatch({\n                type: OBTENER_VENTAS_ERROR\n            });\n        }\n    }\n}\n\n/* OBTENER TODAS LAS VENTAS GENERADAS EN EL SISTEMA */\nexport const obtenerVentas = (formFechas) => {\n    return async (dispatch, getState) => {\n        try {\n            const tienda = Number(getState().usuarios.selectedTienda) || 0;\n            const ventas = await clientToken.get('api/venta', {params: {inicio: formFechas.fechaInicio, fin: formFechas.fechaFin, tienda}});\n            dispatch({\n                type: OBTENER_VENTAS,\n                ventas: ventas.data.ventas\n            });\n        } catch(error) {\n            dispatch({\n                type: OBTENER_VENTAS_ERROR\n            });\n        }\n    }\n}\n\nexport const obtenerListadoVentasHoy = () => {\n    return async (dispatch, getState) => {\n        try {\n            const tienda = Number(getState().usuarios.selectedTienda) || 0;\n            const ventas = await clientToken.get('api/venta/hoy', {params: {tienda}});\n            dispatch({\n                type: OBTENER_LISTADO_VENTAS_HOY,\n                ventas: ventas.data.ventas\n            });\n        } catch(error) {\n            dispatch({\n                type: OBTENER_VENTAS_ERROR\n            });\n        }\n    }\n}\n\n/* OBTENER REPORTE DE VENTAS DE USUARIOS */\nexport const obtenerVentasUsuarios = (formFechas) => {\n    return async (dispatch, getState) => {\n        try {\n            const tienda = Number(getState().usuarios.selectedTienda) || 0;\n            const {data} = await clientToken.get('api/venta/usuarios', {params: {inicio: formFechas.fechaInicio, fin: formFechas.fechaFin, tienda}});\n            dispatch({\n                type: OBTENER_VENTAS_USUARIOS,\n                ventas:data.results\n            });\n        } catch(error) {\n            dispatch({\n                type: OBTENER_VENTAS_ERROR\n            });\n        }\n    }\n}\n\n/* OBTENER TODAS LAS VENTAS HOY */\nexport const obtenerVentasHoy = () => {\n    return async (dispatch, getState) => {\n        try {\n            const tienda = Number(getState().usuarios.selectedTienda) || 0;\n            const ventas = await clientToken.get('api/venta/hoy', {params: {tienda}});\n            dispatch({\n                type: OBTENER_VENTAS_HOY,\n                ventas: ventas.data.ventas\n            });\n        } catch(error) {\n            dispatch({\n                type: OBTENER_VENTAS_ERROR\n            });\n        }\n    }\n}\n\n/* OBTENER TODAS LAS VENTAS CANCELADAS EN EL SISTEMA */\nexport const obtenerVentasCanceladas = ({fechaInicio, fechaFin}) => {\n    return async (dispatch, getState) => {\n        try {\n            const tienda = Number(getState().usuarios.selectedTienda) || 0;\n            const ventas = await clientToken.get('api/venta/canceladas', {params: {fechaInicio, fechaFin, tienda}});\n            dispatch({\n                type: OBTENER_VENTAS_CANCELADAS,\n                ventas: ventas.data.ventas\n            });\n        } catch(error) {\n            dispatch({\n                type: OBTENER_VENTAS_ERROR\n            });\n        }\n    }\n}\n\nexport const seleccionarVenta = (venta) => {\n    return async (dispatch) => {\n        try {\n            const {data} = await clientToken.get('api/venta/recibo', {params: {id:venta}});\n            console.log(data);\n            dispatch({\n                type: SELECCIONAR_VENTA,\n                venta: data\n            });\n        } catch(error) {\n            console.log(error);\n        }\n    }\n}\n\nexport const seleccionarVentaCancelada = (venta) => {\n    return async (dispatch) => {\n        try {\n            console.log(venta);\n            const {data} = await clientToken.get('api/venta/cancelada', {params: {id:venta.id}});\n            dispatch({\n                type: SELECCIONAR_VENTA_CANCELADA,\n                venta: data\n            });\n        } catch(error) {\n            console.log(error);\n        }\n    }\n}\n\n/* GENERAR UNA NUEVA VENTA */\nexport const generarVenta = (formValues) => {\n    return async (dispatch, getState) => {\n        try {\n            const state = getState();\n            const venta = {\n                venta: formValues,\n                total: parseInt(state.ventas.total),\n                usuario: state.usuarios.me\n            }\n            const tienda = Number(state.usuarios.selectedTienda) || 0;\n            const productos = state.ventas.productosSeleccionados;\n            const {data} = await clientToken.post('api/venta', {venta, productos, tienda});\n            await dispatch({\n                type: VENTA_REALIZADA,\n                recibo: data.recibo,\n                productosVendidos: data.productosVendidos\n            });\n            await dispatch({\n                type: \"ELIMINAR_RECIBO\"\n            })\n            Swal.fire(\n                'Venta realizada correctamente.',\n                'Audiocell.',\n                'success'\n            );\n            Swal.fire({\n                title: 'Venta realizada correctamente',\n                confirmButtonText: 'Continuar',\n                }).then((result) => {\n                    if (result.isConfirmed) {\n                        window.location.reload(false);\n                    }\n                })\n        }catch(error){\n            console.log(error);\n            Swal.fire(\n                'Ha ocurrido un error.',\n                'Audiocell.',\n                'error'\n            );\n        }\n    }\n}\n\nexport const cancelarVenta = (venta) => {\n    return async (dispatch, getState) => {\n        try {\n            const tienda = Number(getState().usuarios.selectedTienda) || 0;\n            await clientToken.post('api/venta/delete', {venta, tienda});\n            dispatch({\n                type: OBTENER_VENTAS_HOY,\n                ventas: []\n            });\n            Swal.fire(\n                'Venta cancelada correctamente.',\n                'Audiocell.',\n                'success'\n            );\n        } catch(error) {\n            dispatch({\n                type: OBTENER_VENTAS_ERROR\n            });\n        }\n    }\n}\n\nexport const cancelarVentaCaja = (venta) => {\n    return async (dispatch, getState) => {\n        try {\n            const tienda = Number(getState().usuarios.selectedTienda) || 0;\n            await clientToken.post('api/venta/delete', {venta,tienda});\n            Swal.fire(\n                'Venta cancelada correctamente.',\n                'Audiocell.',\n                'success'\n            );\n        } catch(error) {\n            dispatch({\n                type: OBTENER_VENTAS_ERROR\n            });\n        }\n    }\n}\n\n/* AGREGAR PRODUCTO PARA VENDER */\nexport const agregarProductoCarrito = (producto) => {\n    return async (dispatch, getState) => {\n        try {\n            // Generar la estructura del objeto producto.\n            const state = getState();\n            const productosCarrito = state.ventas.productosSeleccionados;\n            let productoExistente = false;\n            if((producto.name).includes(\"Kit\") || (producto.name).includes(\"Accesorios\") || (producto.name).includes(\"SIM\")){\n                producto = {\n                    ...producto,\n                    precioVenta: parseInt(producto.precioVenta),\n                    stock: parseInt(producto.stock),\n                    idProducto: producto.id,\n                    precioFinal: parseInt(producto.precioVenta)\n                }\n            } else {\n                producto = {\n                    ...producto,\n                    precioVenta: 0,\n                    stock: parseInt(producto.stock),\n                    idProducto: producto.id,\n                    precioFinal: 0\n                }\n            }\n            if(productosCarrito){\n                \n                for(let p of productosCarrito){\n                    if(p.id===producto.id){\n                        productoExistente=true;\n                        break;\n                    }\n                }\n            }\n            if(productoExistente===true){\n                Swal.fire(\n                    'Producto ya existente.',\n                    'Audiocell.',\n                    'error'\n                );   \n            } else {\n                const total = (producto.name).includes(\"Kit\") || (producto.name).includes(\"Accesorios\") || (producto.name).includes(\"SIM\") ? producto.precioVenta : 0;\n                dispatch({\n                    type: AGREGAR_PRODUCTO_CARRITO,\n                    producto: producto,\n                    total\n                });\n            }\n        } catch(error){\n            console.log(error);\n        }\n    }\n}\n\nexport const cambiarCantidadPrecio = (producto) => {\n    return async (dispatch, getState) => {\n        try {\n            const state = getState();\n            const listadoProductosSeleccionados = state.ventas.productosSeleccionados;\n            var total = 0;\n            listadoProductosSeleccionados.map((prod) => {\n                if(prod.id===producto.id){\n                    prod.precioFinal = parseInt(producto.cantidad);\n                }\n                total = total + prod.precioFinal;\n                return prod;\n            });\n            dispatch({\n                type: AGREGAR_PRODUCTOS_CARRITO,\n                productos: listadoProductosSeleccionados,\n                total\n            })\n        } catch(error){\n            console.log(error);\n        }\n    }\n}\n\nexport const cambiarCantidadEpin = (cantidad) => {\n    return async (dispatch) => {\n        dispatch({\n            type: CAMBIO_TOTAL_VENTA,\n            total: cantidad\n        });\n    }\n}\n\nexport const eliminarProductoCarrito = (id) => {\n    return async (dispatch, getState) => {\n        try {\n            const state = getState();\n            const prods = state.ventas.productosSeleccionados;\n            var total = 0;\n            const nuevosProductosSeleccionados = prods.length > 1 ? [] : null;\n            prods.forEach((p) => {\n                if(p.id !== id){\n                    total = total + p.precioFinal;\n                    nuevosProductosSeleccionados.push(p);\n                }\n            });\n            dispatch({\n                type: AGREGAR_PRODUCTOS_CARRITO,\n                productos: nuevosProductosSeleccionados,\n                total\n            });\n        } catch(error) {\n            console.log(error);\n        }\n    }\n}\n\n// GET REPORTE VENTAS\nexport const getReporteVentas = ({fechaInicio, fechaFin}) => {\n    return async (dispatch) => {\n        try {\n            const {data} = await clientToken.get('api/venta/reporte', {params: {fechaInicio,fechaFin}});\n            dispatch({\n                type: OBTENER_REPORTE_VENTAS,\n                ventas: data\n            });\n        } catch(error) {\n            dispatch({\n                type: OBTENER_VENTAS_ERROR\n            });\n        }\n    }\n}\n// GET REPORTE GANANCIAS\nexport const getReporteVentasGanancias = ({fechaInicio, fechaFin}) => {\n    return async (dispatch, getState) => {\n        try {\n            const tienda = Number(getState().usuarios.selectedTienda) || 0;\n            const {data} = await clientToken.get('api/venta/ganancias', {params: {fechaInicio,fechaFin,tienda}});\n            dispatch({\n                type: OBTENER_VENTAS_GANANCIAS,\n                ventas: data.results\n            });\n        } catch(error) {\n            dispatch({\n                type: OBTENER_VENTAS_ERROR\n            });\n        }\n    }\n}\n\n// GET REPORTE VENTAS DEL DIA POR CATEGORÍA\nexport const getReporteVentasCategoriaHoy = () => {\n    return async (dispatch) => {\n        try {\n            const {data} = await clientToken.get('api/venta/categoria');\n            console.log(data);\n            dispatch({\n                type: OBTENER_REPORTE_VENTAS_CATEGORIA,\n                ventas: data.results\n            });\n        } catch(error) {\n            dispatch({\n                type: OBTENER_VENTAS_ERROR\n            });\n        }\n    }\n}\n\nexport const deleteReporteVentas = () => {\n    return async (dispatch) => {\n        try {\n            dispatch({\n                type: ELIMINAR_REPORTE_VENTAS\n            })\n        } catch(error){\n\n        }\n    }\n}\n\n/* OBTENER TODAS LAS VENTAS HOY */\nexport const getReporteEncabezadosHoy = () => {\n    return async (dispatch, getState) => {\n        try {\n            const tienda = Number(getState().usuarios.selectedTienda) || 0;\n            debugger;\n            const ventas = await clientToken.get('api/venta/hoyEncabezado', {params: {tienda}});\n            dispatch({\n                type: OBTENER_VENTAS_ENCABEZADO_HOY,\n                ventas: ventas.data.ventas\n            });\n        } catch(error) {\n            dispatch({\n                type: OBTENER_VENTAS_ERROR\n            });\n        }\n    }\n}\n\nexport const getReporteEncabezados = ({fechaInicio, fechaFin}) => {\n    return async (dispatch, getState) => {\n        try {\n            const tienda = Number(getState().usuarios.selectedTienda) || 0;\n            const {data} = await clientToken.get('api/venta/reporteEncabezados', {params: {fechaInicio,fechaFin, tienda}});\n            dispatch({\n                type: OBTENER_VENTAS_ENCABEZADO_HOY,\n                ventas: data.ventas\n            });\n        } catch(error) {\n            dispatch({\n                type: OBTENER_VENTAS_ERROR\n            });\n        }\n    }\n}\n\nexport const getReporteVentasProducto = (producto) => {\n    return async (dispatch) => {\n        try {\n            const {data} = await clientToken.get('api/venta/ventasProducto', {params: {id:producto.value}});\n            console.log(\"THEEES\", data.productosVendidos);\n            dispatch({\n                type: REPORTE_VENTA_PRODUCTOS,\n                ventas: data.productosVendidos\n            });\n        } catch(error) {\n            console.log(error);\n        }\n    }\n}\n\nexport const clearListadosVentas = () => {\n    return async (dispatch) => {\n        try {\n            dispatch({\n                type: CLEAR_LISTADOS_VENTAS\n            });\n        } catch(error) {\n            console.log(error);\n        }\n    }\n}","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { agregarProductoCarrito } from '../Redux/actions/ventasActions';\n\nconst ProductoCard = ({id, name, producto, precioVenta, color, stock}) => {\n    const dispatch = useDispatch();\n\n    const handleAddCarrito = () => {\n        console.log(name);\n        if(name.includes(\"Kit\") || name.includes(\"Accesorios\")){\n            if(id && name && producto && precioVenta && color && stock){\n                dispatch(agregarProductoCarrito({id,name,producto,precioVenta, color}))\n            }\n        }else {\n            dispatch(agregarProductoCarrito({id,name,producto,precioVenta}))\n        }\n    }\n\n    return (\n        <div className=\"productCard\">\n            <h6><strong>{name}</strong></h6>\n            <h6><strong>{producto}</strong></h6>\n            {\n                color ?\n                <p>{color}</p> :\n                <p>---</p>\n            }\n            <p>Stock: {stock}</p>\n            {\n                precioVenta ?\n                <p>Q.{precioVenta}</p> :\n                <p>---</p>\n            }\n            <button\n                className=\"btn btn-primary btn-block mb-0\"\n                onClick={handleAddCarrito}\n            >\n                Agregar\n            </button>\n        </div>\n    );\n}\n\nexport default ProductoCard;","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport {eliminarProductoCarrito, cambiarCantidadEpin, cambiarCantidadPrecio} from '../Redux/actions/ventasActions';\n\nconst CardItem = ({producto}) => {\n    \n    const dispatch = useDispatch();\n\n    // const handleAddCantidad = () => {\n    //     dispatch(agregarCantidadProducto(producto.id));\n    // }\n\n    // const handleSubtractCantidad = () => {\n    //     dispatch(restarCantidadProducto(producto.id));\n    // }\n\n    const handleDeleteProduct = () => {\n        dispatch(eliminarProductoCarrito(producto.id));\n    }\n\n    const handleTotal = (e) => {\n        dispatch(cambiarCantidadEpin(e.target.value));\n    }\n\n    const handleChangePrecio = (e) => {\n        dispatch(cambiarCantidadPrecio({id: producto.id,cantidad: e.target.value}));\n    }\n\n    return(\n        <div className=\"CardItem\">\n            <h5><b>{producto.name}</b></h5>\n            <p>{producto.producto}</p>\n            {\n                (producto.name).includes(\"Epin\") ? (\n                    <input\n                        className=\"form-control\"\n                        type=\"number\"\n                        placeholder=\"Ingrese cantidad\"\n                        onChange={handleChangePrecio}\n                    />\n                ) : (\n                    <>\n                        <p>Color: {producto.color ? producto.color: \"-\"}</p>\n                        <p>Precio: {producto.precioVenta ? producto.precioVenta : \"-\"}</p>\n                        <input\n                            className=\"form-control\"\n                            type=\"number\"\n                            placeholder=\"Ingrese precio\"\n                            defaultValue={producto.precioFinal}\n                            onChange={handleChangePrecio}\n                        />\n                    </>\n                )\n            }\n            <br/>\n            <div>\n                <button\n                    className=\"btn btn-danger\"\n                    onClick={handleDeleteProduct}\n                >\n                    Eliminar\n                </button>\n            </div>\n        </div>\n    );\n}\n\nexport default CardItem;","// Actions types\nimport {\n    ABRIR_CAJA, OBTENER_CAJA, OBTENER_CAJA_ERROR, OBTENER_CAJAS_GENERAL, OBTENER_CAJAS_GENERAL_ERROR\n} from '../actionTypes';\n// ACTIONS DE AUTENTICACION\nimport {clientToken} from '../../../config/axios';\nimport Swal from 'sweetalert2';\n\nexport const obtenerCajas = () => {\n    return async (dispatch, getState) => {\n        try {\n            const tienda = Number(getState().usuarios.selectedTienda) || 0;\n            const cajasObtenidas = await clientToken.get('api/caja/general', {params: {tienda}});\n            dispatch({\n                type: OBTENER_CAJAS_GENERAL,\n                cajas: cajasObtenidas.data.cajas\n            });\n        } catch(error) {\n            dispatch({\n                type: OBTENER_CAJAS_GENERAL_ERROR\n            });\n        }\n    }\n}\n\nexport const obtenerCaja = () => {\n    return async (dispatch, getState) => {\n        try {\n            const tienda = Number(getState().usuarios.selectedTienda) || 0;\n            const cajaActual = await clientToken.get('api/caja', {params: {tienda}});\n            if(cajaActual.data.ok === false){\n                dispatch({\n                    type: OBTENER_CAJA,\n                    cajaActual: {status: \"CERRADO\", cantidadEfectivoCierre: 0},\n                    cajaAbierta: false\n                });\n            } else {\n                if(cajaActual.data.cajaActual.status === \"CERRADO\"){\n                    dispatch({\n                        type: OBTENER_CAJA,\n                        cajaActual: cajaActual.data.cajaActual,\n                        cajaAbierta: false\n                    });\n                } else if(cajaActual.data.cajaActual.status === \"ABIERTO\"){\n                    dispatch({\n                        type: OBTENER_CAJA,\n                        cajaActual: cajaActual.data.cajaActual,\n                        cajaAbierta: true\n                    });\n                }\n            }\n        } catch(error) {\n            dispatch({\n                type: OBTENER_CAJA_ERROR\n            });\n        }\n    }\n}\n\nexport const abrirCaja = (apertura) => {\n    return async (dispatch, getState) => {\n        try {\n            const caja = {\n                apertura\n            }\n            const tienda = Number(getState().usuarios.selectedTienda) || 0;\n            await clientToken.post('api/caja', {...caja, tienda});\n            const cajaActual = await clientToken.get('api/caja', {params: {tienda}});\n\n            Swal.fire(\n                'Caja abierta correctamente.',\n                'Audiocell.',\n                'success'\n            );\n            dispatch({\n                type: ABRIR_CAJA,\n                cajaActual: cajaActual.data.cajaActual,\n                cajaAbierta: true\n            });\n        } catch(error){\n            console.log(error);\n        }\n    }\n}\n\nexport const cerrarCaja = () => {\n    return async (dispatch, getState) => {\n        try {\n            const tienda = Number(getState().usuarios.selectedTienda) || 0;\n            await clientToken.post('api/caja/cerrar', {tienda});\n            Swal.fire(\n                'Caja cerrada correctamente.',\n                'Audiocell.',\n                'success'\n            );\n            const cajaActual = await clientToken.get('api/caja', {params:{tienda}});\n            if(cajaActual.data.ok === false){\n                dispatch({\n                    type: OBTENER_CAJA,\n                    cajaActual: {status: \"CERRADO\", cantidadEfectivoCierre: 0}\n                });\n            } else {\n                dispatch({\n                    type: OBTENER_CAJA,\n                    cajaActual: cajaActual.data.cajaActual\n                });\n            }\n        } catch(error){\n            console.log(error);\n        }\n    }\n}","import React from 'react';\nimport Swal from 'sweetalert2';\nimport { generarVenta } from '../Redux/actions/ventasActions';\nimport { useDispatch } from 'react-redux';\nimport { useSelector } from 'react-redux';\nimport { useState } from 'react';\nimport {obtenerProductosVenta} from '../Redux/actions/productosActions';\nimport { useEffect } from 'react';\n\nconst VentaForm = ({setPrintRecibo}) => {\n\n    const dispatch = useDispatch();\n    const [showData, setShowData] = useState(false);\n    const productosSeleccionados = useSelector((state) => state.ventas.productosSeleccionados);\n    const total = useSelector((state) => state.ventas.total);\n\n    const [formValues, setFormValues] = useState({\n        metodoPago: null,\n        nombre: null,\n        nit: null,\n        direccion: null,\n        dpi: null,\n        imei: null,\n        icc: null,\n        numero: null\n    });\n\n    useEffect(() => {\n        productosSeleccionados.forEach((prod) => {\n            if(prod.name.includes(\"Kit\")){\n                setShowData(true);\n            }\n        });\n    }, [productosSeleccionados]);\n\n    const handleInputChange = (e) => {\n        setFormValues({\n            ...formValues,\n            [e.target.name]: e.target.value\n        });\n    }\n    \n    const handleSubmitForm = (e) => {\n        e.preventDefault();\n        Swal.fire({\n            title: 'Desea finalizar la venta?',\n            showCancelButton: true,\n            cancelButtonText: `Cancelar`,\n            confirmButtonText: `FINALIZAR`,\n            confirmButtonColor: '#021d34'\n        }).then(async (result) => {\n            if (result.isConfirmed) {\n                if(formValues.metodoPago === null || formValues.metodoPago === \"\"){\n                    Swal.fire(\n                        'Debe seleccionar un método de pago.',\n                        'Audiocell.',\n                        'error'\n                    );\n                }\n                else {\n                    await dispatch(generarVenta(formValues));\n                    // Se reinicializan los valores del formulario\n                    setFormValues({\n                        metodoPago: null,\n                        nombre: null,\n                        nit: null,\n                        direccion: null,\n                        dpi: null,\n                        imei: null,\n                        icc: null,\n                        numero: null\n                    });\n                    await dispatch(obtenerProductosVenta());\n                    \n                }\n            }\n        });\n        \n    }\n\n    return (\n        <form\n            onSubmit={handleSubmitForm}\n        >\n            {/* TIPO DE VENTA */}\n            <label htmlFor=\"\">Seleccione método de pago</label>\n            <select\n                name=\"metodoPago\"\n                className=\"form-select\"\n                aria-label=\"Default select example\"\n                onChange={handleInputChange}\n            >\n                <option value=\"\">SELECCIONE MÉTODO DE PAGO</option>\n                <option value=\"EFECTIVO\">EFECTIVO</option>\n                <option value=\"TARJETA\">TARJETA</option>\n            </select>\n            {/* NOMBRE DEL CLIENTE */}\n            <label htmlFor=\"\">Nombre</label>\n            <input \n                name=\"nombre\"\n                className=\"form-control\"\n                type=\"text\"\n                placeholder=\"Ingrese nombre de cliente\"\n                onChange={handleInputChange}\n                required\n                maxLength={50}\n            />\n            {/* NIT DEL CLIENTE */}\n            <label htmlFor=\"\">NIT</label>\n            <input\n                name=\"nit\"\n                className=\"form-control\"\n                type=\"number\"\n                placeholder=\"Ingrese NIT\"\n                onInput={(e) => e.target.value = e.target.value.slice(0, 13)}\n                onChange={handleInputChange}\n            />\n            {/* DPI DEL CLIENTE */}\n            <label htmlFor=\"\">DPI</label>\n            <input\n                name=\"dpi\"\n                className=\"form-control\"\n                type=\"number\"\n                placeholder=\"Ingrese dpi\"\n                onInput={(e) => e.target.value = e.target.value.slice(0, 13)}\n                onChange={handleInputChange}\n            />\n            {/* DIRECCION DEL CLIENTE */}\n            <label htmlFor=\"\">Dirección</label>\n            <input\n                name=\"direccion\"\n                className=\"form-control\"\n                type=\"text\"\n                placeholder=\"Ingrese dirección\"\n                maxLength={30}\n                onChange={handleInputChange}\n            />\n            {\n                showData === true &&\n                <>\n                    {/* NUMERO DEL TELEFONO */}\n                    <label htmlFor=\"\">Número teléfono</label>\n                    <input\n                        name=\"numero\"\n                        className=\"form-control\"\n                        type=\"number\"\n                        placeholder=\"Ingrese número de teléfono\"\n                        onInput={(e) => e.target.value = e.target.value.slice(0, 8)}\n                        onChange={handleInputChange}\n                        required\n                    />\n                    {/* IMEI DEL TELÉFONO */}\n                    <label htmlFor=\"\">IMEI</label>\n                    <input\n                        name=\"imei\"\n                        className=\"form-control\"\n                        type=\"number\"\n                        placeholder=\"Ingrese IMEI\"\n                        onInput={(e) => e.target.value = e.target.value.slice(0, 20)}\n                        onChange={handleInputChange}\n                        required\n                    />\n                    {/* ICC DEL TELEFONO */}\n                    <label htmlFor=\"\">ICC</label>\n                    <input\n                        name=\"icc\"\n                        className=\"form-control\"\n                        type=\"number\"\n                        placeholder=\"Ingrese ICC\"\n                        onInput={(e) => e.target.value = e.target.value.slice(0, 20)}\n                        onChange={handleInputChange}\n                        required\n                    />\n                </>\n            }\n            <br/>\n            <h5>Total: Q.{total}</h5>\n            <button \n                className=\"btn btn-danger btn-block\"\n                type=\"submit\"\n            >\n                Finalizar\n            </button>\n        </form>\n    )\n}\n\nexport default VentaForm;","import React, {Component} from 'react';\nimport './recibo.css';\n\nclass Recibo extends Component {\n    constructor(){\n        super();\n        this.state = {\n            totalVenta: 0\n        }\n    }\n\n    getDerivedStateFrom\n\n    render(){\n        const data = this.props.infoRecibo ? this.props.infoRecibo : {};\n        const prods = this.props.productos ? this.props.productos : [];\n        return (\n            // COMPROBANTE GENERAL\n            <div\n                style={{width:\"80mm\", padding:\"3mm\", fontFamily: \"serif\", color: \"black\", fontSize: \"10px\"}}\n            >\n                {/* ENCABEZADO COMPROBANTE */}\n                <div>\n                    <center> <img src=\"icons/recibo.jpeg\" alt=\"ChatMovil\" width=\"200px\" style={{filter: \"grayscale(100%)\"}}/> </center>\n                </div>\n                <div className=\"formatoRecibo\">\n                    <div style={{margin:\"auto\", textAlign:\"center\"}}>\n                        <br />\n                        <h6><b>Entrada Principal, San Miguel Ixtahuacán, San Marcos</b></h6>\n                        <h6>Venta de teléfonos celulares, accesorios, servicio técnico, bocinas de diferentes presentaciones y mucho más</h6>\n                    </div>\n                    <br />\n                    <h6>NO. {data.correlativo || \"\"}</h6>\n                </div>\n                {/* INFO DEL COMPROBANTE */}\n                <div>\n                    <h6>FECHA: {new Date(data.createdAt).toLocaleDateString()}</h6>\n                    <hr />\n                    <h6>NOMBRE: {data.nombreCliente}</h6>\n                    <h6>NIT: {data.nit ? data.nit : 'CF'}</h6>\n                    <h6>DIRECCIÓN: {data.direccion}</h6>\n                    <hr />\n                </div>                \n                {/* DESCRIPCION DEL ENCABEZADO */}\n                <div\n                    style={{display:\"flex\", justifyContent:\"space-between\"}}\n                >\n                    <div\n                        style={{marginRight: \"2px\"}}\n                    >\n                        {\n                            prods.map((p) => (\n                                <div\n                                    key={p.id}\n                                >\n                                    <div style={{display:\"flex\", justifyContent:\"space-between\"}}>\n                                        <h6>{p.Producto.name}-{p.Producto.color}-{p.Producto.Categorium.name}</h6>\n                                        <h6>.....Q.{p.precioFinal}</h6>\n                                    </div>\n                                    {/* AGREGAR TOTAL DE VENTA */}\n                                    <div>\n                                        {\n                                            p.Producto.Categorium.name.includes(\"Kit\") && \n                                            <>\n                                                <h6>IMEI: {p.imei ? p.imei : '-'}</h6>\n                                                <h6>ICC: {p.icc ? p.icc : '-'}</h6>\n                                                <h6>No. {p.numero ? p.numero : '-'}</h6>\n                                                <h6>DPI: {data.dpi ? data.dpi : '-'}</h6>\n                                            </>\n                                        }\n                                    </div>\n                                </div>\n                            ))\n                        }\n                        <div>\n                            <h5>TOTAL VENTA: ...... Q.{data.total}</h5>\n                        </div>\n                    </div>\n                </div>\n                {/* CONDICIONES DE GARANTÍA */}\n                <div>\n                    <h6><b>CONDICIONES DE GARANTÍA</b></h6>\n                    <p style={{margin: \"0\"}}>1.El dispositivo no carga y/o dura poco tiempo con carga</p>\n                    <p style={{margin: \"0\"}}>2.La pantalla no funciona</p>\n                    <p style={{margin: \"0\"}}>3.El micrófono y bocina presentan problemas.</p>\n                    <p style={{margin: \"0\"}}>4.La cámara presenta inconvenientes.</p>\n                    <p>\n                        <b>Accesorios:</b>\n                        No cuentan con ningun tipo de garantia\n                        todos los accesorios se entregan probados.\n                    </p>\n                    <p>\n                        EL TIEMPO ESTIMADO DE ENTREGA PARA CUBRIR GARANTIA (Tigo, Claro, Liberado) ES DE 15 DIAS HABILES.\n                    </p>\n                    <p>\n                        El cliente acepta las condiciones de garantía descritas en este documento.\n                    </p>\n                <p>\n                        Los dispositivos pierden garantia si presentan rastros de humedad o golpes</p>\n                </div>\n                <div style={{textAlign: \"center\"}}>\n                    <p><b>SERVICIO Y GARANTÍA ES NUESTRO COMPROMISO CADA DÍA</b></p>\n                    <p><b>GRACIAS POR SU COMPRA</b></p>\n                </div>\n                <div\n                    style={{height:\"4cm\", marginTop:\"2 cm\"}}\n                >\n                    <hr />\n                </div>\n            </div>\n        );\n    }\n}\n\n\nexport default Recibo;","import React, { useEffect, useState, useRef } from 'react';\nimport {obtenerProductosVenta} from '../Redux/actions/productosActions';\nimport { useSelector, useDispatch } from 'react-redux';\nimport ProductoCard from './ProductoCard';\nimport CardItem from './CardItem';\nimport { obtenerCaja } from '../Redux/actions/cajaActions';\nimport VentaForm from './VentaForm';\nimport Loader from 'react-loader-spinner';\nimport { useReactToPrint } from 'react-to-print';\nimport Recibo from './Recibo';\nimport jsPDF from 'jspdf';\n\n\nconst ListadoProductos = () => {\n    // DISPATCH\n    const dispatch = useDispatch();\n    const componentRef = useRef();\n    // STATE\n    const [loading, setLoading] = useState(true);\n    const [buscador, setBuscador] = useState(\"\");\n    const [productosSeleccionados, setProductosSeleccionados] = useState([]);\n    // STORE\n    const productos = useSelector((state) => state.productos.productosVenta); \n    const productosSeleccionado = useSelector((state) => state.ventas.productosSeleccionados);\n    const cajaAbierta = useSelector((state) => state.caja.cajaAbierta);\n    const infoRecibo = useSelector((state) => state.ventas.recibo);\n    const productosVendidos = useSelector((state) => state.ventas.productosVendidos);\n\n    // EFFECTS\n    useEffect(() => {\n        dispatch(obtenerProductosVenta());\n        dispatch(obtenerCaja());\n    }, [dispatch]);\n    // Cuando cambia caja\n    useEffect(() => {\n        if(cajaAbierta === true){\n            setLoading(false);\n        }else if(cajaAbierta === false){\n            setLoading(false);\n        }\n    }, [cajaAbierta])\n    // Buscador de productos\n    useEffect(() => {\n        if(productos){\n            setProductosSeleccionados(productos);\n        }\n    }, [productos])\n    useEffect(() => {\n        if(buscador !== \"\"){\n            if(productos){\n                const nuevosProductos = productos.filter(\n                    (prod) => \n                        (prod.name.toLowerCase().search(buscador.toLowerCase()) !== -1) ||  (prod.producto.toLowerCase().search(buscador.toLowerCase()) !== -1));\n                setProductosSeleccionados(nuevosProductos);\n            }\n        } else {\n            if(productos){\n                setProductosSeleccionados(productos);\n            }\n        }\n    }, [buscador, productos])\n\n    // FUNCTIONS\n    const handleChangeBuscador = (e) => {\n        setBuscador(e.target.value);\n    }\n\n    const handlePrint = useReactToPrint({\n        content: () => componentRef.current,\n    });\n\n    useEffect(() => {\n        if(infoRecibo){\n            handlePrint();\n        }\n    }, [infoRecibo, handlePrint]);\n\n    if(loading){\n        return(\n            <div\n                style={{display:\"flex\", alignItems:\"center\", justifyContent:\"center\"}}\n            >\n                <Loader\n                    type=\"ThreeDots\"\n                    color=\"#121D3B\"\n                    height={100}\n                    width={100}\n                />\n            </div>\n        )\n    }\n    else if(cajaAbierta){\n    return (\n        <div className=\"contenedorVentas\">\n            {\n                infoRecibo &&\n                    <div style={{display: \"none\"}}>\n                        <Recibo \n                            ref={componentRef}\n                            infoRecibo={infoRecibo}\n                            productos={productosVendidos}\n                        />\n                    </div>\n            }\n            <div className=\"contenedorProductosVentas\">\n                <input\n                    style={{maxWidth: \"40%\"}}\n                    className=\"form-control md-4\"\n                    type=\"text\"\n                    value={buscador}\n                    onChange={handleChangeBuscador}\n                    placeholder=\"Buscar...\"\n                />\n                <div className=\"productosCategoria\">\n                {\n                        productosSeleccionados.map((prod) => (\n                            <ProductoCard\n                                key={prod.id}\n                                {...prod}\n                            />\n                        ))\n                }\n                </div>\n            </div>\n            <div className=\"contenedorFormVenta\">\n                <h5>Información Venta</h5>\n                <hr/>\n                {\n                    productosSeleccionado ? (\n                        <>\n                        {\n                            productosSeleccionado.map((prod,index) => (\n                                <CardItem\n                                    key={prod.id}\n                                    producto={prod}\n                                />\n                            ))\n                        }\n                        <hr/>\n                        <VentaForm />\n                        <div\n                            style={{display:\"none\"}}\n                        >\n                        </div>\n                        </>\n                    ) : (\n                        <h4>No ha seleccionado ningún elemento.</h4>\n                    )\n                }\n            </div>\n        </div>\n    );\n    }else {\n        return (\n            <div className=\"divCaja\">\n                <h1>DEBE ABRIR CAJA PARA CONTINUAR.</h1>\n            </div>\n        )\n    }\n}\n\nexport default ListadoProductos;","import React, {useEffect} from 'react';\nimport {FaEdit} from 'react-icons/fa';\nimport {AiFillDelete} from 'react-icons/ai';\nimport {BsListCheck} from 'react-icons/bs';\nimport { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { obtenerProductos } from '../Redux/actions/productosActions';\nimport Accordion from 'react-bootstrap/Accordion';\n\nconst ProductsTable = ({data, handleSelectProducto, handleDelete, usuario, totalProductos, handleListStock}) => {\n    // HOOKS\n    const dispatch = useDispatch();\n    // STATE\n    const [admin, setAdmin] = useState(false);\n    const [actualPage, setActualPage] = useState(1);\n    \n    useEffect(() => {\n      if(usuario){\n        if(usuario.me){\n          if(usuario.me.rol === \"ADMIN\"){\n            setAdmin(true);\n          } else if(usuario.me.rol === \"VENTAS\"){\n            setAdmin(false);\n          }\n        }\n      }\n    }, [usuario])\n\n    useEffect(() => {\n      dispatch(obtenerProductos(actualPage));\n    }, [actualPage, dispatch])\n\n    return (\n      <>\n      <table className=\"table table-hover table-secondary table-bordered\">\n        <thead>\n          <tr>\n            <th scope=\"col\">#</th>\n            <th scope=\"col\">Nombre</th>\n            <th scope=\"col\">Categoria</th>\n            {\n              admin ? (\n                  <>\n                  <th scope=\"col\">Precio Venta</th>\n                  </>      \n                ) : (\n                  <th scope=\"col\">Precio</th>\n                )\n            }\n            <th scope=\"col\">Color</th>\n            <th scope=\"col\">Disponible</th>\n            {\n              admin &&\n                <>\n                <th scope=\"col\">Stock</th>\n                <th scope=\"col\">Editar</th>\n                <th scope=\"col\">Eliminar</th>\n                </>\n            }\n          </tr>\n        </thead>\n        <tbody>\n          {\n            data.map((producto, index) => (\n              <tr\n                key={producto.id}\n              >\n              <th scope=\"row\">{index+1}</th>\n              <td>{producto.name}</td>\n              <td>{producto.categoria}</td>\n              {\n                admin ? (\n                  <>\n                  <td>{producto.precioVenta ? `Q.${producto.precioVenta}` : \"---\"}</td>\n                  </>\n                ) : (\n                  <td>{producto.precioVenta ? `Q.${producto.precioVenta}` : \"---\"}</td>\n                )\n              }\n              <td>{producto.color ? producto.color : '---'}</td>\n              <td>{producto.disponible ? producto.disponible : 0}</td>\n              {\n                admin &&\n                  <>\n                  <td>\n                    <div style={{marginLeft: \"20px\"}}>\n                      <button className=\"btn btn-secondary\" onClick={() => {handleListStock(producto.id)}}>\n                        Stock\n                        <BsListCheck \n                          size=\"20px\"\n                          />\n                      </button>\n                    </div>\n                  </td>\n                  <td style={{display: \"flex\", justifyContent: \"center\"}}>\n                    <div style={{marginLeft: \"2px\"}}>\n                      <button className=\"btn btn-warning\" onClick={() => {handleSelectProducto(producto)}}>\n                        Editar\n                        <FaEdit \n                          size=\"20px\"\n                        />\n                      </button>\n                    </div>\n                  </td>\n                  <td>\n                    <div style={{marginLeft: \"20px\"}}>\n                      <button className=\"btn btn-danger\" onClick={() => {handleDelete(producto.id)}}>\n                        Eliminar\n                        <AiFillDelete \n                          size=\"20px\"\n                        />\n                      </button>\n                    </div>\n                  </td>\n                  </>\n              }\n            </tr>\n            ))\n          }\n        </tbody>\n        </table>\n          </>\n    )\n}\n\nexport default ProductsTable;","import React from 'react';\nimport {Field, reduxForm} from 'redux-form';\nimport { useState } from 'react';\nimport { maxLength200, maxLength50 } from '../Helpers/ReduxFormValidations';\n\nconst validate = values => {\n    const errors = {}\n    if(values.categoria === undefined || values.categoria === \"0\"){\n        errors.categoria = \"Campo requerido\";\n    }else if(values.categoria){\n        if((values.categoria).includes(\"Kit\") || (values.categoria).includes(\"Accesorios\")){\n            if(!values.color){\n                errors.color = \"Campo requerido\";\n            }\n            if(!values.precioVenta || values.precioVenta <= 0){\n                errors.precioVenta = \"Campo requerido\";\n            }\n        }\n    }\n    if(!values.name){\n        errors.name = \"Campo requerido\";\n    }\n\n    return errors;\n}\n\nconst renderField = ({\n    input,\n    label,\n    type,\n    placeholder,\n    meta: { touched, error, warning }\n}) => (\n    <div>\n        <label>{label}</label>\n        <input {...input} placeholder={placeholder} type={type} className=\"form-control\"/>\n        {touched && ((error && <span style={{color: \"red\"}}>{error}</span>))}\n    </div>\n);\n\nconst ProductoForm = (props) => {    \n    const {handleSubmit} = props;\n    const {categorias} = props;\n    const [showForm, setShowForm] = useState(false);\n\n    const handleChangeCategory = (e) => {\n        if((e.target.value).includes(\"Kit\") || (e.target.value).includes(\"Accesorios\")){\n            setShowForm(true);\n        } else {\n            setShowForm(false);\n        }\n    }\n\n    return (\n        <form onSubmit={handleSubmit}>\n            <div className=\"mb-3\">\n                <label>Categoria</label>\n                <br/>\n                <Field\n                    name=\"categoria\"\n                    component=\"select\"\n                    placeholder=\"\"\n                    className=\"form-control\"\n                    onChange={handleChangeCategory}\n                >\n                    <option value=\"0\" defaultValue>Seleccione una categoria</option>\n                    {\n                        categorias.map((cat) => (\n                            <option key={cat.id} value={cat.name}>{cat.name}</option>\n                        ))\n                    }\n                </Field>\n            </div>\n            <div className=\"mb-3\">\n                <Field\n                    name=\"name\"\n                    type=\"text\"\n                    component={renderField}\n                    label=\"Nombre de producto\"\n                    placeholder=\"Ingrese el nombre\"\n                    validate={maxLength50}\n                />\n            </div>\n            {\n                showForm &&\n                <>\n                <div className=\"mb-3\">\n                    <Field\n                        name=\"color\"\n                        type=\"text\"\n                        component={renderField}\n                        label=\"Color\"\n                        placeholder=\"Ingrese el color\"\n                        validate={maxLength50}\n                    />\n                </div>\n                <div className=\"mb-3\">\n                    <Field\n                        name=\"precioVenta\"\n                        type=\"number\"\n                        component={renderField}\n                        placeholder=\"Ingrese el precio de venta\"\n                        label=\"Precio Venta\"\n                    />\n                </div>\n                <div className=\"mb-3\">\n                    <Field\n                        name=\"descripcion\"\n                        type=\"text\"\n                        component={renderField}\n                        placeholder=\"Ingrese la descripción\"\n                        label=\"Descripción\"\n                        validate={maxLength200}\n                    />\n                </div>\n                </>\n            }\n            <div>\n                <button \n                    type=\"submit\"\n                    className=\"mt-3 btn btn-primary btn-block\"\n                >\n                Guardar\n                </button>\n            </div>\n        </form>\n    );\n}\n\nexport default reduxForm({\n    form: 'productoForm',\n    validate\n})(ProductoForm);","import React from 'react';\nimport {Field, reduxForm} from 'redux-form';\nimport {connect} from 'react-redux';\nimport { seleccionarProducto } from '../Redux/actions/productosActions';\n\nconst validate = values => {\n    const errors = {}\n    if(!values.name){\n        errors.name = \"Campo requerido\";\n    }\n    if(!values.categoria){\n        errors.categoria = \"Campo requerido\";\n    }\n    if(!values.presentacion){\n        errors.presentacion = \"Campo requerido\";\n    }\n    if(!values.precio){\n        errors.precio = \"Campo requerido\";\n    }\n    if(!values.stock){\n        errors.stock = \"Campo requerido\";\n    }\n    return errors;\n}\n\nconst renderField = ({\n    input,\n    label,\n    type,\n    meta: { touched, error }\n}) => (\n    <div>\n        <label>{label}</label>\n        <input {...input} placeholder={label} type={type} className=\"form-control\"/>\n        {touched && ((error && <span style={{color: \"red\"}}>{error}</span>))}\n    </div>\n  );\n\nlet ProductoEditForm = (props) => {    \n    const {handleSubmit} = props;\n    return (\n        <form onSubmit={handleSubmit}>\n            <div className=\"mb-3\">\n                <Field\n                    name=\"name\"\n                    type=\"text\"\n                    component={renderField}\n                    label=\"Nombre de producto\"\n                    placeholder=\"Ingrese el nombre\"\n                />\n            </div>\n            <div className=\"mb-3\">\n                <Field\n                    name=\"color\"\n                    type=\"text\"\n                    component={renderField}\n                    placeholder=\"Ingrese el color\"\n                    label=\"Color\"\n                />\n            </div>\n            <div className=\"mb-3\">\n                <Field\n                    name=\"precioVenta\"\n                    type=\"number\"\n                    component={renderField}\n                    placeholder=\"Ingrese el precio de venta\"\n                    label=\"Precio Venta\"\n                />\n            </div>\n            <div>\n                <button \n                    type=\"submit\"\n                    className=\"mt-3 btn btn-primary btn-block\"\n                >\n                Guardar\n                </button>\n            </div>\n        </form>\n    );\n}\n\nProductoEditForm = reduxForm({\n    form: 'productoEditForm',\n    validate\n})(ProductoEditForm);\n\nProductoEditForm = connect(\n    state => ({\n        initialValues: state.productos.selectedProduct\n    }),\n    { load: seleccionarProducto }\n)(ProductoEditForm);\n\nexport default ProductoEditForm;","import React from 'react';\nimport Select from 'react-select';\nimport {Field, reduxForm} from 'redux-form';\n\nconst validate = values => {\n    const errors = {}\n    if(!values.cantidad || values.cantidad < 0){\n        errors.cantidad = \"Campo requerido\";\n    }\n    if(!values.precioCompra || values.precioCompra < 0){\n        errors.precioCompra = \"Campo requerido\";\n    }\n\n    return errors;\n}\n\nconst renderField = ({\n    input,\n    label,\n    type,\n    placeholder,\n    meta: { touched, error }\n}) => (\n    <div>\n        <label>{label}</label>\n        <input {...input} placeholder={placeholder} type={type} className=\"form-control\"/>\n        {touched && ((error && <span style={{color: \"red\"}}>{error}</span>))}\n    </div>\n);\n\n\nconst ProductoStockForm = (props) => {    \n    // STATE\n    const {handleSubmit,productos,setProductoStock,productoStock} = props;\n    \n    const handleInputChange = (e) => {\n        setProductoStock(e);\n    }\n\n    return (\n        <form onSubmit={handleSubmit}>\n            <div>\n                <label>Seleccione un producto</label>\n                <Select\n                    name=\"producto\"\n                    options={productos}\n                    onChange={handleInputChange}\n                    value={productoStock}\n                />\n                <br /> \n            </div>\n            <div className=\"mb-3\">\n                <Field\n                    name=\"proveedor\"\n                    type=\"string\"\n                    component={renderField}\n                    label=\"Proveedor\"\n                    placeholder=\"Ingrese el proveedor\"\n                />\n            </div>\n            <div className=\"mb-3\">\n                <Field\n                    name=\"cantidad\"\n                    type=\"number\"\n                    component={renderField}\n                    label=\"Cantidad Ingresada\"\n                    placeholder=\"Ingrese la cantidad\"\n                />\n            </div>\n            <div className=\"mb-3\">\n                <Field\n                    name=\"precioCompra\"\n                    type=\"number\"\n                    component={renderField}\n                    label=\"Precio Compra\"\n                    placeholder=\"Ingrese el precio\"\n                />\n            </div>\n            <div>\n                <button \n                    type=\"submit\"\n                    className=\"mt-3 btn btn-primary btn-block\"\n                >\n                Guardar\n                </button>\n            </div>\n        </form>\n    );\n}\n\nexport default reduxForm({\n    form: 'productoStockForm',\n    validate\n})(ProductoStockForm);","import React from 'react';\nimport { useEffect } from 'react';\nimport { useState } from 'react';\nimport {TiDeleteOutline} from 'react-icons/ti';\nimport { useDispatch } from 'react-redux';\nimport { deleteStock } from '../Redux/actions/productosActions';\n\nconst ListadoStock = ({stocks,setShowListadoStock}) => {\n\n    const dispatch = useDispatch();\n\n    const handleDeleteStock = (id) => {\n        dispatch(deleteStock(id));\n        setShowListadoStock(false);\n    }\n\n    const [disponible, setDisponible] = useState(0);\n\n    useEffect(() => {\n        if(stocks){\n            let temp = 0;\n            for(let s of stocks){\n                temp += s.cantidadRestante;\n            }\n            setDisponible(temp);\n        }\n    },[stocks]);\n\n    return (\n        stocks && stocks.length > 0 &&\n        (\n            <>\n            <table className=\"table table-hover text-center\">\n                    <thead>\n                        <tr>\n                            <th>Proveedor</th>\n                            <th>Compra</th>\n                            <th>Comprado</th>\n                            <th>Restante</th>\n                            <th>Ingreso</th>\n                            <th>Eliminar</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                    {    \n                        stocks.map((stock) => {\n                            return (\n                                <tr key={stock.id}>\n                                <td>{stock.proveedor}</td>\n                                <td>Q.{stock.precioCompra}</td>\n                                <td>{stock.cantidadComprada}</td>\n                                <td>{stock.cantidadRestante}</td>\n                                <td>{new Date(stock.createdAt).toLocaleDateString()}</td>\n                                <td>\n                                    <button\n                                        className=\"btn btn-danger\"\n                                        onClick={() => handleDeleteStock(stock.id)}\n                                    >\n                                        <TiDeleteOutline\n                                            size=\"20px\"\n                                        />\n                                    </button>\n                                </td>\n                                </tr>\n                            )})\n                    }\n                    </tbody>\n                </table>\n                <p><b>Disponible:</b> {disponible}</p>\n            </>\n        )\n    )\n}\n\nexport default ListadoStock;","import React, { useEffect, useState } from 'react';\n\nconst ReporteStock = ({data, admin}) => {\n    // TOTAL GANANCIAS\n    const [totalInvertido, setInvertido] = useState(0);\n\n    useEffect(() => {\n        let total = 0;\n        if(data){\n            data.forEach((p) => {\n                total += (p.precioCompra * p.cantidadComprada);\n            });\n            setInvertido(total);\n        }\n    }, [data]);\n    return (\n        <>\n        <table className=\"table table-hover table-secondary\">\n            <thead>\n                <tr>\n                    <th scope=\"col\">#</th>\n                    <th scope=\"col\">Categoría</th>\n                    <th scope=\"col\">Producto</th>\n                    <th scope=\"col\">Cantidad</th>\n                    {\n                        admin &&\n                        <>\n                            <th scope=\"col\">Precio Compra</th>\n                            <th scope=\"col\">Invertido</th>\n                            <th scope=\"col\">Fecha Compra</th>\n                        </>\n                    }\n                </tr>\n            </thead>\n            <tbody>\n            {\n                data.map((producto, index) => (\n                    <tr\n                        key={index}\n                    >\n                        <th scope=\"row\">{index+1}</th>\n                        <td>{producto.categoria}</td>\n                        <td>{producto.name}-{producto.color}</td>\n                        <td>{producto.cantidadComprada}</td>\n                        {\n                            admin && \n                            <>\n                                <td>Q.{producto.precioCompra}</td>\n                                <td>Q.{producto.precioCompra * producto.cantidadComprada}</td>\n                                <td>{new Date(producto.createdAt).toLocaleDateString()}</td>\n                            </>\n                        }\n                    </tr>\n                ))\n            }\n            </tbody>\n        </table>\n        {\n            admin &&\n                <h5>Total Invertido: Q.{totalInvertido}</h5>\n        }\n        </>\n    )\n}\n\nexport default ReporteStock;","import React, {useEffect, useState} from 'react';\nimport ProductsTable from './ProductsTable';\nimport {useDispatch, useSelector} from 'react-redux';\nimport { obtenerProductos, crearProducto, seleccionarProducto, editarProducto, deleteProducto, obtenerTotalProductos, getReporteProductos, crearProductoStock, obtenerListadoStock, getReporteProductosStock, obtenerTotalInvertido, limpiarProductos } from '../Redux/actions/productosActions';\nimport { obtenerUsuario, selectTienda } from '../Redux/actions/usersActions';\nimport ProductoForm from './ProductoForm';\nimport { Modal, Tabs, Tab } from 'react-bootstrap';\nimport { obtenerCategorias } from '../Redux/actions/categoriasActions';\nimport ProductoEditForm from './ProductoEditForm';\nimport Swal from 'sweetalert2';\nimport Loader from 'react-loader-spinner';\nimport { clientToken } from '../../config/axios';\nimport ProductoStockForm from './ProductoStockForm';\nimport ListadoStock from './ListadoStock';\nimport ReporteStock from './ReporteStock';\n\nconst Productos = () => {\n    // Mostrar formulario de creacion.\n    const [show, setShow] = useState(false);\n    // Mostrar formulario de edicion.\n    const [showFormEdit, setShowFormEdit] = useState(false);\n    // Mostrar formulario de stock.\n    const [showStock, setShowStock] = useState(false);\n    const [productoStock, setProductoStock] = useState(null);\n    const [showListadoStock, setShowListadoStock] = useState(false);\n    const [formFechasReporte, setFormFechasReporte] = useState({\n        fechaInicio: null,\n        fechaFin: null\n    });\n    const handleInputChangeReporte = (e) => {\n        setFormFechasReporte({...formFechasReporte,[e.target.name] : e.target.value});\n    }\n    // Verificar si usuario logueado es admin\n    const [admin, setAdmin] = useState(false);\n    // Opciones de productos para select\n    const [productsOptions, setProductOptions] = useState([]);\n    // Valor del buscador\n    const [buscador, setBuscador] = useState(\"\");\n    // Loader\n    const [loading, setLoading] = useState(true);\n    // Dispatch\n    const dispatch = useDispatch();\n    \n    // STORE\n    const totalProductos = useSelector((state) => state.productos.totalProductos);\n    const productos = useSelector((state) => state.productos.productos);\n    const productosNoDisponibles = useSelector((state) => state.productos.productosNoDisponibles);\n    const categorias = useSelector((state) => state.categorias.categorias);\n    const usuario = useSelector((state) => state.usuarios);\n    const listadoStock = useSelector((state) => state.productos.listadoStock);\n    const reporteStock = useSelector((state) => state.productos.reporteStock);\n    const totalInvertido = useSelector((state) => state.productos.totalInvertido);\n    // Obtener data del store\n    useEffect(() => {\n        dispatch(limpiarProductos());\n        dispatch(getReporteProductos());\n        dispatch(obtenerTotalProductos());\n        dispatch(obtenerProductos());\n        dispatch(obtenerCategorias());\n        dispatch(obtenerUsuario());\n        dispatch(obtenerTotalInvertido());\n    }, [dispatch])\n\n    useEffect(() => {\n        if(usuario){\n            if(usuario.me){\n                if(usuario.me.rol === \"ADMIN\"){\n                    setAdmin(true);\n                } else if(usuario.me.rol === \"VENTAS\"){\n                    setAdmin(false);\n                }\n            }\n        }\n    }, [usuario])\n    \n    useEffect(() => {\n        setLoading(false);\n    }, [totalProductos]);\n    // Transformación de data de productos.\n    useEffect(() => {\n        if(productos && productosNoDisponibles){\n            let productsTransform = productos.map((prod) => ({\n                value: prod.id,\n                label: `${prod.categoria}-${prod.name}${prod.color != null ? `-${prod.color}` : ''}`\n            }));\n            let productsTransformNo = productosNoDisponibles.map((prod) => ({\n                value: prod.id,\n                label: `${prod.categoria}-${prod.name}${prod.color != null ? `-${prod.color}` : ''}`\n            }));\n            setProductOptions([...productsTransform, ...productsTransformNo]);\n        }\n    }, [productos,productosNoDisponibles])\n    // Obtener información de buscador\n    useEffect(() => {\n        if(buscador === \"\"){\n            dispatch(obtenerTotalProductos());\n            dispatch(obtenerProductos());\n        } else {\n            dispatch(obtenerTotalProductos(buscador));\n            dispatch(obtenerProductos(1,buscador));\n        }\n    }, [buscador, dispatch])\n    // Submit crear producto\n    const handleSubmit = (values) => {\n        setShow(false);\n        dispatch(crearProducto(values));\n    }\n    // Submit agregar stock\n    const handleSubmitStock = (values) => {\n        if(!productoStock){\n            Swal.fire('Debe seleccionar un producto','','error');\n        }else {\n            setShowStock(false);\n            dispatch(crearProductoStock({cantidad:values.cantidad, precio:values.precioCompra,productoId: productoStock.value, proveedor: values.proveedor}));\n        }\n    }\n    // Seleccionar producto para editar\n    const handleSelectProducto = (producto) => {\n        Swal.fire({\n            title: 'Introduzca contraseña',\n            input: 'password',\n            inputAttributes: {\n                autocapitalize: 'off'\n            },\n            showCancelButton: true,\n            cancelButtonText: \"Cancelar\",\n            confirmButtonText: 'Confirmar',\n            showLoaderOnConfirm: true,\n            preConfirm: (password) => {\n                const user = {\n                    password,\n                    username: usuario.me.username\n                    \n                }\n                return clientToken.post(`api/producto/verificar`, user)\n                    .then(response => {\n                        if(response.data.ok){\n                            return response.data.msg\n                        }\n                    })\n                    .catch(error => {\n                        Swal.showValidationMessage(\n                            `Contraseña incorrecta, vuelva a intentar`\n                        )\n                    })\n            },\n            allowOutsideClick: () => !Swal.isLoading()\n            }).then((result) => {\n                if (result.isConfirmed) {\n                    dispatch(seleccionarProducto(producto));\n                    setShowFormEdit(true);\n                }\n            });\n    }\n    // Agregar stock\n    const handleAgregarStock = (producto) => {\n        Swal.fire({\n            title: 'Introduzca contraseña',\n            input: 'password',\n            inputAttributes: {\n                autocapitalize: 'off'\n            },\n            showCancelButton: true,\n            cancelButtonText: \"Cancelar\",\n            confirmButtonText: 'Confirmar',\n            showLoaderOnConfirm: true,\n            preConfirm: (password) => {\n                const user = {\n                    password,\n                    username: usuario.me.username\n                    \n                }\n                return clientToken.post(`api/producto/verificar`, user)\n                    .then(response => {\n                        if(response.data.ok){\n                            return response.data.msg\n                        }\n                    })\n                    .catch(error => {\n                        Swal.showValidationMessage(\n                            `Contraseña incorrecta, vuelva a intentar`\n                        )\n                    })\n            },\n            allowOutsideClick: () => !Swal.isLoading()\n            }).then((result) => {\n                if (result.isConfirmed) {\n                    setShowStock(true);\n                }\n            });\n    }\n    // Seleccionar listado de stock\n    const handleListStock = (producto) => {\n        setShowListadoStock(true);\n        dispatch(obtenerListadoStock(producto));\n    }\n    // Submit editar producto\n    const handleSubmitEdit = (values) => {\n        dispatch(editarProducto(values));\n        setShowFormEdit(false);\n    }\n    // Cambiar valor del buscador\n    const handleChangeBuscador = (e) => {\n        setBuscador(e.target.value);\n    }\n    // Eliminar producto\n    const handleDelete = (id) => {\n        Swal.fire({\n            title: 'Desea eliminar el producto?',\n            showCancelButton: true,\n            confirmButtonText: `Eliminar`,\n            cancelButtonText: `Cancelar`\n        }).then((result) => {\n            if (result.isConfirmed) {\n                Swal.fire({\n                    title: 'Introduzca contraseña',\n                    input: 'password',\n                    inputAttributes: {\n                        autocapitalize: 'off'\n                    },\n                    showCancelButton: true,\n                    cancelButtonText: \"Cancelar\",\n                    confirmButtonText: 'Confirmar',\n                    showLoaderOnConfirm: true,\n                    preConfirm: (password) => {\n                        const user = {\n                            password,\n                            username: usuario.me.username\n                            \n                        }\n                        return clientToken.post(`api/producto/verificar`, user)\n                            .then(response => {\n                                if(response.data.ok){\n                                    return response.data.msg\n                                }\n                            })\n                            .catch(error => {\n                                Swal.showValidationMessage(\n                                    `Contraseña incorrecta, vuelva a intentar`\n                                )\n                            })\n                    },\n                    allowOutsideClick: () => !Swal.isLoading()\n                    }).then((result) => {\n                        if (result.isConfirmed) {\n                            dispatch(deleteProducto(id));\n                        }\n                    });\n            }\n        });\n    }\n    // Submit Reporte\n    const handleSubmitReporte = () => {\n        const {fechaInicio, fechaFin} = formFechasReporte;\n            if(!fechaInicio || !fechaFin){\n                Swal.fire(\n                    'Debe seleccionar dos fechas.',\n                    'Audiocell.',\n                    'error'\n                );\n            } else {\n                const endDate = new Date(fechaFin);\n                endDate.setDate(endDate.getDate() + 1);\n                formFechasReporte.fechaFin = endDate;\n                dispatch(getReporteProductosStock(formFechasReporte));\n            }\n    }\n    \n    if(loading){\n        return (\n            <div\n                style={{display:\"flex\", alignItems:\"center\", justifyContent:\"center\"}}\n            >\n                <Loader\n                    type=\"ThreeDots\"\n                    color=\"#121D3B\"\n                    height={100}\n                    width={100}\n                />\n            </div>\n        )\n    } else {\n        return (\n            <div className=\"contenedor-controlProductos\">\n            <Tabs defaultActiveKey=\"home\" id=\"uncontrolled-tab-example\" className=\"mb-3 mt-10\">\n                <Tab eventKey=\"home\" title=\"Control Productos\">\n                    <div className=\"contenedor-productos\">\n                    <h1>Productos Disponibles</h1>\n                    <div\n                        style={{display: \"flex\", flexWrap: \"wrap\", justifyContent:\"space-between\"}}\n                        >\n                        {\n                            admin &&\n                                <>\n                                <button\n                                    className=\"btn btn-primary\"\n                                    onClick={() => setShow(true)}\n                                >\n                                    Agregar Producto\n                                </button>\n                                <button\n                                    className=\"btn btn-primary mt-2\"\n                                    onClick={handleAgregarStock}\n                                >\n                                    Agregar Stock\n                                </button>\n                                </>\n                        }\n                        <input\n                            name=\"buscador\"\n                            className=\"form-control\"\n                            style={{maxWidth:\"300px\", marginTop:\"2px\"}}\n                            type=\"text\"\n                            value={buscador}\n                            onChange={handleChangeBuscador}\n                            placeholder=\"Buscar...\"\n                        />\n                    </div>\n                    <hr/>\n                    <div\n                        style={{overflowY: \"scroll\", textAlign: \"center\", maxHeight:\"700px\"}}\n                    >\n                        {\n                            productos ? (\n                                productos.length > 0 ? (\n                                    <ProductsTable\n                                        data={productos}\n                                        handleSelectProducto={handleSelectProducto}\n                                        handleDelete={handleDelete}\n                                        usuario={usuario}\n                                        totalProductos={totalProductos}\n                                        handleListStock={handleListStock}\n                                    />\n                                ) : (\n                                    <p>No existen productos...</p>\n                                )\n                            ) : (\n                                <Loader\n                                    type=\"ThreeDots\"\n                                    color=\"#121D3B\"\n                                    height={100}\n                                    width={100}\n                                />\n                            )\n                        }\n                    </div>\n                    {/* FORM PARA CREAR NUEVO PRODUCTO */}\n                    <Modal\n                        show={show}\n                        onHide={() => {setShow(false)}}\n                        backdrop=\"static\"\n                        keyboard={false}\n                        >\n                        <Modal.Header closeButton>\n                            <Modal.Title>Crear nuevo producto</Modal.Title>\n                        </Modal.Header>\n                        <Modal.Body>\n                            <ProductoForm\n                                onSubmit={handleSubmit}\n                                categorias={categorias}\n                            />\n                        </Modal.Body>\n                    </Modal>\n                    {/* FORM PARA EDITAR PRODUCTO */}\n                    <Modal\n                        show={showFormEdit}\n                        onHide={() => {setShowFormEdit(false)}}\n                        backdrop=\"static\"\n                        keyboard={false}\n                        >\n                        <Modal.Header closeButton>\n                            <Modal.Title>Editar producto</Modal.Title>\n                        </Modal.Header>\n                        <Modal.Body>\n                            <ProductoEditForm\n                                onSubmit={handleSubmitEdit}\n                            />\n                        </Modal.Body>\n                    </Modal>\n                    {/* FORM PARA AGREGAR STOCK DE PRODUCTO */}\n                    <Modal\n                        show={showStock}\n                        onHide={() => {setShowStock(false)}}\n                        backdrop=\"static\"\n                        keyboard={false}\n                        >\n                        <Modal.Header closeButton>\n                            <Modal.Title>Stock de producto</Modal.Title>\n                        </Modal.Header>\n                        <Modal.Body>\n                            <ProductoStockForm \n                                onSubmit={handleSubmitStock}\n                                productos={productsOptions}\n                                setProductoStock={setProductoStock}\n                                productoStock={productoStock}\n                            />\n                        </Modal.Body>\n                    </Modal>\n                    </div>\n                </Tab>\n                <Tab eventKey=\"homeNo\" title=\"No Disponibles\">\n                    <div className=\"contenedor-productos\">\n                    <h1>Productos No Disponibles</h1>\n                    <div\n                        style={{display: \"flex\", flexWrap: \"wrap\", justifyContent:\"space-between\"}}\n                        >\n                        {\n                            admin &&\n                                <>\n                                <button\n                                    className=\"btn btn-primary\"\n                                    onClick={() => setShow(true)}\n                                >\n                                    Agregar Producto\n                                </button>\n                                <button\n                                    className=\"btn btn-primary mt-2\"\n                                    onClick={handleAgregarStock}\n                                >\n                                    Agregar Stock\n                                </button>\n                                </>\n                        }\n                        <input\n                            name=\"buscador\"\n                            className=\"form-control\"\n                            style={{maxWidth:\"300px\", marginTop:\"2px\"}}\n                            type=\"text\"\n                            value={buscador}\n                            onChange={handleChangeBuscador}\n                            placeholder=\"Buscar...\"\n                        />\n                    </div>\n                    <hr/>\n                    <div\n                        style={{overflowY: \"scroll\", textAlign: \"center\", maxHeight:\"700px\"}}\n                    >\n                        {\n                            productosNoDisponibles ? (\n                                productosNoDisponibles.length > 0 ? (\n                                    <ProductsTable\n                                        data={productosNoDisponibles}\n                                        handleSelectProducto={handleSelectProducto}\n                                        handleDelete={handleDelete}\n                                        usuario={usuario}\n                                        totalProductos={totalProductos}\n                                        handleListStock={handleListStock}\n                                    />\n                                ) : (\n                                    <p>No existen productos...</p>\n                                )\n                            ) : (\n                                <Loader\n                                    type=\"ThreeDots\"\n                                    color=\"#121D3B\"\n                                    height={100}\n                                    width={100}\n                                />\n                            )\n                        }\n                    </div>\n                    {/* FORM PARA CREAR NUEVO PRODUCTO */}\n                    <Modal\n                        show={show}\n                        onHide={() => {setShow(false)}}\n                        backdrop=\"static\"\n                        keyboard={false}\n                        >\n                        <Modal.Header closeButton>\n                            <Modal.Title>Crear nuevo producto</Modal.Title>\n                        </Modal.Header>\n                        <Modal.Body>\n                            <ProductoForm\n                                onSubmit={handleSubmit}\n                                categorias={categorias}\n                            />\n                        </Modal.Body>\n                    </Modal>\n                    {/* FORM PARA EDITAR PRODUCTO */}\n                    <Modal\n                        show={showFormEdit}\n                        onHide={() => {setShowFormEdit(false)}}\n                        backdrop=\"static\"\n                        keyboard={false}\n                        >\n                        <Modal.Header closeButton>\n                            <Modal.Title>Editar producto</Modal.Title>\n                        </Modal.Header>\n                        <Modal.Body>\n                            <ProductoEditForm\n                                onSubmit={handleSubmitEdit}\n                            />\n                        </Modal.Body>\n                    </Modal>\n                    {/* FORM PARA AGREGAR STOCK DE PRODUCTO */}\n                    <Modal\n                        show={showStock}\n                        onHide={() => {setShowStock(false)}}\n                        backdrop=\"static\"\n                        keyboard={false}\n                        >\n                        <Modal.Header closeButton>\n                            <Modal.Title>Stock de producto</Modal.Title>\n                        </Modal.Header>\n                        <Modal.Body>\n                            <ProductoStockForm \n                                onSubmit={handleSubmitStock}\n                                productos={productsOptions}\n                                setProductoStock={setProductoStock}\n                                productoStock={productoStock}\n                            />\n                        </Modal.Body>\n                    </Modal>\n                    {/* LISTADO DE STOCKS */}\n                    <Modal\n                        size=\"lg\"\n                        show={showListadoStock}\n                        onHide={() => {setShowListadoStock(false)}}\n                        backdrop=\"static\"\n                        keyboard={false}\n                        scrollable={true}\n                        >\n                        <Modal.Header closeButton>\n                            <Modal.Title>Listado de Stock</Modal.Title>\n                        </Modal.Header>\n                        <Modal.Body>\n                            {\n                                listadoStock ? (\n                                    <ListadoStock \n                                        stocks={listadoStock}\n                                        setShowListadoStock={setShowListadoStock}\n                                    />\n                                ) : (\n                                    <Loader\n                                        type=\"ThreeDots\"\n                                        color=\"#121D3B\"\n                                        height={100}\n                                        width={100}\n                                    />\n                                )\n                            }\n                        </Modal.Body>\n                    </Modal>\n                    </div>\n                </Tab>\n                <Tab eventKey=\"reporte\" title=\"Reporte Stock\">\n                    <div className=\"contenedor-productos\">\n                        <h1>Reporte de Stock</h1>\n                        <div\n                            style={{display: \"flex\", justifyContent:\"space-around\", flexWrap:\"wrap\"}}\n                        >\n                    <div>\n                        <label htmlFor=\"\">Fecha Inicio</label>\n                        <input\n                                name=\"fechaInicio\"\n                                className=\"form-control md-4\"\n                                type=\"date\"\n                                value={formFechasReporte.formInicio}\n                                onChange={handleInputChangeReporte}\n                        />\n                    </div>\n                    <div>\n                        <label htmlFor=\"\">Fecha Fin</label>\n                        <input\n                                name=\"fechaFin\"\n                                className=\"form-control md-4\"\n                                type=\"date\"\n                                value={formFechasReporte.formFin}\n                                onChange={handleInputChangeReporte}\n                        />\n                    </div>\n                    <button\n                        className=\"btn btn-primary mt-3\"\n                        onClick={handleSubmitReporte}\n                    >\n                        Buscar\n                    </button>\n                </div>\n                <hr />\n                <div\n                    style={{overflowY: \"scroll\", maxHeight: \"400px\"}}\n                >\n                {\n                    reporteStock && \n                        <ReporteStock \n                            data={reporteStock}\n                            admin={admin}\n                        />\n                }\n            </div>\n            </div>\n                </Tab>\n                {\n                    admin &&\n                        <Tab eventKey=\"total\" title=\"Inventario\">\n                            <div className=\"contenedor-productos\">\n                                <div className=\"card text-center\">\n                                    <div className=\"card-header\">\n                                        <h3>Información de inversión</h3>\n                                    </div>\n                                    <div className=\"card-body\">\n                                        <h3>Total: <b>Q.{totalInvertido}</b> </h3>\n                                        <h4>Fecha: {new Date().toLocaleString(\"es-GT\", {timeZone: \"America/Guatemala\"})}</h4>\n                                    </div>\n                                    <div className=\"card-footer text-muted\">\n                                    Audiocell\n                                    </div>\n                                </div>\n                            </div>\n                        </Tab>\n                }\n            </Tabs>\n            {/* LISTADO DE STOCKS */}\n            <Modal\n                        size=\"lg\"\n                        show={showListadoStock}\n                        onHide={() => {setShowListadoStock(false)}}\n                        backdrop=\"static\"\n                        keyboard={false}\n                        scrollable={true}\n                        >\n                        <Modal.Header closeButton>\n                            <Modal.Title>Listado de Stock</Modal.Title>\n                        </Modal.Header>\n                        <Modal.Body>\n                            {\n                                listadoStock ? (\n                                    <ListadoStock \n                                        stocks={listadoStock}\n                                        setShowListadoStock={setShowListadoStock}\n                                    />\n                                ) : (\n                                    <Loader\n                                        type=\"ThreeDots\"\n                                        color=\"#121D3B\"\n                                        height={100}\n                                        width={100}\n                                    />\n                                )\n                            }\n                        </Modal.Body>\n                    </Modal>\n            </div>\n        )\n    }\n}\n\nexport default Productos;","// Actions types\nimport {\n  OBTENER_PRODUCTOS_ERROR, OBTENER_CATEGORIAS\n} from '../actionTypes';\n// ACTIONS DE AUTENTICACION\nimport {clientToken} from '../../../config/axios';\n\n// Login Usuario\nexport const obtenerCategorias = () => {\n    return async (dispatch) => {\n        try {\n            const categorias = await clientToken.get('api/categoria');\n            dispatch({\n                type: OBTENER_CATEGORIAS,\n                categorias: categorias.data.categorias\n            });\n        } catch(error) {\n            dispatch({\n                type: OBTENER_PRODUCTOS_ERROR\n            });\n        }\n    }\n}","import React from 'react';\n\nconst ReporteUsuarios = ({data}) => {\n    return (\n        <>\n        <table className=\"table table-hover table-secondary\">\n            <thead>\n                <tr>\n                    <th scope=\"col\">#</th>\n                    <th scope=\"col\">Usuario</th>\n                    <th scope=\"col\">Cantidad</th>\n                    <th scope=\"col\">Total</th>\n                </tr>\n            </thead>\n            <tbody>\n            {\n                data.map((venta, index) => (\n                    <tr\n                        key={venta.name}\n                    >\n                        <th scope=\"row\">{index+1}</th>\n                        <td>{venta.name}</td>\n                        <td>{venta.total}</td>\n                        <td>Q.{venta.cantidad}</td>\n                    </tr>\n                ))\n            }\n            </tbody>\n        </table>\n        </>\n    )\n}\n\nexport default ReporteUsuarios;","import React from 'react';\nimport { useEffect } from 'react';\nimport { useState } from 'react';\n\nconst ReporteGanancias = ({data}) => {\n    // TOTAL GANANCIAS\n    const [totalGanancias, setGanancias] = useState(0);\n\n    useEffect(() => {\n        let total = 0;\n        if(data){\n            data.forEach((v) => {\n                total += parseInt(v.Ganancia);\n            });\n            setGanancias(total);\n        }\n    }, [data]);\n\n    return (\n        <>\n        <table className=\"table table-hover table-secondary\">\n            <thead>\n                <tr>\n                    <th scope=\"col\">#</th>\n                    <th scope=\"col\">Categoria</th>\n                    <th scope=\"col\">Producto</th>\n                    <th scope=\"col\">Color</th>\n                    <th scope=\"col\">Vendidos</th>\n                    <th scope=\"col\">Ganancia</th>\n                </tr>\n            </thead>\n            <tbody>\n            {\n                data.map((venta, index) => {\n                    return (\n                        <tr\n                            key={venta.id}\n                        >\n                            <th scope=\"row\">{index+1}</th>\n                            <td>{venta.Categoria}</td>\n                            <td>{venta.Producto}</td>\n                            <td>{venta.color}</td>\n                            <td>{venta.Vendidos}</td>\n                            <td>Q.{venta.Ganancia}</td>\n                        </tr>\n                    )\n                })\n            }\n            </tbody>\n        </table>\n        <h5>Total Ganancias: Q.{totalGanancias}</h5>\n        </>\n    )\n}\n\nexport default ReporteGanancias;","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {FaRegEye} from 'react-icons/fa';\nimport {cancelarVentaCaja, seleccionarVenta} from '../Redux/actions/ventasActions';\nimport Swal from 'sweetalert2';\n\nconst VentasEncabezosTable = ({data, setShowForm}) => {\n    // HOOKS\n    const dispatch = useDispatch();\n    // STATE\n\n    const usuarioVerificacion = useSelector((state) => state.usuarios);\n\n    const handleSelectVenta = (venta) => {\n        setShowForm(true);\n        dispatch(seleccionarVenta(venta.id));\n    }\n\n    const handleCancelVenta = (venta) => {\n        Swal.fire({\n            title: 'Desea cancelar la venta?',\n            showCancelButton: true,\n            confirmButtonText: `Cancelar Venta`,\n            cancelButtonText: `Cerrar`\n        }).then(async (result) => {\n            if (result.isConfirmed) {\n                const { value: text } = await Swal.fire({\n                    input: 'textarea',\n                    inputLabel: 'RAZÓN DE CANCELACIÓN',\n                    inputPlaceholder: 'Escriba la razón...',\n                    inputAttributes: {\n                    'aria-label': 'Type your message here',\n                    },\n                    showCancelButton: true,\n                    confirmButtonText: 'Confirmar',\n                    cancelButtonText: 'Cancelar'\n                })\n                if (text) {\n                    await dispatch(cancelarVentaCaja({venta, razon: text}));\n                    window.location.reload(false);\n                }\n            }\n        });\n    }\n\n    return (\n        <>\n        <table className=\"table table-hover table-secondary\">\n            <thead>\n                <tr>\n                    <th scope=\"col\">#</th>\n                    <th scope=\"col\">Correlativo</th>\n                    <th scope=\"col\">Cliente</th>\n                    <th scope=\"col\">NIT</th>\n                    <th scope=\"col\">Tipo Venta</th>\n                    <th scope=\"col\">Total</th>\n                    <th scope=\"col\">Fecha de Venta</th>\n                    <th scope=\"col\">Detalles</th>\n                </tr>\n            </thead>\n            <tbody>\n            {\n                data.map((venta, index) => (\n                    <tr\n                        key={venta.id}\n                    >\n                    <th scope=\"row\">{index+1}</th>\n                    <td>{venta.correlativo}</td>\n                    <td>{venta.nombreCliente}</td>\n                    <td>{venta.nit}</td>\n                    <td>{venta.tipoVenta}</td>\n                    <td>Q.{venta.total}</td>\n                    <td>{new Date(venta.createdAt).toLocaleDateString()}</td>\n                    <td style={{display: \"flex\", justifyContent: \"space-around\"}}>\n                        <div style={{marginLeft: \"2px\"}}>\n                            <button className=\"btn btn-warning\" onClick={() => {handleSelectVenta(venta)}}>\n                                Ver\n                                <FaRegEye\n                                size=\"20px\"\n                                />\n                            </button>\n                        </div>\n                        <div>\n                            <button className=\"btn btn-danger\" onClick={() => {handleCancelVenta(venta)}}>\n                                Cancelar\n                            </button>\n                        </div>\n                    </td>\n                    </tr>\n                ))\n            }\n            </tbody>\n        </table>\n        </>\n    )\n}\n\nexport default VentasEncabezosTable;","import React from 'react';\nimport Select from 'react-select';\nimport {Field, reduxForm} from 'redux-form';\n\nconst validate = values => {\n    const errors = {}\n\n    return errors;\n}\n\nconst renderField = ({\n    input,\n    label,\n    type,\n    placeholder,\n    meta: { touched, error }\n}) => (\n    <div>\n        <label>{label}</label>\n        <input {...input} placeholder={placeholder} type={type} className=\"form-control\"/>\n        {touched && ((error && <span style={{color: \"red\"}}>{error}</span>))}\n    </div>\n);\n\n\nconst VentaProductos = (props) => {    \n    const {handleSubmit,productos,setProductoVenta,productoStock} = props;\n    \n    const handleInputChange = (e) => {\n        setProductoVenta(e);\n    }\n\n    return (\n        <form onSubmit={handleSubmit}>\n            <div>\n                <label>Seleccione un producto</label>\n                <Select\n                    name=\"producto\"\n                    options={productos}\n                    onChange={handleInputChange}\n                    value={productoStock}\n                />\n                <br />\n            </div>\n            <div>\n                <button \n                    type=\"submit\"\n                    className=\"mt-3 btn btn-primary btn-block\"\n                >\n                Generar\n                </button>\n            </div>\n        </form>\n    );\n}\n\nexport default reduxForm({\n    form: 'ventaProductos',\n    validate\n})(VentaProductos);","import React from 'react';\nimport { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {FaRegEye} from 'react-icons/fa';\nimport {GiCancel} from 'react-icons/gi';\nimport {cancelarVentaCaja, seleccionarVenta} from '../Redux/actions/ventasActions';\nimport Swal from 'sweetalert2';\n\nconst VentasDetalleTable = ({data, setShowForm}) => {\n    // HOOKS\n    const dispatch = useDispatch();\n\n    const handleSelectVenta = (venta) => {\n        setShowForm(true);\n        dispatch(seleccionarVenta(venta.id));\n    }\n\n    const handleCancelVenta = (venta) => {\n        Swal.fire({\n            title: 'Desea cancelar la venta?',\n            showCancelButton: true,\n            confirmButtonText: `Cancelar Venta`,\n            cancelButtonText: `Cerrar`\n        }).then(async (result) => {\n            if (result.isConfirmed) {\n                const { value: text } = await Swal.fire({\n                    input: 'textarea',\n                    inputLabel: 'RAZÓN DE CANCELACIÓN',\n                    inputPlaceholder: 'Escriba la razón...',\n                    inputAttributes: {\n                    'aria-label': 'Type your message here',\n                    },\n                    showCancelButton: true,\n                    confirmButtonText: 'Confirmar',\n                    cancelButtonText: 'Cancelar'\n                })\n                if (text) {\n                    dispatch(cancelarVentaCaja({venta, razon: text}));\n                }\n            }\n        });\n    }\n\n    return (\n        <>\n        <table className=\"table table-hover table-secondary\">\n            <thead>\n                <tr>\n                    <th scope=\"col\">#</th>\n                    <th scope=\"col\">Producto</th>\n                    <th scope=\"col\">Precio Venta</th>\n                    <th scope=\"col\">IMEI</th>\n                    <th scope=\"col\">ICC</th>\n                    <th scope=\"col\">Número</th>\n                    <th scope=\"col\">Fecha</th>\n                </tr>\n            </thead>\n            <tbody>\n            {\n                data.map((venta, index) => (\n                    <tr\n                        key={venta.id}\n                    >\n                    <th scope=\"row\">{index+1}</th>\n                    <td>{venta.Producto ? venta.Producto.name + \" \" + venta.Producto.Categorium.name : \" \" }</td>\n                    <td>{venta.precioFinal ? venta.precioFinal : \"\"}</td>\n                    <td>{venta.imei ? venta.imei : \"\"}</td>\n                    <td>{venta.icc ? venta.icc : \"\"}</td>\n                    <td>{venta.numero ? venta.numero : \"\"}</td>\n                    <td>{new Date(venta.createdAt).toLocaleDateString()}</td>\n                    </tr>\n                ))\n            }\n            </tbody>\n        </table>\n        </>\n    )\n}\n\nexport default VentasDetalleTable;","import React, {useEffect, useState} from 'react';\nimport {useDispatch, useSelector} from 'react-redux';\nimport {getReporteEncabezados, getReporteEncabezadosHoy, getReporteVentasGanancias, obtenerListadoVentasHoy, obtenerVentas, obtenerVentasUsuarios, getReporteVentasProducto, clearListadosVentas} from '../Redux/actions/ventasActions';\nimport VentasTable from './VentasTable';\nimport Swal from 'sweetalert2';\nimport Loader from 'react-loader-spinner';\nimport {Col, Container, Modal, Row, Tabs} from 'react-bootstrap';\nimport {RiPrinterLine} from 'react-icons/ri';\nimport { useReactToPrint } from 'react-to-print';\nimport { useRef } from 'react';\nimport Recibo from './Recibo';\nimport { Tab } from 'bootstrap';\nimport ReporteUsuarios from './ReporteUsuarios';\nimport ReporteGanancias from './ReporteGanancias';\nimport { obtenerUsuario } from '../Redux/actions/usersActions';\nimport { Redirect } from 'react-router-dom';\nimport VentasEncabezosTable from './VentasEncabezadosTable';\nimport VentaProductos from './VentaProductos';\nimport { obtenerProductos, crearProducto, seleccionarProducto, editarProducto, deleteProducto, obtenerTotalProductos, getReporteProductos, crearProductoStock, obtenerListadoStock, getReporteProductosStock, obtenerTotalInvertido } from '../Redux/actions/productosActions';\nimport VentasDetalleTable from './VentasDetalleTable';\n\nconst ControlVentas = () => {\n    const dispatch = useDispatch();\n    const productos = useSelector((state) => state.productos.productos);\n    const productosNoDisponibles = useSelector((state) => state.productos.productosNoDisponibles);\n    const [productoStock, setProductoVenta] = useState(null);\n    const [formFechas, setFormFechas] = useState({\n        fechaInicio: null,\n        fechaFin: null\n    });\n    const [formFechasReporte, setFormFechasReporte] = useState({\n        fechaInicio: null,\n        fechaFin: null\n    });\n    const [formFechasGanancia, setFormFechasGanancia] = useState({\n        fechaInicio: null,\n        fechaFin: null\n    });\n    const [formFechasEncabezado, setFormFechasEncabezado] = useState({\n        fechaInicio: null,\n        fechaFin: null\n    });\n    const [showForm, setShowForm] = useState(false);\n    // Opciones de productos para select\n    const [productsOptions, setProductOptions] = useState([]);\n    const componentRef = useRef();\n\n    // Obtener ventas\n    useEffect(() => {\n        dispatch(clearListadosVentas());\n        dispatch(obtenerUsuario());\n        dispatch(obtenerProductos());\n    }, [dispatch])\n\n    // Transformación de data de productos.\n    useEffect(() => {\n        if(productos && productosNoDisponibles){\n            let productsTransform = productos.map((prod) => ({\n                value: prod.id,\n                label: `${prod.categoria}-${prod.name}${prod.color != null ? `-${prod.color}` : ''}`\n            }));\n            let productsTransformNo = productosNoDisponibles.map((prod) => ({\n                value: prod.id,\n                label: `${prod.categoria}-${prod.name}${prod.color != null ? `-${prod.color}` : ''}`\n            }));\n            setProductOptions([...productsTransform, ...productsTransformNo]);\n        }\n    }, [productos,productosNoDisponibles])\n\n    const usuarioVerificacion = useSelector((state) => state.usuarios);\n\n    const ventas = useSelector((state) => state.ventas.ventas);\n    const reporteVentasUsuarios = useSelector((state) => state.ventas.reporteVentasUsuarios);\n    const reporteGanancias = useSelector((state) => state.ventas.reporteGanancias);\n    const ventaSeleccionada = useSelector((state) => state.ventas.ventaSeleccionada);\n    const reporteEncabezados = useSelector((state) => state.ventas.encabezadosHoy);\n    const reporteVentaEncabezados = useSelector((state) => state.ventas.encabezadosHoy);\n    const reporteVentasProducto = useSelector((state) => state.ventas.reporteVentasProducto);\n\n    const handlePrint = useReactToPrint({\n        content: () => componentRef.current,\n    });\n\n    const handleInputChange = (e) => {\n        setFormFechas({...formFechas,[e.target.name] : e.target.value});\n    }\n\n    const handleInputChangeReporte = (e) => {\n        setFormFechasReporte({...formFechasReporte,[e.target.name] : e.target.value});\n    }\n\n    const handleInputChangeGanancia = (e) => {\n        setFormFechasGanancia({...formFechasGanancia,[e.target.name] : e.target.value});\n    }\n\n    const handleInputChangeEncabezado = (e) => {\n        setFormFechasEncabezado({...formFechasEncabezado,[e.target.name] : e.target.value});\n    }\n\n    const handleObtenerVentas = () => {\n        const {fechaInicio, fechaFin} = formFechas;\n        if(!fechaInicio || !fechaFin){\n            Swal.fire(\n                'Debe seleccionar dos fechas.',\n                'Audiocell.',\n                'error'\n            );\n        } else {\n            const endDate = new Date(fechaFin);\n            endDate.setDate(endDate.getDate() + 1);\n            formFechas.fechaFin = endDate;\n            dispatch(obtenerVentas(formFechas));\n        }\n    }\n\n    const handleObtenerVentasHoy = () => {\n        dispatch(obtenerListadoVentasHoy());\n    }\n\n    const handleObtenerVentasUsuarios = () => {\n        const {fechaInicio, fechaFin} = formFechasReporte;\n        if(!fechaInicio || !fechaFin){\n            Swal.fire(\n                'Debe seleccionar dos fechas.',\n                'Audiocell.',\n                'error'\n            );\n        } else {\n            const endDate = new Date(fechaFin);\n            endDate.getDate(endDate.getDate() + 1);\n            formFechasReporte.fechaFin = endDate;\n            dispatch(obtenerVentasUsuarios(formFechasReporte));\n        }\n    }\n\n    const handleObtenerVentasGanancias = () => {\n        const {fechaInicio, fechaFin} = formFechasGanancia;\n        if(!fechaInicio || !fechaFin){\n            Swal.fire(\n                'Debe seleccionar dos fechas.',\n                'Audiocell.',\n                'error'\n            );\n        } else {\n            const endDate = new Date(fechaFin);\n            endDate.setDate(endDate.getDate() + 1);\n            formFechasGanancia.fechaFin = endDate;\n            dispatch(getReporteVentasGanancias(formFechasGanancia));\n        }\n    }\n\n    const handleObtenerEncabezados = () => {\n        const {fechaInicio, fechaFin} = formFechasEncabezado;\n        if(!fechaInicio || !fechaFin){\n            Swal.fire(\n                'Debe seleccionar dos fechas.',\n                'Audiocell.',\n                'error'\n            );\n        } else {\n            const endDate = new Date(fechaFin);\n            endDate.setDate(endDate.getDate() + 1);\n            formFechasEncabezado.fechaFin = endDate;\n            dispatch(getReporteEncabezados(formFechasEncabezado));\n        }\n    }\n\n    const handleObtenerEncabezadosHoy = () => {\n        dispatch(getReporteEncabezadosHoy());\n    }\n\n    const handleObtenerVentasProducto = (values) => {\n        console.log(values);\n        if(productoStock == null)\n        {\n            Swal.fire('Error', 'Debe seleccionar un producto', 'error');\n        }\n        else\n        {\n            dispatch(getReporteVentasProducto(productoStock));\n        }\n        console.log(productoStock);\n    }\n\n    if(usuarioVerificacion){\n        if(usuarioVerificacion.me){\n            console.log(\"USUARIO VER\",usuarioVerificacion.me.rol);\n            if(usuarioVerificacion.me.rol !== \"ADMIN\"){\n                return (\n                    <Redirect to=\"/home\" />\n                )\n            }\n        }\n    }\n    return (\n        <div className=\"contenedor-ventasGeneral\">\n        <Tabs defaultActiveKey=\"ventas\" id=\"uncontrolled-tab-example\" className=\"mb-3\">\n        <Tab eventKey=\"ventas\" title=\"Listado de ventas\">\n            <div className=\"contenedor-ventas\">\n                <h1>Listado de Ventas</h1>\n                <div\n                    style={{display: \"flex\", justifyContent:\"space-around\", flexWrap:\"wrap\"}}\n                >\n                    <div>\n                        <label htmlFor=\"\">Fecha Inicio</label>\n                        <input\n                                name=\"fechaInicio\"\n                                className=\"form-control md-4\"\n                                type=\"date\"\n                                value={formFechasEncabezado.fechaInicio}\n                                onChange={handleInputChangeEncabezado}\n                        />\n                    </div>\n                    <div>\n                        <label htmlFor=\"\">Fecha Fin</label>\n                        <input\n                                name=\"fechaFin\"\n                                className=\"form-control md-4\"\n                                type=\"date\"\n                                value={formFechasEncabezado.fechaFin}\n                                onChange={handleInputChangeEncabezado}\n                        />\n                    </div>\n                    <button\n                        className=\"btn btn-primary mt-2\"\n                        onClick={handleObtenerEncabezados}\n                    >\n                        Generar Reporte\n                    </button>\n                    <button\n                        className=\"btn btn-primary mt-2\"\n                        onClick={handleObtenerEncabezadosHoy}\n                    >\n                        Ventas Hoy\n                    </button>\n                </div>\n                <hr />\n                <div\n                    style={{overflowY: \"scroll\", maxHeight: \"400px\"}}\n                >\n                {\n                    reporteEncabezados ? (\n                        <VentasEncabezosTable\n                            data={reporteEncabezados}\n                            setShowForm={setShowForm}\n                        />\n                    ) : (\n                        <p></p>\n                    )\n                }\n            </div>\n            <Modal \n                aria-labelledby=\"contained-modal-title-vcenter\"\n                show={showForm}\n                onHide={setShowForm}\n            >\n                <Modal.Header closeButton>\n                    <Modal.Title id=\"contained-modal-title-vcenter\">\n                        Información de venta\n                    </Modal.Title>\n                </Modal.Header>\n                <Modal.Body className=\"show-grid\">\n                    {\n                        ventaSeleccionada ? (\n                            <Container>\n                                <div\n                                    style={{display:\"none\"}}\n                                >\n                                    <Recibo \n                                        ref={componentRef}\n                                        infoRecibo={ventaSeleccionada.encabezado}\n                                        productos={ventaSeleccionada.productosVendidos}\n                                    />\n                                </div>\n                                <Row>\n                                    <Col xs={12} md={7}>\n                                    <p><b>Correlativo: </b>{ventaSeleccionada?.encabezado?.correlativo || \"\"}</p>\n                                    </Col>\n                                    <Col xs={6} md={5}>\n                                    <p><b>Fecha: </b>{new Date(ventaSeleccionada.encabezado?.createdAt).toLocaleDateString()}</p>\n                                    </Col>\n                                </Row>\n                                <Row>\n                                    <Col xs={12} md={8}>\n                                    <p><b>Cliente: </b> {ventaSeleccionada.encabezado?.nombreCliente}</p>\n                                    </Col>\n                                    <Col xs={6} md={4}>\n                                    <p><b>DPI: </b> {ventaSeleccionada.encabezado.dpi ? ventaSeleccionada.encabezado.dpi : \"---\"}</p>\n                                    </Col>\n                                </Row>\n                                <Row>\n                                    <Col xs={12} md={8}>\n                                    <p><b>Dirección</b> {ventaSeleccionada.encabezado.direccion ? ventaSeleccionada.encabezado.direccion : \" ---\"}</p>\n                                    </Col>\n                                    <Col xs={6} md={4}>\n                                    <p><b>Teléfono:</b> {ventaSeleccionada.encabezado.numero ? ventaSeleccionada.encabezado.numero : \" ---\"}</p>\n                                    </Col>\n                                </Row>\n                                <Row>\n                                    <h5>Información de productos</h5>\n                                    {\n                                        ventaSeleccionada.productosVendidos.map((prod) => (\n                                            <>\n                                                <hr></hr>\n                                                <Col xs={6} md={4}>\n                                                <p>{prod.Producto.Categorium.name}</p>\n                                                </Col>\n                                                <Col xs={6} md={4}>\n                                                <p>{prod.Producto.name} - {prod.Producto.color}</p>\n                                                </Col>\n                                                <Col xs={6} md={4}>\n                                                <p>Q.{prod.precioFinal}</p>\n                                                </Col>\n                                                <Row>\n                                                    <Col xs={6} md={6}>\n                                                    <p>IMEI:{prod.imei ? prod.imei : '-----'}</p>\n                                                    </Col>\n                                                    <Col xs={6} md={6}>\n                                                    <p>ICC: {prod.icc ? prod.icc : '-----'}</p>\n                                                    </Col>\n                                                </Row>\n                                            </>\n                                        ))\n                                    }\n                                </Row>\n                                <Row>\n                                    <Col xs={12} md={12}>\n                                        <button\n                                            className=\"btn btn-secondary btn-block\"\n                                            onClick={handlePrint}\n                                        >\n                                            <RiPrinterLine \n                                                size=\"20px\"\n                                            />\n                                            RECIBO\n                                        </button>\n                                    </Col>\n                                </Row>\n                            </Container>\n                        ) : (\n                            <div\n                                style={{display:\"flex\", justifyContent:\"center\"}}\n                            >\n                                <Loader\n                                    type=\"ThreeDots\"\n                                    color=\"#121D3B\"\n                                    height={100}\n                                    width={100}\n                                />\n                            </div>\n                        )\n                    }\n                </Modal.Body>\n                <Modal.Footer>\n                    <button\n                        className=\"btn btn-primary btn-block\"\n                        onClick={() => {setShowForm(false)}}\n                    >\n                        Cerrar\n                    </button>\n                </Modal.Footer>\n            </Modal>\n            </div>\n            </Tab>\n            <Tab eventKey=\"profile\" title=\"Reporte Usuario\">\n            <div className=\"contenedor-ventas\">\n                <h1>Reporte de Usuario</h1>\n                <div\n                    style={{display: \"flex\", justifyContent:\"space-around\", flexWrap:\"wrap\"}}\n                >\n                    <div>\n                        <label htmlFor=\"\">Fecha Inicio</label>\n                        <input\n                                name=\"fechaInicio\"\n                                className=\"form-control md-4\"\n                                type=\"date\"\n                                value={formFechasReporte.formInicio}\n                                onChange={handleInputChangeReporte}\n                        />\n                    </div>\n                    <div>\n                        <label htmlFor=\"\">Fecha Fin</label>\n                        <input\n                                name=\"fechaFin\"\n                                className=\"form-control md-4\"\n                                type=\"date\"\n                                value={formFechasReporte.formFin}\n                                onChange={handleInputChangeReporte}\n                        />\n                    </div>\n                    <button\n                        className=\"btn btn-primary mt-2\"\n                        onClick={handleObtenerVentasUsuarios}\n                    >\n                        Buscar Ventas\n                    </button>\n                </div>\n                <hr />\n                <div\n                    style={{overflowY: \"scroll\", maxHeight: \"400px\"}}\n                >\n                {\n                    reporteVentasUsuarios ? (\n                        <ReporteUsuarios\n                            data={reporteVentasUsuarios}\n                        />\n                    ) : (\n                        <p></p>\n                    )\n                }\n            </div>\n            </div>\n            </Tab>\n            <Tab eventKey=\"ganancias\" title=\"Reporte Ganancias\">\n            <div className=\"contenedor-ventas\">\n                <h1>Reporte de Ganancias</h1>\n                <div\n                    style={{display: \"flex\", justifyContent:\"space-around\", flexWrap:\"wrap\"}}\n                >\n                    <div>\n                        <label htmlFor=\"\">Fecha Inicio</label>\n                        <input\n                                name=\"fechaInicio\"\n                                className=\"form-control md-4\"\n                                type=\"date\"\n                                value={formFechasGanancia.formInicio}\n                                onChange={handleInputChangeGanancia}\n                        />\n                    </div>\n                    <div>\n                        <label htmlFor=\"\">Fecha Fin</label>\n                        <input\n                                name=\"fechaFin\"\n                                className=\"form-control md-4\"\n                                type=\"date\"\n                                value={formFechasGanancia.formFin}\n                                onChange={handleInputChangeGanancia}\n                        />\n                    </div>\n                    <button\n                        className=\"btn btn-primary mt-2\"\n                        onClick={handleObtenerVentasGanancias}\n                    >\n                        Generar Reporte\n                    </button>\n                </div>\n                <hr />\n                <div\n                    style={{overflowY: \"scroll\", maxHeight: \"400px\"}}\n                >\n                {\n                    reporteGanancias ? (\n                        <ReporteGanancias\n                            data={reporteGanancias}\n                        />\n                    ) : (\n                        <p></p>\n                    )\n                }\n            </div>\n            </div>\n            </Tab>\n            <Tab eventKey=\"vproductos\" title=\"Ventas de producto\">\n            <div className=\"contenedor-ventas\">\n                <h1>Ventas por producto</h1>\n                <div\n                >\n                    <VentaProductos\n                        onSubmit={handleObtenerVentasProducto}\n                        productos={productsOptions}\n                        setProductoVenta={setProductoVenta}\n                        productoStock={productoStock}\n                    />\n                </div>\n                <hr />\n                <div\n                    style={{overflowY: \"scroll\", maxHeight: \"400px\"}}\n                >\n                {\n                    (reporteVentasProducto != null && reporteVentasProducto.length > 0) && (\n                        <VentasDetalleTable \n                            data={reporteVentasProducto}\n                        />\n                    )\n                }\n            </div>\n            </div>\n            </Tab>\n        </Tabs>\n        </div>\n    )\n}\n\nexport default ControlVentas;","import React from 'react';\n// import { useDispatch } from 'react-redux';\n\nconst ReporteCategorias = ({data, setShowForm}) => {\n    // HOOKS\n    // const dispatch = useDispatch();\n    // STATE\n    // const [totalVendido, setTotalVendido] = useState(0);\n\n    // useEffect(() => {\n    //     if(data){\n    //         let total = 0;\n    //         data.forEach((producto) => {\n    //             total += parseFloat(producto.total);\n    //         });\n    //         setTotalVendido(total);\n    //     }\n    // }, [data])\n\n\n    return (\n        <>\n        <table className=\"table table-hover table-secondary\">\n            <thead>\n                <tr>\n                    <th scope=\"col\">#</th>\n                    <th scope=\"col\">Categoría</th>\n                    <th scope=\"col\">Cantidad</th>\n                    <th scope=\"col\">Total Dinero</th>\n                </tr>\n            </thead>\n            <tbody>\n            {\n                data.map((venta, index) => (\n                    <tr\n                        key={index}\n                    >\n                    <th scope=\"row\">{index+1}</th>\n                    <td>{venta.name}</td>\n                    <td>{venta.cantidad}</td>\n                    <td>Q.{venta.total}</td>\n                    </tr>\n                ))\n            }\n            </tbody>\n        </table>\n        {/* <div>\n            <h5>Total Vendido {new Date().toLocaleDateString()}: Q.{totalVendido}</h5>\n        </div> */}\n        </>\n    )\n}\n\nexport default ReporteCategorias;","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { obtenerCaja, abrirCaja, cerrarCaja } from '../Redux/actions/cajaActions';\nimport {useHistory} from 'react-router-dom';\nimport Loader from 'react-loader-spinner';\nimport Swal from 'sweetalert2';\nimport {Tab, Tabs} from 'react-bootstrap';\nimport { getReporteEncabezadosHoy, getReporteVentasCategoriaHoy, obtenerVentasHoy } from '../Redux/actions/ventasActions';\nimport VentasTable from '../Ventas/VentasTable';\nimport {Col, Container, Modal, Row} from 'react-bootstrap';\nimport {RiPrinterLine} from 'react-icons/ri';\nimport Recibo from '../Ventas/Recibo';\nimport { useRef } from 'react';\nimport { useReactToPrint } from 'react-to-print';\nimport VentasCaja from '../Ventas/VentasCaja';\nimport ReporteCategorias from '../Ventas/ReporteCategorias';\nimport VentasEncabezosTable from '../Ventas/VentasEncabezadosTable';\n\nconst ControlCaja = () => {\n    const dispatch = useDispatch();\n    const history = useHistory();\n    const caja = useSelector((state) => state.caja.cajaActual);\n    // Verificar si usuario logueado es admin\n    const [admin, setAdmin] = useState(false);\n    const ventasHoy = useSelector((state) => state.ventas.encabezadosHoy);\n    const usuario = useSelector((state) => state.usuarios);\n    const ventaSeleccionada = useSelector((state) => state.ventas.ventaSeleccionada);\n    const reporteVentasCategoria = useSelector((state) => state.ventas.reporteVentasCategoria);\n    const [valorCaja, setValorCaja] = useState(0);\n    const [showForm, setShowForm] = useState(false);\n    const [buttonLoader, setButtonLoader] = useState(false);\n    const [closeButtonLoader, setCloseButtonLoader] = useState(false);\n    const componentRef = useRef();\n\n    useEffect(() => {\n        dispatch(obtenerCaja());\n        dispatch(getReporteEncabezadosHoy());\n        dispatch(getReporteVentasCategoriaHoy());\n    }, [dispatch]);\n\n    useEffect(() => {\n        if(usuario){\n            if(usuario.me){\n                if(usuario.me.rol === \"ADMIN\"){\n                    setAdmin(true);\n                } else if(usuario.me.rol === \"VENTAS\"){\n                    setAdmin(false);\n                }\n            }\n        }\n    }, [usuario])\n\n    const handleInputChange = (e) => {\n        setValorCaja(e.target.value);\n    }\n\n    const handlePrint = useReactToPrint({\n        content: () => componentRef.current,\n    });\n\n    const handleAbrirCaja = () => {\n        if(valorCaja === '' || valorCaja < 0){\n            Swal.fire(\n                'Debe ingresar una cantidad válida.',\n                'Audiocell.',\n                'error'\n            );\n        } else {\n            dispatch(abrirCaja(valorCaja));\n            setButtonLoader(true); \n            setCloseButtonLoader(false);\n        }\n    }\n    \n    const handleCerrarCaja = () => {\n        setValorCaja(0);\n        dispatch(cerrarCaja());\n        setButtonLoader(false); \n        setCloseButtonLoader(true);\n    }\n\n    return ( \n        <div className=\"contenedor-ventas\">\n        <div\n            style={{display: \"flex\", flexWrap: \"wrap\"}}\n        >\n            <h1>Control de Caja</h1>\n            {\n                admin &&\n                <button\n                    className=\"btn btn-primary ml-5\"\n                    onClick={() => {history.push('/cajas')}}\n                >\n                    Historial Caja\n                </button>\n            }\n        </div>\n        <hr/>\n        {\n            caja ? (\n                caja.status === \"CERRADO\" ? (\n                    <div>\n                        <label htmlFor=\"valorCaja\">CANTIDAD EFECTIVO ACTUAL</label>\n                        <input\n                            name=\"apertura\"\n                            className=\"form-control md-6\"\n                            type=\"number\"\n                            defaultValue={valorCaja}\n                            onChange={handleInputChange}\n                        />\n                        <br/>\n                        <br/>\n                        <button\n                            className={`btn btn-primary btn-block ${buttonLoader && 'disabled'}`}\n                            onClick={handleAbrirCaja}\n                        >\n                            {\n                                buttonLoader ? (\n                                    <span className=\"spinner-border spinner-border-sm\" role=\"status\" aria-hidden=\"true\"></span>\n                                ) : (\n                                    'ABRIR CAJA'\n                                )\n                            }\n                        </button>\n                        <div className=\"mt-5\" style={{overflowX:\"auto\"}}>\n                            {\n                                ventasHoy &&\n                                    <VentasEncabezosTable\n                                        data={ventasHoy}\n                                        setShowForm={setShowForm}\n                                    />\n                            }\n                            {\n                                reporteVentasCategoria &&\n                                    <ReporteCategorias\n                                        data={reporteVentasCategoria}\n                                    />\n                            }\n                        </div>\n                    </div>\n                ) : (\n                    <div\n                        style={{color: \"black\"}}\n                    >\n                        <button\n                            className={`btn btn-primary btn-block ${closeButtonLoader && 'disabled'}`}\n                            onClick={handleCerrarCaja}\n                        >\n                            {\n                                closeButtonLoader ? (\n                                    <span className=\"spinner-border spinner-border-sm\" role=\"status\" aria-hidden=\"true\"></span>\n                                ) : (\n                                    'CERRAR CAJA'\n                                )\n                            }\n                        </button>\n                        <br/>\n                        <Tabs defaultActiveKey=\"profile\" id=\"uncontrolled-tab-example\" className=\"mb-3\">\n                            <Tab eventKey=\"home\" title=\"Movimiento del día\">\n                                <div className=\"card text-center\">\n                                    <div className=\"card-header\">\n                                        <h3>Información de caja</h3>\n                                    </div>\n                                    <div className=\"card-body\">\n                                        <h5>Actual Caja: Q.{caja.cantidadEfectivo}</h5>\n                                        <h6>EFECTIVO: Q.{caja.cantidadEfectivoDia}</h6>\n                                        <h6>TARJETA: Q.{caja.cantidadTarjeta}</h6>\n                                        <br/>\n                                        <h4>VENTAS HOY: Q.{parseInt(caja.cantidadEfectivoDia)+parseInt(caja.cantidadTarjeta)}</h4>\n                                    </div>\n                                    <div className=\"card-footer text-muted\">\n                                        Audiocell.\n                                    </div>\n                                </div>\n                            </Tab>\n                            <Tab eventKey=\"profile\" title=\"Listado Ventas\">\n                                <div style={{overflowX:\"auto\"}}>\n                                    {\n                                        ventasHoy &&\n                                            <VentasEncabezosTable\n                                                data={ventasHoy}\n                                                setShowForm={setShowForm}\n                                            />\n                                    }\n                                </div>\n                            </Tab>\n                        </Tabs>\n                        \n                    \n                    </div>\n                )\n            ) : (\n                <div\n                    style={{display: \"flex\", justifyContent:\"center\", alignItems:\"center\"}}\n                >\n                    <Loader\n                        type=\"ThreeDots\"\n                        color=\"#121D3B\"\n                        height={100}\n                        width={100}\n                    />\n                </div>\n            )\n        }\n        <br/>\n        <Modal \n                aria-labelledby=\"contained-modal-title-vcenter\"\n                show={showForm}\n                onHide={setShowForm}\n            >\n                <Modal.Header closeButton>\n                    <Modal.Title id=\"contained-modal-title-vcenter\">\n                        Información de venta\n                    </Modal.Title>\n                </Modal.Header>\n                <Modal.Body className=\"show-grid\">\n                    {\n                        ventaSeleccionada ? (\n                            <Container>\n                                <div\n                                    style={{display:\"none\"}}\n                                >\n                                    <Recibo \n                                        ref={componentRef}\n                                        infoRecibo={ventaSeleccionada.encabezado}\n                                        productos={ventaSeleccionada.productosVendidos}\n                                    />\n                                </div>\n                                <Row>\n                                    <Col xs={12} md={7}>\n                                    <p><b>Correlativo: </b>{ventaSeleccionada.encabezado.correlativo}</p>\n                                    </Col>\n                                    <Col xs={6} md={5}>\n                                    <p><b>Fecha: </b>{new Date(ventaSeleccionada.encabezado.createdAt).toLocaleDateString()}</p>\n                                    </Col>\n                                </Row>\n                                <Row>\n                                    <Col xs={12} md={8}>\n                                    <p><b>Cliente: </b> {ventaSeleccionada.encabezado.nombreCliente}</p>\n                                    </Col>\n                                    <Col xs={6} md={4}>\n                                    <p><b>DPI: </b> {ventaSeleccionada.encabezado.dpi ? ventaSeleccionada.encabezado.dpi : \"---\"}</p>\n                                    </Col>\n                                </Row>\n                                <Row>\n                                    <Col xs={12} md={8}>\n                                    <p><b>Dirección</b> {ventaSeleccionada.encabezado.direccion ? ventaSeleccionada.encabezado.direccion : \" ---\"}</p>\n                                    </Col>\n                                    <Col xs={6} md={4}>\n                                    <p><b>Teléfono:</b> {ventaSeleccionada.encabezado.numero ? ventaSeleccionada.encabezado.numero : \" ---\"}</p>\n                                    </Col>\n                                </Row>\n                                <Row>\n                                    <h5>Información de productos</h5>\n                                    {\n                                        ventaSeleccionada.productosVendidos.map((prod) => (\n                                            <>\n                                                <hr></hr>\n                                                <Col xs={6} md={4}>\n                                                <p>{prod.Producto.Categorium.name}</p>\n                                                </Col>\n                                                <Col xs={6} md={4}>\n                                                <p>{prod.Producto.name} - {prod.Producto.color}</p>\n                                                </Col>\n                                                <Col xs={6} md={4}>\n                                                <p>Q.{prod.Producto.precioVenta}</p>\n                                                </Col>\n                                                <Row>\n                                                    <Col xs={6} md={6}>\n                                                    <p>IMEI:{prod.imei ? prod.imei : '-----'}</p>\n                                                    </Col>\n                                                    <Col xs={6} md={6}>\n                                                    <p>ICC: {prod.icc ? prod.icc : '-----'}</p>\n                                                    </Col>\n                                                </Row>\n                                            </>\n                                        ))\n                                    }\n                                </Row>\n                                <Row>\n                                    <Col xs={12} md={12}>\n                                        <button\n                                            className=\"btn btn-secondary btn-block\"\n                                            onClick={handlePrint}\n                                        >\n                                            <RiPrinterLine \n                                                size=\"20px\"\n                                            />\n                                            RECIBO\n                                        </button>\n                                    </Col>\n                                </Row>\n                            </Container>\n                        ) : (\n                            <div\n                                style={{display:\"flex\", justifyContent:\"center\"}}\n                            >\n                                <Loader\n                                    type=\"ThreeDots\"\n                                    color=\"#121D3B\"\n                                    height={100}\n                                    width={100}\n                                />\n                            </div>\n                        )\n                    }\n                </Modal.Body>\n                <Modal.Footer>\n                    <button\n                        className=\"btn btn-primary btn-block\"\n                        onClick={() => {setShowForm(false)}}\n                    >\n                        Cerrar\n                    </button>\n                </Modal.Footer>\n            </Modal>\n        </div>\n    );\n}\n\nexport default ControlCaja;","import React from 'react';\n\nconst CajasTable = ({data}) => {\n    return (\n    <table className=\"table table-hover table-secondary\">\n            <thead>\n            <tr>\n                <th scope=\"col\">#</th>\n                <th scope=\"col\">Apertura</th>\n                <th scope=\"col\">Efectivo</th>\n                <th scope=\"col\">Tarjeta</th>\n                <th style={{color: \"blue\"}} scope=\"col\">Cierre</th>\n                <th scope=\"col\">Fecha</th>\n            </tr>\n        </thead>\n        <tbody>\n        {\n            data.map((caja, index) => (\n                <tr\n                    key={caja.id}\n                >\n                <th scope=\"row\">{index+1}</th>\n                <td>Q.{caja.cantidadEfectivoApertura}</td>\n                <td>Q.{caja.cantidadEfectivoDia}</td>\n                <td>Q.{caja.cantidadTarjeta}</td>\n                <td style={{color: \"blue\"}}>Q.{caja.cantidadEfectivoCierre}</td>\n                <td>{new Date(caja.createdAt).toLocaleDateString()}</td>\n                </tr>\n            ))\n        }\n        </tbody>\n    </table>\n    )\n}\n\nexport default CajasTable;","import React, {useEffect} from 'react';\nimport { useState } from 'react';\nimport Loader from 'react-loader-spinner';\nimport {useDispatch, useSelector} from 'react-redux';\nimport { obtenerCajas } from '../Redux/actions/cajaActions';\nimport CajasTable from './CajasTable';\nimport { useHistory } from \"react-router-dom\";\n\nconst ListadoCajas = () => {\n    const dispatch = useDispatch();\n    const history = useHistory();\n\n    // STATE\n    const [loading, setLoading] = useState(true);\n    const [buscador, setBuscador] = useState(\"\");\n    const [cajasSeleccionadas, setCajasSeleccionadas] = useState([]);\n    // STORE\n    const cajas = useSelector((state) => state.caja.cajasGeneral);\n\n    // Obtener ventas\n    useEffect(() => {\n        dispatch(obtenerCajas());\n    }, [dispatch])\n\n    useEffect(() => {\n        if(cajas){\n            setLoading(false);\n        }\n    }, [cajas])\n\n    const handleChangeBuscador = (e) => {\n        setBuscador(e.target.value);\n    }\n\n    const redirectCaja = () => {\n        history.push(\"/caja\");\n    }\n\n    useEffect(() => {\n        if(buscador !== \"\"){\n            const nuevasCajas = cajas.filter(\n                (caja) => \n                    ((new Date(caja.createdAt).toLocaleDateString().search(buscador)) !== -1));\n            setCajasSeleccionadas(nuevasCajas);\n        } else {\n            setCajasSeleccionadas(cajas);\n        }\n    }, [buscador, cajas])\n\n    if(loading){\n        return(\n            <div\n                style={{display:\"flex\", alignItems:\"center\", justifyContent:\"center\"}}\n            >\n                <Loader \n                    type=\"ThreeDots\"\n                    color=\"#121D3B\"\n                    height={100}\n                    width={100}\n                />\n            </div>\n        )\n    } else if(cajas){\n        return (\n            <div className=\"contenedor-ventas\">\n                <h4 style={{cursor: \"pointer\", marginTop: 0}} onClick={() => redirectCaja()}>←Control de Cajas</h4>\n                <div\n                    style={{display:\"flex\", justifyContent:\"space-between\", flexWrap:\"wrap\", alignItems:\"center\"}}\n                >\n                    <h1>Listado de Cajas</h1>\n                    <input\n                        style={{maxWidth: \"20%\"}}\n                        className=\"form-control md-4\"\n                        type=\"text\"\n                        value={buscador}\n                        onChange={handleChangeBuscador}\n                        placeholder=\"Buscar...\"\n                    />\n                </div>\n                <hr/>\n                <div\n                    style={{overflowY: \"scroll\", maxHeight: \"400px\"}}\n                >\n                    {\n                        cajasSeleccionadas ? (\n                            <CajasTable\n                                data={cajasSeleccionadas}\n                            />\n                        ) : (\n                            <Loader \n                                type=\"ThreeDots\"\n                                color=\"#121D3B\"\n                                height={100}\n                                width={100}\n                            />\n                        )\n                    }\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default ListadoCajas;","import React from 'react';\nimport {FaEdit} from 'react-icons/fa';\nimport {AiFillDelete} from 'react-icons/ai';\n\nconst UsuariosTable = ({data, handleSelectUser, handleDeleteUser}) => {\n    console.log(\"USERS:::\", data);\n    return (\n      <table className=\"table table-hover table-secondary\">\n        <thead>\n          <tr>\n            <th scope=\"col\">#</th>\n            <th scope=\"col\">Nombre</th>\n            <th scope=\"col\">Usuario</th>\n            <th scope=\"col\">Rol</th>\n            <th scope=\"col\">Tienda</th>\n            <th scope=\"col\">Editar</th>\n            <th scope=\"col\">Eliminar</th>\n          </tr>\n        </thead>\n        <tbody>\n        {\n            data.map((usuario, index) => (\n                <tr\n                    key={usuario.id}\n                >\n                <th scope=\"row\">{index+1}</th>\n                <td>{usuario.name}</td>\n                <td>{usuario.username}</td>\n                <td>{usuario.rol}</td>\n                <td>{usuario.rol !== \"ADMIN\" ? usuario.Tienda?.name : \"-\"} </td>\n                <td style={{display: \"flex\", justifyContent: \"center\"}}>\n                  <div style={{marginLeft: \"2px\"}}>\n                    <button \n                      className=\"btn btn-warning\"\n                      onClick={() => handleSelectUser(usuario)}\n                    >\n                    Editar\n                    <FaEdit \n                      size=\"20px\"\n                    />\n                    </button>\n                  </div>\n                </td>\n                <td>\n                  <div style={{marginLeft: \"20px\"}}>\n                      <button\n                        className=\"btn btn-danger\"\n                        onClick={() => handleDeleteUser(usuario.id)}\n                      >\n                      Eliminar\n                      <AiFillDelete \n                        size=\"20px\"\n                      />\n                      </button>\n                    </div>\n                </td>\n                </tr>\n            ))\n        }\n        </tbody>\n      </table>\n    )\n}\n\nexport default UsuariosTable;","import React from 'react';\nimport {Field, reduxForm} from 'redux-form';\n\nconst validate = values => {\n    const errors = {}\n    if(!values.rol){\n        errors.rol = \"Campo requerido\";\n    }\n    if(!values.name){\n        errors.name = \"Campo requerido\";\n    }\n    if(!values.password){\n        errors.password = \"Campo requerido\";\n    }\n    if(!values.username){\n        errors.username = \"Campo requerido\";\n    }\n    return errors;\n}\n\nconst renderField = ({\n    input,\n    label,\n    type,\n    placeholder,\n    meta: { touched, error }\n}) => (\n    <div>\n        <label>{label}</label>\n        <input {...input} placeholder={placeholder} type={type} className=\"form-control\" maxLength=\"30\"/>\n        {touched && ((error && <span style={{color: \"red\"}}>{error}</span>))}\n    </div>\n);\n\nconst UserForm = (props) => {    \n    const {handleSubmit, tiendas} = props;\n    return (\n        <form onSubmit={handleSubmit}>\n            <div className=\"mb-3\">\n                <label>Tienda</label>\n                <br/>\n                <Field\n                    name=\"tiendaId\"\n                    component=\"select\"\n                    className=\"form-control\"\n                    required\n                >\n                    <option value=\"0\">Seleccione una tienda</option>\n                    {tiendas.map((x,y) => \n                        <option value={x.id} key={x.id}>{x.name}</option>\n                    )}\n                </Field>\n            </div>\n            <div className=\"mb-3\">\n                <label>Rol</label>\n                <br/>\n                <Field\n                    name=\"rol\"\n                    component=\"select\"\n                    className=\"form-control\"\n                    required\n                >\n                    <option value=\"0\">Seleccione un rol</option>\n                    <option value=\"ADMIN\">ADMIN</option>\n                    <option value=\"VENTAS\">VENTAS</option>\n                </Field>\n            </div>\n            <div className=\"mb-3\">\n                <Field\n                    name=\"name\"\n                    type=\"text\"\n                    component={renderField}\n                    label=\"Nombre\"\n                    placeholder=\"Ingrese nombre\"\n                />\n            </div>\n            <div className=\"mb-3\">\n                <Field\n                    name=\"username\"\n                    type=\"text\"\n                    component={renderField}\n                    placeholder=\"Ingrese nombre usuario\"\n                    label=\"Usuario\"\n                />\n            </div>\n            <div className=\"mb-3\">\n                <Field\n                    name=\"password\"\n                    type=\"password\"\n                    component={renderField}\n                    placeholder=\"Ingrese la contraseña\"\n                    label=\"Contraseña\"\n                />\n            </div>\n            <div>\n                <button \n                    type=\"submit\"\n                    className=\"mt-3 btn btn-primary btn-block\"\n                >\n                Guardar\n                </button>\n            </div>\n        </form>\n    );\n}\n\nexport default reduxForm({\n    form: 'productoForm',\n    validate\n})(UserForm);","import React from 'react';\nimport {Field, reduxForm} from 'redux-form';\nimport {connect} from 'react-redux';\nimport { seleccionarUsuario } from '../Redux/actions/usersActions';\n\nconst validate = values => {\n    const errors = {}\n    if(!values.name){\n        errors.name = \"Campo requerido\";\n    }\n    if(!values.categoria){\n        errors.categoria = \"Campo requerido\";\n    }\n    if(!values.presentacion){\n        errors.presentacion = \"Campo requerido\";\n    }\n    if(!values.precio){\n        errors.precio = \"Campo requerido\";\n    }\n    if(!values.stock){\n        errors.stock = \"Campo requerido\";\n    }\n    return errors;\n}\n\nconst renderField = ({\n    input,\n    label,\n    type,\n    meta: { touched, error }\n}) => (\n    <div>\n        <label>{label}</label>\n        <input {...input} placeholder={label} type={type} className=\"form-control\"/>\n        {touched && ((error && <span style={{color: \"red\"}}>{error}</span>))}\n    </div>\n);\n\nlet UserEditForm = (props) => {    \n    const {handleSubmit} = props;\n    return (\n        <form onSubmit={handleSubmit}>\n            <div className=\"mb-3\">\n                <Field\n                    name=\"name\"\n                    type=\"text\"\n                    component={renderField}\n                    label=\"Nombre\"\n                    placeholder=\"Ingrese el nombre\"\n                />\n            </div>\n            <div className=\"mb-3\">\n                <Field\n                    name=\"password\"\n                    type=\"password\"\n                    component={renderField}\n                    placeholder=\"Ingrese la contraseña\"\n                    label=\"Contraseña\"\n                />\n            </div>\n            <div className=\"mb-3\">\n                <label>Rol</label>\n                <br/>\n                <Field\n                    name=\"rol\"\n                    component=\"select\"\n                    className=\"form-control\"\n                    required\n                >\n                    <option value=\"0\">Seleccione un rol</option>\n                    <option value=\"ADMIN\">ADMIN</option>\n                    <option value=\"VENTAS\">VENTAS</option>\n                </Field>\n            </div>\n            <div>\n                <button \n                    type=\"submit\"\n                    className=\"mt-3 btn btn-primary btn-block\"\n                >\n                Guardar\n                </button>\n            </div>\n        </form>\n    );\n}\n\nUserEditForm = reduxForm({\n    form: 'userEditForm',\n    validate\n})(UserEditForm);\n\nUserEditForm = connect(\n    state => ({\n        initialValues: state.usuarios.selectedUser\n    }),\n    { load: seleccionarUsuario }\n)(UserEditForm);\n\nexport default UserEditForm;","import React, {useEffect} from 'react';\nimport {useDispatch, useSelector} from 'react-redux';\nimport UsuariosTable from './UsuariosTable';\nimport { obtenerUsuarios, crearUsuario, seleccionarUsuario, editarUsuario, deleteUsuario, obtenerUsuario, obtenerTiendas } from '../Redux/actions/usersActions';\nimport Loader from \"react-loader-spinner\";\nimport { Modal } from 'react-bootstrap';\nimport { useState } from 'react';\nimport UserForm from './UserForm';\nimport UserEditForm from './UserEditForm';\nimport Swal from 'sweetalert2';\nimport { clientToken } from '../../config/axios';\nimport { Redirect } from 'react-router-dom';\n\nconst ListUsers = () => {\n    const dispatch = useDispatch();\n    const [show, setShow] = useState(false);\n    const [showEditForm, setShowEditForm] = useState(false);\n\n    const usuarioVerificacion = useSelector((state) => state.usuarios);\n\n    // Obtener ventas\n    useEffect(() => {\n        dispatch(obtenerUsuarios());\n        dispatch(obtenerUsuario());\n        dispatch(obtenerTiendas());\n    }, [dispatch])\n\n    // Handle submit form\n    const handleSubmit = (values) => {\n        setShow(false);\n        dispatch(crearUsuario(values))\n    }\n\n    const handleSelectUser = (usuario) => {\n        Swal.fire({\n            title: 'Introduzca contraseña',\n            input: 'password',\n            inputAttributes: {\n                autocapitalize: 'off'\n            },\n            showCancelButton: true,\n            cancelButtonText: \"Cancelar\",\n            confirmButtonText: 'Confirmar',\n            showLoaderOnConfirm: true,\n            preConfirm: (password) => {\n                const user = {\n                    password,\n                    username: usuarioVerificacion.me.username\n                }\n                return clientToken.post(`api/producto/verificar`, user)\n                    .then(response => {\n                        if(response.data.ok){\n                            return response.data.msg\n                        }\n                    })\n                    .catch(error => {\n                        Swal.showValidationMessage(\n                            `Contraseña incorrecta, vuelva a intentar`\n                        )\n                    })\n            },\n            allowOutsideClick: () => !Swal.isLoading()\n            }).then((result) => {\n                if (result.isConfirmed) {\n                    dispatch(seleccionarUsuario(usuario));\n                    setShowEditForm(true);\n                }\n            });\n    }\n\n    const handleSubmitEdit = (values) => {\n        dispatch(editarUsuario(values));\n        setShowEditForm(false);\n    }\n\n    const handleDeleteUser = (id) => {\n        Swal.fire({\n            title: 'Desea eliminar el usuario?',\n            showCancelButton: true,\n            confirmButtonText: `Eliminar`,\n            cancelButtonText: `Cancelar`\n        }).then((result) => {\n            if (result.isConfirmed) {\n                Swal.fire({\n                    title: 'Introduzca contraseña',\n                    input: 'password',\n                    inputAttributes: {\n                        autocapitalize: 'off'\n                    },\n                    showCancelButton: true,\n                    cancelButtonText: \"Cancelar\",\n                    confirmButtonText: 'Confirmar',\n                    showLoaderOnConfirm: true,\n                    preConfirm: (password) => {\n                        const user = {\n                            password,\n                            username: usuarioVerificacion.me.username\n                            \n                        }\n                        return clientToken.post(`api/producto/verificar`, user)\n                            .then(response => {\n                                if(response.data.ok){\n                                    return response.data.msg\n                                }\n                            })\n                            .catch(error => {\n                                Swal.showValidationMessage(\n                                    `Contraseña incorrecta, vuelva a intentar`\n                                )\n                            })\n                    },\n                    allowOutsideClick: () => !Swal.isLoading()\n                    }).then((result) => {\n                        if (result.isConfirmed) {\n                            dispatch(deleteUsuario(id));\n                        }\n                    });\n            }\n        });\n    }\n\n    const usuarios = useSelector((state) => state.usuarios.usuarios);\n    const tiendas = useSelector((state) => state.usuarios.tiendas);\n    \n    if(usuarioVerificacion){\n        if(usuarioVerificacion.me){\n            console.log(\"USUARIO VER\",usuarioVerificacion.me.rol);\n            if(usuarioVerificacion.me.rol !== \"ADMIN\"){\n                return (\n                    <Redirect to=\"/home\" />\n                )\n            }\n        }\n    }\n    return (\n        <div className=\"contenedor-usuarios\">\n            <div\n                style={{display: \"flex\", flexWrap: \"wrap\"}}\n            >\n                <h1>Control de usuarios</h1>\n                <button\n                    className=\"btn btn-primary ml-5\"\n                    onClick={()=> setShow(true)}\n                >\n                    Agregar Usuario\n                </button>\n            </div>\n            <hr/>\n            <div\n                style={{overflowY: \"scroll\", \"textAlign\": \"center\"}}\n            >\n                {\n                    usuarios ? (\n                        usuarios.length > 0 ? (\n                            <UsuariosTable\n                                data={usuarios}\n                                handleSelectUser={handleSelectUser}\n                                handleDeleteUser={handleDeleteUser}\n                            />\n                        ) : (\n                            <h3>No existe ningún registro.</h3>\n                        )\n                    ) : (\n                        <Loader \n                            type=\"ThreeDots\"\n                            color=\"#121D3B\"\n                            height={100}\n                            width={100}\n                        />\n                    )\n                }\n            </div>\n            {/* FORMULARIO PARA CREAR NUEVO USUARIO */}\n            <Modal\n                show={show}\n                onHide={() => {setShow(false)}}\n                backdrop=\"static\"\n                keyboard={false}\n            >\n                <Modal.Header closeButton>\n                    <Modal.Title>Crear nuevo usuario</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <UserForm \n                        onSubmit={handleSubmit}\n                        tiendas={tiendas}\n                    />\n                </Modal.Body>\n            </Modal>\n            {/* FORMULARIO DE EDICION DE USUARIO  */}\n            <Modal\n                show={showEditForm}\n                onHide={() => {setShowEditForm(false)}}\n                backdrop=\"static\"\n                keyboard={false}\n            >\n                <Modal.Header closeButton>\n                    <Modal.Title>Editar usuario</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <UserEditForm \n                        onSubmit={handleSubmitEdit}\n                    />\n                </Modal.Body>\n            </Modal>\n        </div>\n    )\n\n}\nexport default ListUsers;","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport {FaRegEye} from 'react-icons/fa';\nimport {seleccionarVentaCancelada} from '../Redux/actions/ventasActions';\n\nconst VentasCanceladasTable = ({data, setShowDetail}) => {\n    // HOOKS\n    const dispatch = useDispatch();\n    // STATE\n\n    const handleSelectVenta = (venta) => {\n        setShowDetail(true);\n        dispatch(seleccionarVentaCancelada(venta));\n    }\n\n    return (\n        <>\n        <table className=\"table table-hover table-secondary\">\n            <thead>\n                <tr>\n                    <th scope=\"col\">#</th>\n                    <th scope=\"col\">Correlativo</th>\n                    <th scope=\"col\">Cliente</th>\n                    <th scope=\"col\">NIT</th>\n                    <th scope=\"col\">Tipo Venta</th>\n                    <th scope=\"col\">Razón</th>\n                    <th scope=\"col\">Total</th>\n                    <th scope=\"col\">Fecha de Venta</th>\n                    <th scope=\"col\">Detalles</th>\n                </tr>\n            </thead>\n            <tbody>\n            {\n                data.map((venta, index) => (\n                    <tr\n                        key={venta.id}\n                    >\n                    <th scope=\"row\">{index+1}</th>\n                    <td>{venta.correlativo}</td>\n                    <td>{venta.nombreCliente}</td>\n                    <td>{venta.nit}</td>\n                    <td>{venta.tipoVenta}</td>\n                    <td>{venta.razonCancelacion}</td>\n                    <td>Q.{venta.total}</td>\n                    <td>{new Date(venta.createdAt).toLocaleDateString()}</td>\n                    <td style={{display: \"flex\", justifyContent: \"space-around\"}}>\n                        <div style={{marginLeft: \"2px\"}}>\n                            <button className=\"btn btn-warning\" onClick={() => {handleSelectVenta(venta)}}>\n                                Ver\n                                <FaRegEye\n                                size=\"20px\"\n                                />\n                            </button>\n                        </div>\n                    </td>\n                    </tr>\n                ))\n            }\n            </tbody>\n        </table>\n        </>\n    )\n}\n\nexport default VentasCanceladasTable;","import React, {useEffect, useState} from 'react';\nimport {useDispatch, useSelector} from 'react-redux';\nimport { obtenerVentasCanceladas } from '../Redux/actions/ventasActions';\nimport Loader from 'react-loader-spinner';\nimport {Col, Container, Modal, Row} from 'react-bootstrap';\nimport VentasCanceladasTable from './VentasCanceladasTable';\nimport Swal from 'sweetalert2';\n\nconst ListadoVentasCanceladas = () => {\n    const dispatch = useDispatch();\n    const [showDetail, setShowDetail] = useState(false);\n\n    const ventasCanceladas = useSelector((state) => state.ventas.ventasCanceladas);\n    const ventaCanceladaSeleccionada = useSelector((state) => state.ventas.ventaCanceladaSeleccionada);\n\n    const [formFechasReporte, setFormFechasReporte] = useState({\n        fechaInicio: null,\n        fechaFin: null\n    });\n\n    const handleInputChangeReporte = (e) => {\n        setFormFechasReporte({...formFechasReporte,[e.target.name] : e.target.value});\n    }\n\n    const handleObtenerVentasCanceladas = () => {\n        const {fechaInicio, fechaFin} = formFechasReporte;\n        if(!fechaInicio || !fechaFin){\n            Swal.fire(\n                'Debe seleccionar dos fechas.',\n                'Audiocell.',\n                'error'\n            );\n        } else {\n            dispatch(obtenerVentasCanceladas(formFechasReporte));\n        }\n    }\n    return (\n        <div className=\"contenedor-ventas\">\n            <h1>Listado Ventas Canceladas</h1>\n            <div\n                    style={{display: \"flex\", justifyContent:\"space-around\", flexWrap:\"wrap\"}}\n                >\n                    <div>\n                        <label htmlFor=\"\">Fecha Inicio</label>\n                        <input\n                                name=\"fechaInicio\"\n                                className=\"form-control md-4\"\n                                type=\"date\"\n                                value={formFechasReporte.formInicio}\n                                onChange={handleInputChangeReporte}\n                        />\n                    </div>\n                    <div>\n                        <label htmlFor=\"\">Fecha Fin</label>\n                        <input\n                                name=\"fechaFin\"\n                                className=\"form-control md-4\"\n                                type=\"date\"\n                                value={formFechasReporte.formFin}\n                                onChange={handleInputChangeReporte}\n                        />\n                    </div>\n                    <button\n                        className=\"btn btn-primary mt-2\"\n                        onClick={handleObtenerVentasCanceladas}\n                    >\n                        Buscar Ventas\n                    </button>\n                </div>\n            <hr/>\n            <div\n                style={{overflowY: \"scroll\", maxHeight: \"400px\"}}\n            >\n                {\n                    ventasCanceladas ? (\n                        <VentasCanceladasTable\n                            data={ventasCanceladas}\n                            setShowDetail={setShowDetail}\n                        />\n                    ) : (\n                        <p></p>\n                    )\n                }\n            </div>\n            <Modal \n                aria-labelledby=\"contained-modal-title-vcenter\"\n                show={showDetail}\n            >\n                <Modal.Header closeButton>\n                    <Modal.Title id=\"contained-modal-title-vcenter\">\n                        Información de venta\n                    </Modal.Title>\n                </Modal.Header>\n                <Modal.Body className=\"show-grid\">\n                    {\n                        ventaCanceladaSeleccionada ? (\n                            <Container>\n                                <Row>\n                                    <Col xs={12} md={7}>\n                                    <p><b>Correlativo: </b>{ventaCanceladaSeleccionada.encabezado.correlativo}</p>\n                                    </Col>\n                                    <Col xs={6} md={5}>\n                                    <p><b>Fecha: </b>{new Date(ventaCanceladaSeleccionada.encabezado.createdAt).toLocaleDateString()}</p>\n                                    </Col>\n                                </Row>\n                                <Row>\n                                    <Col xs={12} md={8}>\n                                    <p><b>Cliente: </b> {ventaCanceladaSeleccionada.encabezado.nombreCliente}</p>\n                                    </Col>\n                                    <Col xs={6} md={4}>\n                                    <p><b>DPI: </b> {ventaCanceladaSeleccionada.encabezado.dpi ? ventaCanceladaSeleccionada.encabezado.dpi : \"---\"}</p>\n                                    </Col>\n                                </Row>\n                                <Row>\n                                    <Col xs={12} md={8}>\n                                    <p><b>Dirección</b> {ventaCanceladaSeleccionada.encabezado.direccion ? ventaCanceladaSeleccionada.encabezado.direccion : \" ---\"}</p>\n                                    </Col>\n                                    <Col xs={6} md={4}>\n                                    <p><b>Teléfono:</b> {ventaCanceladaSeleccionada.encabezado.numero ? ventaCanceladaSeleccionada.encabezado.numero : \" ---\"}</p>\n                                    </Col>\n                                </Row>\n                                <Row>\n                                    <h5>Información de productos</h5>\n                                    {\n                                        ventaCanceladaSeleccionada.productosVendidos.map((prod) => (\n                                            <>\n                                                <hr></hr>\n                                                <Col xs={6} md={4}>\n                                                <p>{prod.Producto.Categorium.name}</p>\n                                                </Col>\n                                                <Col xs={6} md={4}>\n                                                <p>{prod.Producto.name} - {prod.Producto.color}</p>\n                                                </Col>\n                                                <Col xs={6} md={4}>\n                                                <p>Q.{prod.precioFinal}</p>\n                                                </Col>\n                                                <Row>\n                                                    <Col xs={6} md={6}>\n                                                    <p>IMEI:{prod.imei ? prod.imei : '-----'}</p>\n                                                    </Col>\n                                                    <Col xs={6} md={6}>\n                                                    <p>ICC: {prod.icc ? prod.icc : '-----'}</p>\n                                                    </Col>\n                                                </Row>\n                                            </>\n                                        ))\n                                    }\n                                </Row>\n                            </Container>\n                        ) : (\n                            <div\n                                style={{display:\"flex\", justifyContent:\"center\"}}\n                            >\n                                <Loader\n                                    type=\"ThreeDots\"\n                                    color=\"#121D3B\"\n                                    height={100}\n                                    width={100}\n                                />\n                            </div>\n                        )\n                    }\n                </Modal.Body>\n                <Modal.Footer>\n                    <button\n                        className=\"btn btn-primary btn-block\"\n                        onClick={() => {setShowDetail(false)}}\n                    >\n                        Cerrar\n                    </button>\n                </Modal.Footer>\n            </Modal>\n        </div>\n    )\n}\n\nexport default ListadoVentasCanceladas;","// Actions types\nimport {\n    OBTENER_TOTAL_PRODUCTOS_BARUCH,OBTENER_PRODUCTOS_ERROR_BARUCH,OBTENER_PRODUCTOS_BARUCH,OBTENER_LISTADO_STOCK_BARUCH,CREAR_PRODUCTO_BARUCH,EDITAR_PRODUCTO_BARUCH,SELECTED_PRODUCT_BARUCH,OBTENER_REPORTE_PRODUCTOS_BARUCH,OBTENER_TOTAL_INVERTIDO_BARUCH,OBTENER_REPORTE_STOCK_BARUCH,ELIMINAR_STOCK_BARUCH, OBTENER_PRODUCTOS_BARUCH_VENTA\n} from '../actionTypes';\n// ACTIONS DE AUTENTICACION\nimport {clientTwoToken} from '../../../config/axios';\nimport Swal from 'sweetalert2';\n\n// Obtener total de productos registrados\nexport const obtenerTotalProductos = (buscador='') => {\n    return async (dispatch) => {\n        try {\n            const {data} = await clientTwoToken.get('api/producto/total', {params: {buscador}});\n            dispatch({\n                type: OBTENER_TOTAL_PRODUCTOS_BARUCH,\n                totalProductos: data.total\n            });\n        } catch(error) {\n            dispatch({\n                type: OBTENER_PRODUCTOS_ERROR_BARUCH\n            });\n        }\n    }\n}\n\nexport const obtenerProductos = (page=1,buscador='') => {\n    return async (dispatch) => {\n        try {\n            const productos = await clientTwoToken.get('api/producto', {params: {page, buscador}});\n            dispatch({\n                type: OBTENER_PRODUCTOS_BARUCH,\n                productos: productos.data.productos,\n                productosNoDisponibles: productos.data.productosNoDisponibles\n            });\n        } catch(error) {\n            dispatch({\n                type: OBTENER_PRODUCTOS_ERROR_BARUCH\n            });\n        }\n    }\n}\n\nexport const obtenerProductosVenta = (page=1,buscador='') => {\n    return async (dispatch) => {\n        try {\n            const {data} = await clientTwoToken.get('api/venta/productos');\n            dispatch({\n                type: OBTENER_PRODUCTOS_BARUCH_VENTA,\n                productosVenta: data.results\n            });\n        } catch(error) {\n            dispatch({\n                type: OBTENER_PRODUCTOS_ERROR_BARUCH\n            });\n        }\n    }\n}\n\nexport const obtenerListadoStock = (producto) => {\n    return async (dispatch) => {\n        try {\n            const {data} = await clientTwoToken.get('api/producto/stock', {params: {id: producto}});\n            dispatch({\n                type: OBTENER_LISTADO_STOCK_BARUCH,\n                listado: data.listado\n            });\n        } catch(error) {\n            dispatch({\n                type: OBTENER_PRODUCTOS_ERROR_BARUCH\n            });\n        }\n    }\n}\n\nexport const crearProducto = (producto, buscador='') => {\n    return async (dispatch) => {\n        try {\n            producto = {\n                ...producto,\n                precioCompra: parseInt(producto.precioCompra),\n                precioVenta: parseInt(producto.precioVenta),\n                stock: parseInt(producto.stock)\n            }\n\n            await clientTwoToken.post('api/producto', producto);\n            const productos = await clientTwoToken.get('api/producto', {params: {page: 1, buscador}});\n            Swal.fire(\n                'Producto creado correctamente.',\n                'Audiocell.',\n                'success'\n            );\n            dispatch({\n                type: CREAR_PRODUCTO_BARUCH,\n                productos: productos.data.productos,\n                productosNoDisponibles: productos.data.productosNoDisponibles\n            });\n        } catch(error){\n            console.log(error);\n        }\n    }\n}\n\nexport const crearProductoStock = (producto) => {\n    return async (dispatch) => {\n        try {\n            await clientTwoToken.post('api/producto/stock', producto);\n            const productos = await clientTwoToken.get('api/producto', {params: {page: 1,buscador:''}});\n            Swal.fire(\n                'Stock agregado correctamente.',\n                'Audiocell.',\n                'success'\n            );\n            dispatch({\n                type: CREAR_PRODUCTO_BARUCH,\n                productos: productos.data.productos,\n                productosNoDisponibles: productos.data.productosNoDisponibles\n            });\n            \n            // Total invertido\n            const {dataTotal} = await clientTwoToken.get('api/venta/invertido');\n            const totalInvertido = dataTotal.results[0].Invertido;\n            dispatch({\n                type: OBTENER_TOTAL_INVERTIDO_BARUCH,\n                totalInvertido: parseFloat(totalInvertido)\n            });\n\n        } catch(error){\n            console.log(error);\n        }\n    }\n}\n\nexport const editarProducto = (producto) => {\n    return async (dispatch) => {\n        try {\n            producto = {\n                ...producto,\n                categoria: parseInt(producto.categoria),\n                precioVenta: parseInt(producto.precioVenta),\n                precioCompra: parseInt(producto.precioCompra),\n                stock: parseInt(producto.stock)\n            }\n            const resp = await clientTwoToken.put('api/producto', producto);\n            if(resp.data.data === 1){\n                const productos = await clientTwoToken.get('api/producto', {params: {page: 1, buscador: ''}});\n                dispatch({\n                    type: EDITAR_PRODUCTO_BARUCH,\n                    productos: productos.data.productos,\n                    productosNoDisponibles: productos.data.productosNoDisponibles\n                });\n                Swal.fire(\n                    'Producto editado correctamente.',\n                    'Audiocell.',\n                    'success'\n                );\n            } else {\n                Swal.fire(\n                    'Producto no existente.',\n                    'Audiocell.',\n                    'error'\n                );\n            }\n        } catch(error){\n            console.log(error);\n        }\n    }\n}\n\nexport const deleteProducto = (id) => {\n    return async (dispatch) => {\n        try {\n            const resp = await clientTwoToken.put('api/producto/delete', {id: id});\n            if(resp.data.data === 1){\n                const productos = await clientTwoToken.get('api/producto', {params: {page: 1, buscador: ''}});\n                dispatch({\n                    type: EDITAR_PRODUCTO_BARUCH,\n                    productos: productos.data.productos,\n                    productosNoDisponibles: productos.data.productosNoDisponibles\n                });\n                Swal.fire(\n                    'Producto eliminado correctamente.',\n                    'Audiocell.',\n                    'success'\n                );\n            } else {\n                Swal.fire(\n                    'Producto no existente.',\n                    'Audiocell.',\n                    'error'\n                );\n            }\n        } catch(error){\n            console.log(error);\n        }\n    }\n}\n\nexport const seleccionarProducto = (producto) => {\n    return async(dispatch) => {\n        try {\n            dispatch({\n                type: SELECTED_PRODUCT_BARUCH,\n                producto\n            });\n        } catch(error){\n            console.log(error);\n        }\n    }\n}\n\n/* REPORTES */\nexport const getReporteProductos = () => {\n    return async(dispatch) => {\n        try {\n            const productos = await clientTwoToken.get('api/producto/reporte');\n            dispatch({\n                type: OBTENER_REPORTE_PRODUCTOS_BARUCH,\n                productos: productos.data.productos\n            });\n        } catch(error){\n            console.log(error);\n        }\n    }\n}\n\nexport const getReporteProductosStock = (formFechas) => {\n    return async(dispatch) => {\n        try {\n            const {data} = await clientTwoToken.get('api/producto/reporteStock', {params: {inicio: formFechas.fechaInicio, fin: formFechas.fechaFin}});\n            dispatch({\n                type: OBTENER_REPORTE_STOCK_BARUCH,\n                productos: data.results\n            });\n        } catch(error){\n            console.log(error);\n        }\n    }\n}\n\nexport const deleteStock = (id) => {\n    return async (dispatch) => {\n        try {\n            await clientTwoToken.put('api/producto/stock', {id});\n            const productos = await clientTwoToken.get('api/producto', {params: {page: 1, buscador: ''}});\n            Swal.fire(\n                'Stock eliminado correctamente.',\n                'Audiocell.',\n                'success'\n            );\n            dispatch({\n                type: ELIMINAR_STOCK_BARUCH,\n            });\n            dispatch({\n                type: CREAR_PRODUCTO_BARUCH,\n                productos: productos.data.productos,\n                productosNoDisponibles: productos.data.productosNoDisponibles\n            });\n        } catch(error){\n            console.log(error);\n        }\n    }\n}\n\n// Obtener listado de usuarios\nexport const obtenerTotalInvertido = () => {\n    return async (dispatch) => {\n        try {\n            const {data} = await clientTwoToken.get('api/venta/invertido');\n            const totalInvertido = data.results[0].Invertido;\n            if(isNaN(totalInvertido)){\n                Swal.fire(\n                    'Error al obtener total invertido.',\n                    'Audiocell.',\n                    'error'\n                );\n            }else {\n                dispatch({\n                    type: OBTENER_TOTAL_INVERTIDO_BARUCH,\n                    totalInvertido: parseFloat(totalInvertido)\n                });\n            }\n        } catch(error) {\n            console.log(error);\n        }\n    }\n}\n","import React from 'react';\nimport Select from 'react-select';\nimport {Field, reduxForm} from 'redux-form';\n\nconst validate = values => {\n    const errors = {}\n    if(!values.cantidad || values.cantidad < 0){\n        errors.cantidad = \"Campo requerido\";\n    }\n    if(!values.precioCompra || values.precioCompra < 0){\n        errors.precioCompra = \"Campo requerido\";\n    }\n\n    return errors;\n}\n\nconst renderField = ({\n    input,\n    label,\n    type,\n    placeholder,\n    meta: { touched, error }\n}) => (\n    <div>\n        <label>{label}</label>\n        <input {...input} placeholder={placeholder} type={type} className=\"form-control\"/>\n        {touched && ((error && <span style={{color: \"red\"}}>{error}</span>))}\n    </div>\n);\n\n\nconst ProductoStockForm = (props) => {    \n    // STATE\n    const {handleSubmit,productos,setProductoStock,productoStock} = props;\n    \n    const handleInputChange = (e) => {\n        setProductoStock(e);\n    }\n\n    return (\n        <form onSubmit={handleSubmit}>\n            <div>\n                <label>Seleccione un producto</label>\n                <Select\n                    name=\"producto\"\n                    options={productos}\n                    onChange={handleInputChange}\n                    value={productoStock}\n                />\n                <br /> \n            </div>\n            <div className=\"mb-3\">\n                <Field\n                    name=\"proveedor\"\n                    type=\"string\"\n                    component={renderField}\n                    label=\"Proveedor\"\n                    placeholder=\"Ingrese el proveedor\"\n                />\n            </div>\n            <div className=\"mb-3\">\n                <Field\n                    name=\"cantidad\"\n                    type=\"number\"\n                    component={renderField}\n                    label=\"Cantidad Ingresada\"\n                    placeholder=\"Ingrese la cantidad\"\n                />\n            </div>\n            <div className=\"mb-3\">\n                <Field\n                    name=\"precioCompra\"\n                    type=\"number\"\n                    component={renderField}\n                    label=\"Precio Compra\"\n                    placeholder=\"Ingrese el precio\"\n                />\n            </div>\n            <div>\n                <button \n                    type=\"submit\"\n                    className=\"mt-3 btn btn-primary btn-block\"\n                >\n                Guardar\n                </button>\n            </div>\n        </form>\n    );\n}\n\nexport default reduxForm({\n    form: 'productoStockForm',\n    validate\n})(ProductoStockForm);","import React from 'react';\nimport { useEffect } from 'react';\nimport { useState } from 'react';\nimport {TiDeleteOutline} from 'react-icons/ti';\nimport { useDispatch } from 'react-redux';\nimport { deleteStock } from '../Redux/actions/productosBaruchActions';\n\nconst ListadoStockBaruch = ({stocks,setShowListadoStock}) => {\n\n    const dispatch = useDispatch();\n\n    const handleDeleteStock = (id) => {\n        dispatch(deleteStock(id));\n        setShowListadoStock(false);\n    }\n\n    const [disponible, setDisponible] = useState(0);\n\n    useEffect(() => {\n        if(stocks){\n            let temp = 0;\n            for(let s of stocks){\n                temp += s.cantidadRestante;\n            }\n            setDisponible(temp);\n        }\n    },[stocks]);\n\n    return (\n        stocks && stocks.length > 0 &&\n        (\n            <>\n            <table className=\"table table-hover text-center\">\n                    <thead>\n                        <th>Proveedor</th>\n                        <th>Compra</th>\n                        <th>Comprado</th>\n                        <th>Restante</th>\n                        <th>Ingreso</th>\n                        <th>Eliminar</th>\n                    </thead>\n                    <tbody>\n                    {    \n                        stocks.map((stock) => {\n                            return (\n                                <tr key={stock.id}>\n                                <td>{stock.proveedor}</td>\n                                <td>Q.{stock.precioCompra}</td>\n                                <td>{stock.cantidadComprada}</td>\n                                <td>{stock.cantidadRestante}</td>\n                                <td>{new Date(stock.createdAt).toLocaleDateString()}</td>\n                                <td>\n                                    <button\n                                        className=\"btn btn-danger\"\n                                        onClick={() => handleDeleteStock(stock.id)}\n                                    >\n                                        <TiDeleteOutline\n                                            size=\"20px\"\n                                        />\n                                    </button>\n                                </td>\n                                </tr>\n                            )})\n                    }\n                    </tbody>\n                </table>\n                <p><b>Disponible:</b> {disponible}</p>\n            </>\n        )\n    )\n}\n\nexport default ListadoStockBaruch;","import React, { useEffect, useState } from 'react';\n\nconst ReporteStock = ({data, admin}) => {\n    // TOTAL GANANCIAS\n    const [totalInvertido, setInvertido] = useState(0);\n\n    useEffect(() => {\n        let total = 0;\n        if(data){\n            data.forEach((p) => {\n                total += (p.precioCompra * p.cantidadComprada);\n            });\n            setInvertido(total);\n        }\n    }, [data]);\n    return (\n        <>\n        <table className=\"table table-hover table-secondary\">\n            <thead>\n                <tr>\n                    <th scope=\"col\">#</th>\n                    <th scope=\"col\">Categoría</th>\n                    <th scope=\"col\">Producto</th>\n                    <th scope=\"col\">Cantidad</th>\n                    {\n                        admin &&\n                        <>\n                            <th scope=\"col\">Precio Compra</th>\n                            <th scope=\"col\">Invertido</th>\n                            <th scope=\"col\">Fecha Compra</th>\n                        </>\n                    }\n                </tr>\n            </thead>\n            <tbody>\n            {\n                data.map((producto, index) => (\n                    <tr\n                        key={index}\n                    >\n                        <th scope=\"row\">{index+1}</th>\n                        <td>{producto.categoria}</td>\n                        <td>{producto.name}-{producto.color}</td>\n                        <td>{producto.cantidadComprada}</td>\n                        {\n                            admin &&\n                            <>\n                                <td>Q.{producto.precioCompra}</td>\n                                <td>Q.{producto.precioCompra * producto.cantidadComprada}</td>\n                                <td>{new Date(producto.createdAt).toLocaleDateString()}</td>\n                            </>\n                        }\n                    </tr>\n                ))\n            }\n            </tbody>\n        </table>\n        {\n            admin &&\n                <h5>Total Invertido: Q.{totalInvertido}</h5>\n        }\n        </>\n    )\n}\n\nexport default ReporteStock;","import React from 'react';\nimport {Field, reduxForm} from 'redux-form';\nimport { useState } from 'react';\nimport { maxLength200, maxLength50 } from '../Helpers/ReduxFormValidations';\n\nconst validate = values => {\n    const errors = {}\n    if(values.categoria === undefined || values.categoria === \"0\"){\n        errors.categoria = \"Campo requerido\";\n    }else if(values.categoria){\n        if((values.categoria).includes(\"Kit\") || (values.categoria).includes(\"Accesorios\")){\n            if(!values.color){\n                errors.color = \"Campo requerido\";\n            }\n            if(!values.precioVenta || values.precioVenta <= 0){\n                errors.precioVenta = \"Campo requerido\";\n            }\n        }\n    }\n    if(!values.name){\n        errors.name = \"Campo requerido\";\n    }\n\n    return errors;\n}\n\nconst renderField = ({\n    input,\n    label,\n    type,\n    placeholder,\n    meta: { touched, error, warning }\n}) => (\n    <div>\n        <label>{label}</label>\n        <input {...input} placeholder={placeholder} type={type} className=\"form-control\"/>\n        {touched && ((error && <span style={{color: \"red\"}}>{error}</span>))}\n    </div>\n);\n\nconst ProductoBaruchForm = (props) => {    \n    const {handleSubmit} = props;\n    const {categorias} = props;\n    const [showForm, setShowForm] = useState(false);\n\n    const handleChangeCategory = (e) => {\n        if((e.target.value).includes(\"Kit\") || (e.target.value).includes(\"Accesorios\")){\n            setShowForm(true);\n        } else {\n            setShowForm(false);\n        }\n    }\n\n    return (\n        <form onSubmit={handleSubmit}>\n            <div className=\"mb-3\">\n                <label>Categoria</label>\n                <br/>\n                <Field\n                    name=\"categoria\"\n                    component=\"select\"\n                    placeholder=\"\"\n                    className=\"form-control\"\n                    onChange={handleChangeCategory}\n                >\n                    <option value=\"0\" defaultValue>Seleccione una categoria</option>\n                    {\n                        categorias.map((cat) => (\n                            <option key={cat.id} value={cat.name}>{cat.name}</option>\n                        ))\n                    }\n                </Field>\n            </div>\n            <div className=\"mb-3\">\n                <Field\n                    name=\"name\"\n                    type=\"text\"\n                    component={renderField}\n                    label=\"Nombre de producto\"\n                    placeholder=\"Ingrese el nombre\"\n                    validate={maxLength50}\n                />\n            </div>\n            <div className=\"mb-3\">\n                    <Field\n                        name=\"color\"\n                        type=\"text\"\n                        component={renderField}\n                        label=\"Color\"\n                        placeholder=\"Ingrese el color\"\n                        validate={maxLength50}\n                    />\n                </div>\n                <div className=\"mb-3\">\n                    <Field\n                        name=\"precioVenta\"\n                        type=\"number\"\n                        component={renderField}\n                        placeholder=\"Ingrese el precio de venta\"\n                        label=\"Precio Venta\"\n                    />\n                </div>\n                <div className=\"mb-3\">\n                    <Field\n                        name=\"descripcion\"\n                        type=\"text\"\n                        component={renderField}\n                        placeholder=\"Ingrese la descripción\"\n                        label=\"Descripción\"\n                        validate={maxLength200}\n                    />\n                </div>\n            <div>\n                <button \n                    type=\"submit\"\n                    className=\"mt-3 btn btn-primary btn-block\"\n                >\n                Guardar\n                </button>\n            </div>\n        </form>\n    );\n}\n\nexport default reduxForm({\n    form: 'productoForm',\n    validate\n})(ProductoBaruchForm);","import React, {useEffect} from 'react';\nimport {FaEdit} from 'react-icons/fa';\nimport {AiFillDelete} from 'react-icons/ai';\nimport {BsListCheck} from 'react-icons/bs';\nimport { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { obtenerProductos } from '../Redux/actions/productosBaruchActions';\n\nconst ProductsBaruchTable = ({data, handleSelectProducto, handleDelete, usuario, totalProductos, handleListStock}) => {\n    // HOOKS\n    const dispatch = useDispatch();\n    // STATE\n    const [admin, setAdmin] = useState(false);\n    const [actualPage, setActualPage] = useState(1);\n    \n    useEffect(() => {\n      if(usuario){\n        if(usuario.me){\n          if(usuario.me.rol === \"ADMIN\"){\n            setAdmin(true);\n          } else if(usuario.me.rol === \"VENTAS\"){\n            setAdmin(false);\n          }\n        }\n      }\n    }, [usuario])\n\n    useEffect(() => {\n      dispatch(obtenerProductos(actualPage));\n    }, [actualPage, dispatch])\n\n    return (\n      <>\n      <table className=\"table table-hover table-secondary table-bordered\">\n        <thead>\n          <tr>\n            <th scope=\"col\">#</th>\n            <th scope=\"col\">Nombre</th>\n            <th scope=\"col\">Categoria</th>\n            {\n              admin ? (\n                  <>\n                  <th scope=\"col\">Precio Venta</th>\n                  </>      \n                ) : (\n                  <th scope=\"col\">Precio</th>\n                )\n            }\n            <th scope=\"col\">Color</th>\n            <th scope=\"col\">Disponible</th>\n            {\n              admin &&\n                <>\n                <th scope=\"col\">Stock</th>\n                <th scope=\"col\">Editar</th>\n                <th scope=\"col\">Eliminar</th>\n                </>\n            }\n          </tr>\n        </thead>\n        <tbody>\n          {\n            data.map((producto, index) => (\n              <tr\n                key={producto.id}\n              >\n              <th scope=\"row\">{index+1}</th>\n              <td>{producto.name}</td>\n              <td>{producto.categoria}</td>\n              {\n                admin ? (\n                  <>\n                  <td>{producto.precioVenta ? `Q.${producto.precioVenta}` : \"---\"}</td>\n                  </>\n                ) : (\n                  <td>{producto.precioVenta ? `Q.${producto.precioVenta}` : \"---\"}</td>\n                )\n              }\n              <td>{producto.color ? producto.color : '---'}</td>\n              <td>{producto.disponible ? producto.disponible : 0}</td>\n              {\n                admin &&\n                  <>\n                  <td>\n                    <div style={{marginLeft: \"20px\"}}>\n                      <button className=\"btn btn-secondary\" onClick={() => {handleListStock(producto.id)}}>\n                        Stock\n                        <BsListCheck \n                          size=\"20px\"\n                          />\n                      </button>\n                    </div>\n                  </td>\n                  <td style={{display: \"flex\", justifyContent: \"center\"}}>\n                    <div style={{marginLeft: \"2px\"}}>\n                      <button className=\"btn btn-warning\" onClick={() => {handleSelectProducto(producto)}}>\n                        Editar\n                        <FaEdit \n                          size=\"20px\"\n                        />\n                      </button>\n                    </div>\n                  </td>\n                  <td>\n                    <div style={{marginLeft: \"20px\"}}>\n                      <button className=\"btn btn-danger\" onClick={() => {handleDelete(producto.id)}}>\n                        Eliminar\n                        <AiFillDelete \n                          size=\"20px\"\n                        />\n                      </button>\n                    </div>\n                  </td>\n                  </>\n              }\n            </tr>\n            ))\n          }\n        </tbody>\n        </table>\n          </>\n    )\n}\n\nexport default ProductsBaruchTable;","import React from 'react';\nimport {Field, reduxForm} from 'redux-form';\nimport {connect} from 'react-redux';\nimport { seleccionarProducto } from '../Redux/actions/productosBaruchActions';\n\nconst validate = values => {\n    const errors = {}\n    if(!values.name){\n        errors.name = \"Campo requerido\";\n    }\n    if(!values.categoria){\n        errors.categoria = \"Campo requerido\";\n    }\n    if(!values.presentacion){\n        errors.presentacion = \"Campo requerido\";\n    }\n    if(!values.precio){\n        errors.precio = \"Campo requerido\";\n    }\n    if(!values.stock){\n        errors.stock = \"Campo requerido\";\n    }\n    return errors;\n}\n\nconst renderField = ({\n    input,\n    label,\n    type,\n    meta: { touched, error }\n}) => (\n    <div>\n        <label>{label}</label>\n        <input {...input} placeholder={label} type={type} className=\"form-control\"/>\n        {touched && ((error && <span style={{color: \"red\"}}>{error}</span>))}\n    </div>\n  );\n\nlet ProductoEditFormBaruch = (props) => {    \n    const {handleSubmit} = props;\n    return (\n        <form onSubmit={handleSubmit}>\n            <div className=\"mb-3\">\n                <Field\n                    name=\"name\"\n                    type=\"text\"\n                    component={renderField}\n                    label=\"Nombre de producto\"\n                    placeholder=\"Ingrese el nombre\"\n                />\n            </div>\n            <div className=\"mb-3\">\n                <Field\n                    name=\"color\"\n                    type=\"text\"\n                    component={renderField}\n                    placeholder=\"Ingrese el color\"\n                    label=\"Color\"\n                />\n            </div>\n            <div className=\"mb-3\">\n                <Field\n                    name=\"precioVenta\"\n                    type=\"number\"\n                    component={renderField}\n                    placeholder=\"Ingrese el precio de venta\"\n                    label=\"Precio Venta\"\n                />\n            </div>\n            <div>\n                <button \n                    type=\"submit\"\n                    className=\"mt-3 btn btn-primary btn-block\"\n                >\n                Guardar\n                </button>\n            </div>\n        </form>\n    );\n}\n\nProductoEditFormBaruch = reduxForm({\n    form: 'productoEditForm',\n    validate\n})(ProductoEditFormBaruch);\n\nProductoEditFormBaruch = connect(\n    state => ({\n        initialValues: state.productosBaruch.selectedProductBaruch\n    }),\n    { load: seleccionarProducto }\n)(ProductoEditFormBaruch);\n\nexport default ProductoEditFormBaruch;","import {React, useEffect, useState} from 'react';\nimport {useDispatch, useSelector} from 'react-redux';\n// Actions\nimport { \n    obtenerProductos, \n    crearProducto, \n    seleccionarProducto, \n    editarProducto, \n    deleteProducto, \n    obtenerTotalProductos, \n    getReporteProductos, \n    crearProductoStock, \n    obtenerListadoStock, \n    getReporteProductosStock, \n    obtenerTotalInvertido \n} from '../Redux/actions/productosBaruchActions';\nimport { obtenerUsuario } from '../Redux/actions/usersActions';\n// Bootstrap\nimport { Modal, Tabs, Tab } from 'react-bootstrap';\nimport { obtenerCategorias } from '../Redux/actions/categoriasBaruchActions';\nimport Swal from 'sweetalert2';\nimport Loader from 'react-loader-spinner';\nimport { clientToken } from '../../config/axios';\n// Components\nimport ProductoStockForm from './ProductoStockForm';\nimport ListadoStockBaruch from './ListadoStockBaruch';\nimport ReporteStockBaruch from './ReporteStockBaruch';\nimport ProductoBaruchForm from './ProductoBaruchForm';\nimport ProductsBaruchTable from './ProductsBaruchTable';\nimport ProductoEditFormBaruch from './ProductoEditFormBaruch';\n\nconst ProductosBaruch = () => {\n    // Mostrar formulario de creacion.\n    const [show, setShow] = useState(false);\n    // Mostrar formulario de edicion.\n    const [showFormEdit, setShowFormEdit] = useState(false);\n    // Mostrar formulario de stock.\n    const [showStock, setShowStock] = useState(false);\n    const [productoStock, setProductoStock] = useState(null);\n    const [showListadoStock, setShowListadoStock] = useState(false);\n    const [formFechasReporte, setFormFechasReporte] = useState({\n        fechaInicio: null,\n        fechaFin: null\n    });\n    const handleInputChangeReporte = (e) => {\n        setFormFechasReporte({...formFechasReporte,[e.target.name] : e.target.value});\n    }\n    // Verificar si usuario logueado es admin\n    const [admin, setAdmin] = useState(false);\n    // Opciones de productos para select\n    const [productsOptions, setProductOptions] = useState([]);\n    // Valor del buscador\n    const [buscador, setBuscador] = useState(\"\");\n    // Loader\n    const [loading, setLoading] = useState(true);\n    // Dispatch\n    const dispatch = useDispatch();\n    \n    // STORE\n    const totalProductos = useSelector((state) => state.productosBaruch.totalProductosBaruch);\n    const productos = useSelector((state) => state.productosBaruch.productosBaruch);\n    const productosNoDisponibles = useSelector((state) => state.productosBaruch.productosBaruchNoDisponibles);\n    const categorias = useSelector((state) => state.categoriasBaruch.categoriasBaruch);\n    const usuario = useSelector((state) => state.usuarios);\n    const listadoStock = useSelector((state) => state.productosBaruch.listadoStockBaruch);\n    const reporteStock = useSelector((state) => state.productosBaruch.reporteStockBaruch);\n    const totalInvertido = useSelector((state) => state.productosBaruch.totalInvertidoBaruch);\n    \n    // Obtener data del store\n    useEffect(() => {\n        dispatch(getReporteProductos());\n        dispatch(obtenerTotalProductos());\n        dispatch(obtenerProductos());\n        dispatch(obtenerCategorias());\n        dispatch(obtenerUsuario());\n        dispatch(obtenerTotalInvertido());\n    }, [dispatch])\n\n    useEffect(() => {\n        if(usuario){\n            if(usuario.me){\n                if(usuario.me.rol === \"ADMIN\"){\n                    setAdmin(true);\n                } else if(usuario.me.rol === \"VENTAS\"){\n                    setAdmin(false);\n                }\n            }\n        }\n    }, [usuario])\n    \n    useEffect(() => {\n        setLoading(false);\n    }, [totalProductos]);\n    // Transformación de data de productos.\n    useEffect(() => {\n        if(productos && productosNoDisponibles){\n            let productsTransform = productos.map((prod) => ({\n                value: prod.id,\n                label: `${prod.categoria}-${prod.name}${prod.color != null ? `-${prod.color}` : ''}`\n            }));\n            let productsTransformNo = productosNoDisponibles.map((prod) => ({\n                value: prod.id,\n                label: `${prod.categoria}-${prod.name}${prod.color != null ? `-${prod.color}` : ''}`\n            }));\n            setProductOptions([...productsTransform, ...productsTransformNo]);\n        }\n    }, [productos,productosNoDisponibles])\n    // Obtener información de buscador\n    useEffect(() => {\n        if(buscador === \"\"){\n            dispatch(obtenerTotalProductos());\n            dispatch(obtenerProductos());\n        } else {\n            dispatch(obtenerTotalProductos(buscador));\n            dispatch(obtenerProductos(1,buscador));\n        }\n    }, [buscador, dispatch])\n    // Submit crear producto\n    const handleSubmit = (values) => {\n        setShow(false);\n        dispatch(crearProducto(values));\n    }\n    // Submit agregar stock\n    const handleSubmitStock = (values) => {\n        if(!productoStock){\n            Swal.fire('Debe seleccionar un producto','','error');\n        }else {\n            setShowStock(false);\n            dispatch(crearProductoStock({cantidad:values.cantidad, precio:values.precioCompra,productoId: productoStock.value, proveedor: values.proveedor}));\n        }\n    }\n    // Seleccionar producto para editar\n    const handleSelectProducto = (producto) => {\n        Swal.fire({\n            title: 'Introduzca contraseña',\n            input: 'password',\n            inputAttributes: {\n                autocapitalize: 'off'\n            },\n            showCancelButton: true,\n            cancelButtonText: \"Cancelar\",\n            confirmButtonText: 'Confirmar',\n            showLoaderOnConfirm: true,\n            preConfirm: (password) => {\n                const user = {\n                    password,\n                    username: usuario.me.username\n                    \n                }\n                return clientToken.post(`api/producto/verificar`, user)\n                    .then(response => {\n                        if(response.data.ok){\n                            return response.data.msg\n                        }\n                    })\n                    .catch(error => {\n                        Swal.showValidationMessage(\n                            `Contraseña incorrecta, vuelva a intentar`\n                        )\n                    })\n            },\n            allowOutsideClick: () => !Swal.isLoading()\n            }).then((result) => {\n                if (result.isConfirmed) {\n                    dispatch(seleccionarProducto(producto));\n                    setShowFormEdit(true);\n                }\n            });\n    }\n    // Agregar stock\n    const handleAgregarStock = (producto) => {\n        Swal.fire({\n            title: 'Introduzca contraseña',\n            input: 'password',\n            inputAttributes: {\n                autocapitalize: 'off'\n            },\n            showCancelButton: true,\n            cancelButtonText: \"Cancelar\",\n            confirmButtonText: 'Confirmar',\n            showLoaderOnConfirm: true,\n            preConfirm: (password) => {\n                const user = {\n                    password,\n                    username: usuario.me.username\n                    \n                }\n                return clientToken.post(`api/producto/verificar`, user)\n                    .then(response => {\n                        if(response.data.ok){\n                            return response.data.msg\n                        }\n                    })\n                    .catch(error => {\n                        Swal.showValidationMessage(\n                            `Contraseña incorrecta, vuelva a intentar`\n                        )\n                    })\n            },\n            allowOutsideClick: () => !Swal.isLoading()\n            }).then((result) => {\n                if (result.isConfirmed) {\n                    setShowStock(true);\n                }\n            });\n    }\n    // Seleccionar listado de stock\n    const handleListStock = (producto) => {\n        setShowListadoStock(true);\n        dispatch(obtenerListadoStock(producto));\n    }\n    // Submit editar producto\n    const handleSubmitEdit = (values) => {\n        dispatch(editarProducto(values));\n        setShowFormEdit(false);\n    }\n    // Cambiar valor del buscador\n    const handleChangeBuscador = (e) => {\n        setBuscador(e.target.value);\n    }\n    // Eliminar producto\n    const handleDelete = (id) => {\n        Swal.fire({\n            title: 'Desea eliminar el producto?',\n            showCancelButton: true,\n            confirmButtonText: `Eliminar`,\n            cancelButtonText: `Cancelar`\n        }).then((result) => {\n            if (result.isConfirmed) {\n                Swal.fire({\n                    title: 'Introduzca contraseña',\n                    input: 'password',\n                    inputAttributes: {\n                        autocapitalize: 'off'\n                    },\n                    showCancelButton: true,\n                    cancelButtonText: \"Cancelar\",\n                    confirmButtonText: 'Confirmar',\n                    showLoaderOnConfirm: true,\n                    preConfirm: (password) => {\n                        const user = {\n                            password,\n                            username: usuario.me.username\n                            \n                        }\n                        return clientToken.post(`api/producto/verificar`, user)\n                            .then(response => {\n                                if(response.data.ok){\n                                    return response.data.msg\n                                }\n                            })\n                            .catch(error => {\n                                Swal.showValidationMessage(\n                                    `Contraseña incorrecta, vuelva a intentar`\n                                )\n                            })\n                    },\n                    allowOutsideClick: () => !Swal.isLoading()\n                    }).then((result) => {\n                        if (result.isConfirmed) {\n                            dispatch(deleteProducto(id));\n                        }\n                    });\n            }\n        });\n    }\n    // Submit Reporte\n    const handleSubmitReporte = () => {\n        const {fechaInicio, fechaFin} = formFechasReporte;\n            if(!fechaInicio || !fechaFin){\n                Swal.fire(\n                    'Debe seleccionar dos fechas.',\n                    'Audiocell.',\n                    'error'\n                );\n            } else {\n                const endDate = new Date(fechaFin);\n                endDate.setDate(endDate.getDate() + 1);\n                formFechasReporte.fechaFin = endDate;\n                dispatch(getReporteProductosStock(formFechasReporte));\n            }\n    }\n\n    if(loading){\n        return (\n            <div style={{display:\"flex\", alignItems:\"center\", justifyContent:\"center\"}}>\n                <Loader type=\"ThreeDots\" color=\"#121D3B\" height={100} width={100}/>\n            </div>\n        )\n    } else {\n        return (\n            <div className=\"contenedor-controlProductos\">\n            <Tabs defaultActiveKey=\"home\" id=\"uncontrolled-tab-example\" className=\"mb-3 mt-10\">\n                <Tab eventKey=\"home\" title=\"Control Productos\">\n                    <div className=\"contenedor-productos\">\n                    <h1>Productos Disponibles</h1>\n                    <br />\n                    <div style={{display: \"flex\", flexWrap: \"wrap\", justifyContent:\"space-between\"}}>\n                        {\n                            admin &&\n                                <>\n                                    <button className=\"btn btn-primary\" onClick={() => setShow(true)}>\n                                        Agregar Producto\n                                    </button>\n                                    <button className=\"btn btn-primary mt-2\" onClick={handleAgregarStock}>\n                                        Agregar Stock\n                                    </button>\n                                </>\n                        }\n                        <input\n                            name=\"buscador\"\n                            className=\"form-control\"\n                            style={{maxWidth:\"300px\", marginTop:\"2px\"}}\n                            type=\"text\"\n                            value={buscador}\n                            onChange={handleChangeBuscador}\n                            placeholder=\"Buscar...\"\n                        />\n                    </div>\n                    <hr/>\n                    <div style={{overflowY: \"scroll\", textAlign: \"center\", maxHeight:\"700px\"}}>\n                        {\n                            productos ? (\n                                productos.length > 0 ? (\n                                    <ProductsBaruchTable\n                                        data={productos}\n                                        handleSelectProducto={handleSelectProducto}\n                                        handleDelete={handleDelete}\n                                        usuario={usuario}\n                                        totalProductos={totalProductos}\n                                        handleListStock={handleListStock}\n                                    />\n                                ) : (\n                                    <p>No existen productos...</p>\n                                )\n                            ) : (\n                                <Loader\n                                    type=\"ThreeDots\"\n                                    color=\"#121D3B\"\n                                    height={100}\n                                    width={100}\n                                />\n                            )\n                        }\n                    </div>\n                    {/* FORM PARA CREAR NUEVO PRODUCTO */}\n                    <Modal\n                        show={show}\n                        onHide={() => {setShow(false)}}\n                        backdrop=\"static\"\n                        keyboard={false}\n                        >\n                        <Modal.Header closeButton>\n                            <Modal.Title>Crear nuevo producto</Modal.Title>\n                        </Modal.Header>\n                        <Modal.Body>\n                            <ProductoBaruchForm\n                                onSubmit={handleSubmit}\n                                categorias={categorias}\n                            />\n                        </Modal.Body>\n                    </Modal>\n                    {/* FORM PARA EDITAR PRODUCTO */}\n                    <Modal\n                        show={showFormEdit}\n                        onHide={() => {setShowFormEdit(false)}}\n                        backdrop=\"static\"\n                        keyboard={false}\n                        >\n                        <Modal.Header closeButton>\n                            <Modal.Title>Editar producto</Modal.Title>\n                        </Modal.Header>\n                        <Modal.Body>\n                            <ProductoEditFormBaruch\n                                onSubmit={handleSubmitEdit}\n                            />\n                        </Modal.Body>\n                    </Modal>\n                    {/* FORM PARA AGREGAR STOCK DE PRODUCTO */}\n                    <Modal\n                        show={showStock}\n                        onHide={() => {setShowStock(false)}}\n                        backdrop=\"static\"\n                        keyboard={false}\n                        >\n                        <Modal.Header closeButton>\n                            <Modal.Title>Stock de producto</Modal.Title>\n                        </Modal.Header>\n                        <Modal.Body>\n                            <ProductoStockForm \n                                onSubmit={handleSubmitStock}\n                                productos={productsOptions}\n                                setProductoStock={setProductoStock}\n                                productoStock={productoStock}\n                            />\n                        </Modal.Body>\n                    </Modal>\n                    </div>\n                </Tab>\n                <Tab eventKey=\"homeNo\" title=\"No Disponibles\">\n                    <div className=\"contenedor-productos\">\n                    <h1>Productos No Disponibles</h1>\n                    <br />\n                    <div\n                        style={{display: \"flex\", flexWrap: \"wrap\", justifyContent:\"space-between\"}}\n                        >\n                        {\n                            admin &&\n                                <>\n                                <button\n                                    className=\"btn btn-primary\"\n                                    onClick={() => setShow(true)}\n                                >\n                                    Agregar Producto\n                                </button>\n                                <button\n                                    className=\"btn btn-primary mt-2\"\n                                    onClick={handleAgregarStock}\n                                >\n                                    Agregar Stock\n                                </button>\n                                </>\n                        }\n                        <input\n                            name=\"buscador\"\n                            className=\"form-control\"\n                            style={{maxWidth:\"300px\", marginTop:\"2px\"}}\n                            type=\"text\"\n                            value={buscador}\n                            onChange={handleChangeBuscador}\n                            placeholder=\"Buscar...\"\n                        />\n                    </div>\n                    <hr/>\n                    <div\n                        style={{overflowY: \"scroll\", textAlign: \"center\", maxHeight:\"700px\"}}\n                    >\n                        {\n                            productosNoDisponibles ? (\n                                productosNoDisponibles.length > 0 ? (\n                                    <ProductsBaruchTable\n                                        data={productosNoDisponibles}\n                                        handleSelectProducto={handleSelectProducto}\n                                        handleDelete={handleDelete}\n                                        usuario={usuario}\n                                        totalProductos={totalProductos}\n                                        handleListStock={handleListStock}\n                                    />\n                                ) : (\n                                    <p>No existen productos...</p>\n                                )\n                            ) : (\n                                <Loader\n                                    type=\"ThreeDots\"\n                                    color=\"#121D3B\"\n                                    height={100}\n                                    width={100}\n                                />\n                            )\n                        }\n                    </div>\n                    {/* FORM PARA CREAR NUEVO PRODUCTO */}\n                    <Modal\n                        show={show}\n                        onHide={() => {setShow(false)}}\n                        backdrop=\"static\"\n                        keyboard={false}\n                        >\n                        <Modal.Header closeButton>\n                            <Modal.Title>Crear nuevo producto</Modal.Title>\n                        </Modal.Header>\n                        <Modal.Body>\n                            <ProductoBaruchForm\n                                onSubmit={handleSubmit}\n                                categorias={categorias}\n                            />\n                        </Modal.Body>\n                    </Modal>\n                    {/* FORM PARA EDITAR PRODUCTO */}\n                    <Modal\n                        show={showFormEdit}\n                        onHide={() => {setShowFormEdit(false)}}\n                        backdrop=\"static\"\n                        keyboard={false}\n                        >\n                        <Modal.Header closeButton>\n                            <Modal.Title>Editar producto</Modal.Title>\n                        </Modal.Header>\n                        <Modal.Body>\n                            <ProductoEditFormBaruch\n                                onSubmit={handleSubmitEdit}\n                            />\n                        </Modal.Body>\n                    </Modal>\n                    {/* FORM PARA AGREGAR STOCK DE PRODUCTO */}\n                    <Modal\n                        show={showStock}\n                        onHide={() => {setShowStock(false)}}\n                        backdrop=\"static\"\n                        keyboard={false}\n                        >\n                        <Modal.Header closeButton>\n                            <Modal.Title>Stock de producto</Modal.Title>\n                        </Modal.Header>\n                        <Modal.Body>\n                            <ProductoStockForm \n                                onSubmit={handleSubmitStock}\n                                productos={productsOptions}\n                                setProductoStock={setProductoStock}\n                                productoStock={productoStock}\n                            />\n                        </Modal.Body>\n                    </Modal>\n                    {/* LISTADO DE STOCKS */}\n                    <Modal\n                        show={showListadoStock}\n                        onHide={() => {setShowListadoStock(false)}}\n                        backdrop=\"static\"\n                        keyboard={false}\n                        >\n                        <Modal.Header closeButton>\n                            <Modal.Title>Listado de Stock</Modal.Title>\n                        </Modal.Header>\n                        <Modal.Body>\n                            {\n                                listadoStock ? (\n                                    <ListadoStockBaruch \n                                        stocks={listadoStock}\n                                        setShowListadoStock={setShowListadoStock}\n                                    />\n                                ) : (\n                                    <Loader\n                                        type=\"ThreeDots\"\n                                        color=\"#121D3B\"\n                                        height={100}\n                                        width={100}\n                                    />\n                                )\n                            }\n                        </Modal.Body>\n                    </Modal>\n                    </div>\n                </Tab>\n                <Tab eventKey=\"reporte\" title=\"Reporte Stock\">\n                    <div className=\"contenedor-productos\">\n                        <h1>Reporte de Stock</h1>\n                        <div\n                            style={{display: \"flex\", justifyContent:\"space-around\", flexWrap:\"wrap\"}}\n                        >\n                    <div>\n                        <label htmlFor=\"\">Fecha Inicio</label>\n                        <input\n                                name=\"fechaInicio\"\n                                className=\"form-control md-4\"\n                                type=\"date\"\n                                value={formFechasReporte.formInicio}\n                                onChange={handleInputChangeReporte}\n                        />\n                    </div>\n                    <div>\n                        <label htmlFor=\"\">Fecha Fin</label>\n                        <input\n                                name=\"fechaFin\"\n                                className=\"form-control md-4\"\n                                type=\"date\"\n                                value={formFechasReporte.formFin}\n                                onChange={handleInputChangeReporte}\n                        />\n                    </div>\n                    <button\n                        className=\"btn btn-primary mt-3\"\n                        onClick={handleSubmitReporte}\n                    >\n                        Buscar\n                    </button>\n                </div>\n                <hr />\n                <div\n                    style={{overflowY: \"scroll\", maxHeight: \"400px\"}}\n                >\n                {\n                    reporteStock && \n                        <ReporteStockBaruch\n                            data={reporteStock}\n                            admin={admin}\n                        />\n                }\n            </div>\n            </div>\n                </Tab>\n                {\n                    admin &&\n                        <Tab eventKey=\"total\" title=\"Inversión\">\n                            <div className=\"contenedor-productos\">\n                                <div className=\"card text-center\">\n                                    <div className=\"card-header\">\n                                        <h3>Información de inversión</h3>\n                                    </div>\n                                    <div className=\"card-body\">\n                                        <h3>Total: <b>Q.{totalInvertido | 0}</b> </h3>\n                                        <h4>Fecha: {new Date().toLocaleString(\"es-GT\", {timeZone: \"America/Guatemala\"})}</h4>\n                                    </div>\n                                    <div className=\"card-footer text-muted\">\n                                    Audiocell.\n                                    </div>\n                                </div>\n                            </div>\n                        </Tab>\n                }\n            </Tabs>\n            {/* LISTADO DE STOCKS */}\n            <Modal\n                size=\"lg\"\n                show={showListadoStock}\n                onHide={() => {setShowListadoStock(false)}}\n                backdrop=\"static\"\n                keyboard={false}\n                scrollable={true}\n            >\n                <Modal.Header closeButton>\n                    <Modal.Title>Listado de Stock</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    {\n                        listadoStock ? (\n                            <ListadoStockBaruch\n                                stocks={listadoStock}\n                                setShowListadoStock={setShowListadoStock}\n                            />\n                        ) : (\n                            <Loader\n                                type=\"ThreeDots\"\n                                color=\"#121D3B\"\n                                height={100}\n                                width={100}\n                            />\n                        )\n                    }\n                </Modal.Body>\n            </Modal>\n            </div>\n        )\n    }\n}\n\nexport default ProductosBaruch;","// Actions types\nimport {\n  OBTENER_PRODUCTOS_ERROR, OBTENER_CATEGORIAS_BARUCH\n} from '../actionTypes';\n// ACTIONS DE AUTENTICACION\nimport {clientTwoToken} from '../../../config/axios';\n\n// Login Usuario\nexport const obtenerCategorias = () => {\n    return async (dispatch) => {\n        try {\n            const categorias = await clientTwoToken.get('api/categoria');\n            dispatch({\n                type: OBTENER_CATEGORIAS_BARUCH,\n                categorias: categorias.data.categorias\n            });\n        } catch(error) {\n            dispatch({\n                type: OBTENER_PRODUCTOS_ERROR\n            });\n        }\n    }\n}","// Actions types\nimport {\n    OBTENER_TOTAL_VENTAS_BARUCH, OBTENER_VENTAS_ERROR_BARUCH, OBTENER_VENTAS_BARUCH,OBTENER_LISTADO_VENTAS_HOY_BARUCH,OBTENER_VENTAS_USUARIOS_BARUCH,\n    OBTENER_VENTAS_HOY_BARUCH,OBTENER_VENTAS_CANCELADAS_BARUCH,SELECCIONAR_VENTA_BARUCH,SELECCIONAR_VENTA_CANCELADA_BARUCH,\n    VENTA_REALIZADA_BARUCH,OBTENER_VENTAS_ENCABEZADO_HOY_BARUCH,AGREGAR_PRODUCTO_CARRITO_BARUCH,AGREGAR_PRODUCTOS_CARRITO_BARUCH,REPORTE_VENTA_PRODUCTOS_BARUCH,\n    ELIMINAR_REPORTE_VENTAS_BARUCH, OBTENER_REPORTE_VENTAS_CATEGORIA_BARUCH, OBTENER_VENTAS_GANANCIAS_BARUCH,OBTENER_REPORTE_VENTAS_BARUCH,CAMBIO_TOTAL_VENTA_BARUCH,\n} from '../actionTypes';\n// ACTIONS DE AUTENTICACION\nimport {clientTwoToken as clientToken} from '../../../config/axios';\nimport Swal from 'sweetalert2';\n\n/* OBTENER EL TOTAL DE VENTAS REALIZADAS */\nexport const obtenerTotalVentas = () => {\n    return async (dispatch) => {\n        try {\n            const {data} = await clientToken.get('api/venta/total');\n            dispatch({\n                type: OBTENER_TOTAL_VENTAS_BARUCH,\n                totalVentas: data.total\n            });\n        } catch(error) {\n            dispatch({\n                type: OBTENER_VENTAS_ERROR_BARUCH\n            });\n        }\n    }\n}\n\n/* OBTENER TODAS LAS VENTAS GENERADAS EN EL SISTEMA */\nexport const obtenerVentas = (formFechas) => {\n    return async (dispatch) => {\n        try {\n            const ventas = await clientToken.get('api/venta', {params: {inicio: formFechas.fechaInicio, fin: formFechas.fechaFin}});\n            dispatch({\n                type: OBTENER_VENTAS_BARUCH,\n                ventas: ventas.data.ventas\n            });\n        } catch(error) {\n            dispatch({\n                type: OBTENER_VENTAS_ERROR_BARUCH\n            });\n        }\n    }\n}\n\nexport const obtenerListadoVentasHoy = () => {\n    return async (dispatch) => {\n        try {\n            const ventas = await clientToken.get('api/venta/hoy');\n            dispatch({\n                type: OBTENER_LISTADO_VENTAS_HOY_BARUCH,\n                ventas: ventas.data.ventas\n            });\n        } catch(error) {\n            dispatch({\n                type: OBTENER_VENTAS_ERROR_BARUCH\n            });\n        }\n    }\n}\n\n/* OBTENER REPORTE DE VENTAS DE USUARIOS */\nexport const obtenerVentasUsuarios = (formFechas) => {\n    return async (dispatch) => {\n        try {\n            const {data} = await clientToken.get('api/venta/usuarios', {params: {inicio: formFechas.fechaInicio, fin: formFechas.fechaFin}});\n            dispatch({\n                type: OBTENER_VENTAS_USUARIOS_BARUCH,\n                ventas:data.results\n            });\n        } catch(error) {\n            dispatch({\n                type: OBTENER_VENTAS_ERROR_BARUCH\n            });\n        }\n    }\n}\n\n/* OBTENER TODAS LAS VENTAS HOY */\nexport const obtenerVentasHoy = () => {\n    return async (dispatch) => {\n        try {\n            const ventas = await clientToken.get('api/venta/hoy');\n            dispatch({\n                type: OBTENER_VENTAS_HOY_BARUCH,\n                ventas: ventas.data.ventas\n            });\n        } catch(error) {\n            dispatch({\n                type: OBTENER_VENTAS_ERROR_BARUCH\n            });\n        }\n    }\n}\n\n/* OBTENER TODAS LAS VENTAS CANCELADAS EN EL SISTEMA */\nexport const obtenerVentasCanceladas = ({fechaInicio, fechaFin}) => {\n    return async (dispatch) => {\n        try {\n            const ventas = await clientToken.get('api/venta/canceladas', {params: {fechaInicio, fechaFin}});\n            dispatch({\n                type: OBTENER_VENTAS_CANCELADAS_BARUCH,\n                ventas: ventas.data.ventas\n            });\n        } catch(error) {\n            dispatch({\n                type: OBTENER_VENTAS_ERROR_BARUCH\n            });\n        }\n    }\n}\n\nexport const seleccionarVenta = (venta) => {\n    return async (dispatch) => {\n        try {\n            const {data} = await clientToken.get('api/venta/recibo', {params: {id:venta}});\n            console.log(data);\n            dispatch({\n                type: SELECCIONAR_VENTA_BARUCH,\n                venta: data\n            });\n        } catch(error) {\n            console.log(error);\n        }\n    }\n}\n\nexport const seleccionarVentaCancelada = (venta) => {\n    return async (dispatch) => {\n        try {\n            console.log(venta);\n            const {data} = await clientToken.get('api/venta/cancelada', {params: {id:venta.id}});\n            dispatch({\n                type: SELECCIONAR_VENTA_CANCELADA_BARUCH,\n                venta: data\n            });\n        } catch(error) {\n            console.log(error);\n        }\n    }\n}\n\n/* GENERAR UNA NUEVA VENTA */\nexport const generarVenta = (formValues) => {\n    return async (dispatch, getState) => {\n        try {\n            const state = await getState();\n            const venta = {\n                venta: formValues,\n                total: parseInt(state.ventasBaruch.totalBaruch),\n                usuario: state.usuarios.me\n            }\n            const productos = state.ventasBaruch.productosSeleccionadosBaruch;\n            const {data} = await clientToken.post('api/venta', {venta, productos});\n            await dispatch({\n                type: VENTA_REALIZADA_BARUCH,\n                recibo: data.recibo,\n                productosVendidos: data.productosVendidos\n            });\n            await dispatch({\n                type: \"ELIMINAR_RECIBO_BARUCH\"\n            })\n            Swal.fire(\n                'Venta realizada correctamente.',\n                'Audiocell.',\n                'success'\n            );\n            Swal.fire({\n                title: 'Venta realizada correctamente',\n                confirmButtonText: 'Continuar',\n                }).then((result) => {\n                    if (result.isConfirmed) {\n                        window.location.reload(false);\n                    }\n                })\n        }catch(error){\n            console.log(error);\n            Swal.fire(\n                'Ha ocurrido un error.',\n                'Audiocell.',\n                'error'\n            );\n        }\n    }\n}\n\nexport const cancelarVenta = (venta) => {\n    return async (dispatch) => {\n        try {\n            \n            await clientToken.post('api/venta/delete', {venta});\n            const ventas = await clientToken.get('api/venta');\n            const ventasHoy = await clientToken.get('api/venta');\n            dispatch({\n                type: OBTENER_VENTAS_BARUCH,\n                ventas: ventas.data.ventas\n            });\n            dispatch({\n                type: OBTENER_VENTAS_HOY_BARUCH,\n                ventas: ventasHoy.data.ventas\n            });\n            Swal.fire(\n                'Venta cancelada correctamente.',\n                'Audiocell.',\n                'success'\n            );\n        } catch(error) {\n            dispatch({\n                type: OBTENER_VENTAS_ERROR_BARUCH\n            });\n        }\n    }\n}\n\nexport const cancelarVentaCaja = (venta) => {\n    return async (dispatch) => {\n        try {\n            await clientToken.post('api/venta/delete', venta);\n            const ventas = await clientToken.get('api/venta');\n            const ventasHoy = await clientToken.get('api/venta/hoy');\n            const ventasCanceladas = await clientToken.get('api/venta/hoyEncabezado');\n            dispatch({\n                type: OBTENER_VENTAS_ENCABEZADO_HOY_BARUCH,\n                ventas: ventasCanceladas.data.ventas\n            });\n            dispatch({\n                type: OBTENER_VENTAS_BARUCH,\n                ventas: ventas.data.ventas\n            });\n            dispatch({\n                type: OBTENER_VENTAS_HOY_BARUCH,\n                ventas: ventasHoy.data.ventas\n            });\n            Swal.fire(\n                'Venta cancelada correctamente.',\n                'Audiocell.',\n                'success'\n            );\n        } catch(error) {\n            dispatch({\n                type: OBTENER_VENTAS_ERROR_BARUCH\n            });\n        }\n    }\n}\n\n/* AGREGAR PRODUCTO PARA VENDER */\nexport const agregarProductoCarrito = (producto) => {\n    return async (dispatch, getState) => {\n        try {\n            // Generar la estructura del objeto producto.\n            const state = getState();\n            const productosCarrito = state.ventasBaruch.productosSeleccionadosBaruch;\n            let productoExistente = false;\n            producto = {\n                ...producto,\n                stock: parseInt(producto.stock),\n                idProducto: producto.id,\n                precioFinal: parseInt(producto.precioVenta),\n                cantidad: 1\n            }\n            if(productosCarrito){\n                for(let p of productosCarrito){\n                    if(p.id===producto.id){\n                        productoExistente=true;\n                        break;\n                    }\n                }\n            }\n            if(productoExistente===true){\n                Swal.fire(\n                    'Producto ya existente.',\n                    'Audiocell.',\n                    'error'\n                );   \n            } else {\n                const total = producto.precioFinal;\n                dispatch({\n                    type: AGREGAR_PRODUCTO_CARRITO_BARUCH,\n                    producto: producto,\n                    total\n                });\n            }\n        } catch(error){\n            console.log(error);\n        }\n    }\n}\n\nexport const cambiarCantidadPrecio = (producto) => {\n    return async (dispatch, getState) => {\n        try {\n            const state = getState();\n            const listadoProductosSeleccionados = state.ventasBaruch.productosSeleccionadosBaruch;\n            if(parseInt(producto.cantidad) > 0)\n            {\n                var total = 0;\n                listadoProductosSeleccionados.map((prod) => {\n                    if(prod.id===producto.id){\n                        prod.cantidad = producto.cantidad;\n                    }\n                    prod.precioFinal = parseInt(prod.cantidad)*parseInt(prod.precioVenta);\n                    total += prod.precioFinal;\n                    return prod;\n                });\n            } else {\n                Swal.fire(\n                    'Debe ingresar una cantidad correcta.',\n                    'Audiocell.',\n                    'error'\n                );\n                total = 0;\n            }\n            dispatch({\n                type: AGREGAR_PRODUCTOS_CARRITO_BARUCH,\n                productos: listadoProductosSeleccionados,\n                total\n            })\n        } catch(error){\n            console.log(error);\n        }\n    }\n}\n\nexport const cambiarCantidadEpin = (cantidad) => {\n    return async (dispatch) => {\n        dispatch({\n            type: CAMBIO_TOTAL_VENTA_BARUCH,\n            total: cantidad\n        });\n    }\n}\n\nexport const eliminarProductoCarrito = (id) => {\n    return async (dispatch, getState) => {\n        try {\n            const state = getState();\n            const prods = state.ventasBaruch.productosSeleccionadosBaruch;\n            var total = 0;\n            const nuevosProductosSeleccionados = prods.length > 1 ? [] : null;\n            prods.forEach((p) => {\n                if(p.id !== id){\n                    total = total + p.precioFinal;\n                    nuevosProductosSeleccionados.push(p);\n                }\n            });\n            dispatch({\n                type: AGREGAR_PRODUCTOS_CARRITO_BARUCH,\n                productos: nuevosProductosSeleccionados,\n                total\n            });\n        } catch(error) {\n            console.log(error);\n        }\n    }\n}\n\n// GET REPORTE VENTAS\nexport const getReporteVentas = ({fechaInicio, fechaFin}) => {\n    return async (dispatch) => {\n        try {\n            const {data} = await clientToken.get('api/venta/reporte', {params: {fechaInicio,fechaFin}});\n            console.log(data);\n            dispatch({\n                type: OBTENER_REPORTE_VENTAS_BARUCH,\n                ventas: data\n            });\n        } catch(error) {\n            dispatch({\n                type: OBTENER_VENTAS_ERROR_BARUCH\n            });\n        }\n    }\n}\n// GET REPORTE GANANCIAS\nexport const getReporteVentasGanancias = ({fechaInicio, fechaFin}) => {\n    return async (dispatch) => {\n        try {\n            const {data} = await clientToken.get('api/venta/ganancias', {params: {fechaInicio,fechaFin}});\n            dispatch({\n                type: OBTENER_VENTAS_GANANCIAS_BARUCH,\n                ventas: data.results\n            });\n        } catch(error) {\n            dispatch({\n                type: OBTENER_VENTAS_ERROR_BARUCH\n            });\n        }\n    }\n}\n\n// GET REPORTE VENTAS DEL DIA POR CATEGORÍA\nexport const getReporteVentasCategoriaHoy = () => {\n    return async (dispatch) => {\n        try {\n            const {data} = await clientToken.get('api/venta/categoria');\n            console.log(data);\n            dispatch({\n                type: OBTENER_REPORTE_VENTAS_CATEGORIA_BARUCH,\n                ventas: data.results\n            });\n        } catch(error) {\n            dispatch({\n                type: OBTENER_VENTAS_ERROR_BARUCH\n            });\n        }\n    }\n}\n\nexport const deleteReporteVentas = () => {\n    return async (dispatch) => {\n        try {\n            dispatch({\n                type: ELIMINAR_REPORTE_VENTAS_BARUCH\n            })\n        } catch(error){\n\n        }\n    }\n}\n\n/* OBTENER TODAS LAS VENTAS HOY */\nexport const getReporteEncabezadosHoy = () => {\n    return async (dispatch) => {\n        try {\n            const ventas = await clientToken.get('api/venta/hoyEncabezado');\n            dispatch({\n                type: OBTENER_VENTAS_ENCABEZADO_HOY_BARUCH,\n                ventas: ventas.data.ventas\n            });\n        } catch(error) {\n            dispatch({\n                type: OBTENER_VENTAS_ERROR_BARUCH\n            });\n        }\n    }\n}\n\nexport const getReporteEncabezados = ({fechaInicio, fechaFin}) => {\n    return async (dispatch) => {\n        try {\n            const {data} = await clientToken.get('api/venta/reporteEncabezados', {params: {fechaInicio,fechaFin}});\n            console.log(data);\n            dispatch({\n                type: OBTENER_VENTAS_ENCABEZADO_HOY_BARUCH,\n                ventas: data.ventas\n            });\n        } catch(error) {\n            dispatch({\n                type: OBTENER_VENTAS_ERROR_BARUCH\n            });\n        }\n    }\n}\n\nexport const getReporteVentasProducto = (producto) => {\n    return async (dispatch) => {\n        try {\n            const {data} = await clientToken.get('api/venta/ventasProducto', {params: {id:producto.value}});\n            console.log(\"THEEES\", data.productosVendidos);\n            dispatch({\n                type: REPORTE_VENTA_PRODUCTOS_BARUCH,\n                ventas: data.productosVendidos\n            });\n        } catch(error) {\n            console.log(error);\n        }\n    }\n}","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { agregarProductoCarrito } from '../Redux/actions/ventasActionBaruch';\n\nconst ProductoCardBaruch = ({id, name, producto, precioVenta, color, stock}) => {\n    const dispatch = useDispatch();\n    const handleAddCarrito = () => {\n        dispatch(agregarProductoCarrito({id,name,producto,precioVenta,color, stock}))\n    }\n\n    return (\n        <div className=\"productCard\">\n            <h6><strong>{name}</strong></h6>\n            <h6><strong>{producto}</strong></h6>\n            {\n                color ?\n                <p>{color}</p> :\n                <p>---</p>\n            }\n            <p>Stock: {stock}</p>\n            {\n                precioVenta ?\n                <p>Q.{precioVenta}</p> :\n                <p>---</p>\n            }\n            <button\n                className=\"btn btn-primary btn-block mb-0\"\n                onClick={handleAddCarrito}\n            >\n                Agregar\n            </button>\n        </div>\n    );\n}\n\nexport default ProductoCardBaruch;","import React, { useRef } from 'react';\nimport { useDispatch } from 'react-redux';\nimport {eliminarProductoCarrito, cambiarCantidadEpin, cambiarCantidadPrecio} from '../Redux/actions/ventasActionBaruch';\nimport Swal from 'sweetalert2';\n\nconst CardItemBaruch = ({producto}) => {\n    const dispatch = useDispatch();\n\n    const handleDeleteProduct = () => {\n        dispatch(eliminarProductoCarrito(producto.id));\n    }\n\n    const handleTotal = (e) => {\n        dispatch(cambiarCantidadEpin(e.target.value));\n    }\n\n    const handleChangePrecio = (e) => {\n        if(e.target.value < 0){\n            e.target.value = 1;\n        }\n        if(e.target.value > producto.stock){\n            e.target.value = producto.stock;\n        } else {\n            dispatch(cambiarCantidadPrecio({id: producto.id,cantidad: e.target.value}));\n        }\n    }\n\n    return(\n        <div className=\"CardItem\">\n            <h5><b>{producto.name}</b></h5>\n            <p>{producto.producto}</p>\n            {\n                (producto.name).includes(\"Epin\") ? (\n                    <input\n                        className=\"form-control\"\n                        type=\"number\"\n                        placeholder=\"Ingrese cantidad\"\n                        onChange={handleChangePrecio}\n                        value={1}\n                    />\n                ) : (\n                    <>\n                        <p>Color: {producto.color ? producto.color: \"-\"}</p>\n                        <p>Precio: {producto.precioVenta ? producto.precioVenta : \"-\"}</p>\n                        <p>Stock: {producto.stock}</p>\n                        <p>Ingrese cantidad:</p>\n                        <input\n                            className=\"form-control\"\n                            type=\"number\"\n                            defaultValue={1}\n                            onChange={handleChangePrecio}\n                        />\n                    </>\n                )\n            }\n            <br/>\n            <div>\n                <button\n                    className=\"btn btn-danger\"\n                    onClick={handleDeleteProduct}\n                >\n                    Eliminar\n                </button>\n            </div>\n        </div>\n    );\n}\n\nexport default CardItemBaruch;","// Actions types\nimport {OBTENER_CAJAS_GENERAL_BARUCH,OBTENER_CAJAS_GENERAL_ERROR_BARUCH,OBTENER_CAJA_BARUCH,OBTENER_CAJA_ERROR_BARUCH,ABRIR_CAJA_BARUCH} from '../actionTypes';\n// ACTIONS DE AUTENTICACION\nimport {clientTwoToken as clientToken} from '../../../config/axios';\nimport Swal from 'sweetalert2';\n\nexport const obtenerCajas = () => {\n    return async (dispatch) => {\n        try {\n            const cajasObtenidas = await clientToken.get('api/caja/general');\n            dispatch({\n                type: OBTENER_CAJAS_GENERAL_BARUCH,\n                cajas: cajasObtenidas.data.cajas\n            });\n        } catch(error) {\n            dispatch({\n                type: OBTENER_CAJAS_GENERAL_ERROR_BARUCH\n            });\n        }\n    }\n}\n\nexport const obtenerCaja = () => {\n    return async (dispatch) => {\n        try {\n            const cajaActual = await clientToken.get('api/caja');\n            if(cajaActual.data.ok === false){\n                dispatch({\n                    type: OBTENER_CAJA_BARUCH,\n                    cajaActual: {status: \"CERRADO\", cantidadEfectivoCierre: 0},\n                    cajaAbierta: false\n                });\n            } else {\n                if(cajaActual.data.cajaActual.status === \"CERRADO\"){\n                    dispatch({\n                        type: OBTENER_CAJA_BARUCH,\n                        cajaActual: cajaActual.data.cajaActual,\n                        cajaAbierta: false\n                    });\n                } else if(cajaActual.data.cajaActual.status === \"ABIERTO\"){\n                    dispatch({\n                        type: OBTENER_CAJA_BARUCH,\n                        cajaActual: cajaActual.data.cajaActual,\n                        cajaAbierta: true\n                    });\n                }\n            }\n        } catch(error) {\n            dispatch({\n                type: OBTENER_CAJA_ERROR_BARUCH\n            });\n        }\n    }\n}\n\nexport const abrirCaja = (apertura) => {\n    return async (dispatch) => {\n        try {\n            const caja = {\n                apertura\n            }\n            await clientToken.post('api/caja', caja);\n            const cajaActual = await clientToken.get('api/caja');\n\n            Swal.fire(\n                'Caja abierta correctamente.',\n                'Audiocell.',\n                'success'\n            );\n            dispatch({\n                type: ABRIR_CAJA_BARUCH,\n                cajaActual: cajaActual.data.cajaActual,\n                cajaAbierta: true\n            });\n        } catch(error){\n            console.log(error);\n        }\n    }\n}\n\nexport const cerrarCaja = () => {\n    return async (dispatch) => {\n        try {\n            await clientToken.post('api/caja/cerrar');\n            Swal.fire(\n                'Caja cerrada correctamente.',\n                'Audiocell.',\n                'success'\n            );\n            const cajaActual = await clientToken.get('api/caja');\n            if(cajaActual.data.ok === false){\n                dispatch({\n                    type: OBTENER_CAJA_BARUCH,\n                    cajaActual: {status: \"CERRADO\", cantidadEfectivoCierre: 0}\n                });\n            } else {\n                dispatch({\n                    type: OBTENER_CAJA_BARUCH,\n                    cajaActual: cajaActual.data.cajaActual\n                });\n            }\n        } catch(error){\n            console.log(error);\n        }\n    }\n}","import React from 'react';\nimport Swal from 'sweetalert2';\nimport { generarVenta } from '../Redux/actions/ventasActionBaruch';\nimport { useDispatch } from 'react-redux';\nimport { useSelector } from 'react-redux';\nimport { useState } from 'react';\nimport {obtenerProductosVenta} from '../Redux/actions/productosBaruchActions';\nimport { useEffect } from 'react';\n\nconst VentaFormBaruch = ({setPrintRecibo}) => {\n\n    const dispatch = useDispatch();\n    const [showData, setShowData] = useState(false);\n    const productosSeleccionados = useSelector((state) => state.ventasBaruch.productosSeleccionadosBaruch);\n    const total = useSelector((state) => state.ventasBaruch.totalBaruch);\n\n    const [formValues, setFormValues] = useState({\n        metodoPago: null,\n        nombre: null,\n        nit: null,\n        direccion: null,\n        dpi: null,\n        imei: null,\n        icc: null,\n        numero: null\n    });\n\n    useEffect(() => {\n        productosSeleccionados.forEach((prod) => {\n            if(prod.name.includes(\"Kit\")){\n                setShowData(true);\n            }\n        });\n    }, [productosSeleccionados]);\n\n    const handleInputChange = (e) => {\n        setFormValues({\n            ...formValues,\n            [e.target.name]: e.target.value\n        });\n    }\n    \n    const handleSubmitForm = (e) => {\n        e.preventDefault();\n        Swal.fire({\n            title: 'Desea finalizar la venta?',\n            showCancelButton: true,\n            cancelButtonText: `Cancelar`,\n            confirmButtonText: `FINALIZAR`,\n            confirmButtonColor: '#021d34'\n        }).then(async (result) => {\n            if (result.isConfirmed) {\n                if(formValues.metodoPago === null || formValues.metodoPago === \"\"){\n                    Swal.fire(\n                        'Debe seleccionar un método de pago.',\n                        'Audiocell.',\n                        'error'\n                    );\n                }\n                else {\n                    await dispatch(generarVenta(formValues));\n                    // Se reinicializan los valores del formulario\n                    setFormValues({\n                        metodoPago: null,\n                        nombre: null,\n                        nit: null,\n                        direccion: null,\n                        dpi: null,\n                        imei: null,\n                        icc: null,\n                        numero: null\n                    });\n                    await dispatch(obtenerProductosVenta());\n                    \n                }\n            }\n        });\n        \n    }\n\n    return (\n        <form\n            onSubmit={handleSubmitForm}\n        >\n            {/* TIPO DE VENTA */}\n            <label htmlFor=\"\">Seleccione método de pago</label>\n            <select\n                name=\"metodoPago\"\n                className=\"form-select\"\n                aria-label=\"Default select example\"\n                onChange={handleInputChange}\n            >\n                <option value=\"\">SELECCIONE MÉTODO DE PAGO</option>\n                <option value=\"EFECTIVO\">EFECTIVO</option>\n                <option value=\"TARJETA\">TARJETA</option>\n            </select>\n            {/* NOMBRE DEL CLIENTE */}\n            <label htmlFor=\"\">Nombre</label>\n            <input \n                name=\"nombre\"\n                className=\"form-control\"\n                type=\"text\"\n                placeholder=\"Ingrese nombre de cliente\"\n                onChange={handleInputChange}\n                required\n                maxLength={50}\n            />\n            {/* NIT DEL CLIENTE */}\n            <label htmlFor=\"\">NIT</label>\n            <input\n                name=\"nit\"\n                className=\"form-control\"\n                type=\"number\"\n                placeholder=\"Ingrese NIT\"\n                onInput={(e) => e.target.value = e.target.value.slice(0, 13)}\n                onChange={handleInputChange}\n            />\n            {/* DPI DEL CLIENTE */}\n            <label htmlFor=\"\">DPI</label>\n            <input\n                name=\"dpi\"\n                className=\"form-control\"\n                type=\"number\"\n                placeholder=\"Ingrese dpi\"\n                onInput={(e) => e.target.value = e.target.value.slice(0, 13)}\n                onChange={handleInputChange}\n            />\n            {/* DIRECCION DEL CLIENTE */}\n            <label htmlFor=\"\">Dirección</label>\n            <input\n                name=\"direccion\"\n                className=\"form-control\"\n                type=\"text\"\n                placeholder=\"Ingrese dirección\"\n                maxLength={30}\n                onChange={handleInputChange}\n            />\n            {\n                showData === true &&\n                <>\n                    {/* NUMERO DEL TELEFONO */}\n                    <label htmlFor=\"\">Número teléfono</label>\n                    <input\n                        name=\"numero\"\n                        className=\"form-control\"\n                        type=\"number\"\n                        placeholder=\"Ingrese número de teléfono\"\n                        onInput={(e) => e.target.value = e.target.value.slice(0, 8)}\n                        onChange={handleInputChange}\n                        required\n                    />\n                    {/* IMEI DEL TELÉFONO */}\n                    <label htmlFor=\"\">IMEI</label>\n                    <input\n                        name=\"imei\"\n                        className=\"form-control\"\n                        type=\"number\"\n                        placeholder=\"Ingrese IMEI\"\n                        onInput={(e) => e.target.value = e.target.value.slice(0, 20)}\n                        onChange={handleInputChange}\n                        required\n                    />\n                    {/* ICC DEL TELEFONO */}\n                    <label htmlFor=\"\">ICC</label>\n                    <input\n                        name=\"icc\"\n                        className=\"form-control\"\n                        type=\"number\"\n                        placeholder=\"Ingrese ICC\"\n                        onInput={(e) => e.target.value = e.target.value.slice(0, 20)}\n                        onChange={handleInputChange}\n                        required\n                    />\n                </>\n            }\n            <br/>\n            <h5>Total: Q.{total}</h5>\n            <button \n                className=\"btn btn-danger btn-block\"\n                type=\"submit\"\n            >\n                Finalizar\n            </button>\n        </form>\n    )\n}\n\nexport default VentaFormBaruch;","import React, {Component} from 'react';\nimport './recibo.css';\n\nclass ReciboBaruch extends Component {\n    constructor(){\n        super();\n        this.state = {\n            totalVenta: 0\n        }\n    }\n\n    getDerivedStateFrom\n\n    render(){\n        const data = this.props.infoRecibo ? this.props.infoRecibo : {};\n        const prods = this.props.productos ? this.props.productos : [];\n        return (\n            // COMPROBANTE GENERAL\n            <div\n                style={{width:\"80mm\", padding:\"3mm\", fontFamily: \"serif\", color: \"black\", fontSize: \"10px\", borderColor: \"black\", borderStyle: \"solid\"}}\n            >\n                {/* ENCABEZADO COMPROBANTE */}\n                <div>\n                    <center> <img src=\"icons/detallesBaruchLogo.jpeg\" alt=\"ChatMovil\" width=\"250px\" style={{filter: \"grayscale(100%)\"}}/> </center>\n                </div>\n                <div className=\"formatoRecibo\">\n                    <div style={{margin:\"auto\", textAlign:\"center\"}}>\n                        <br />\n                        <h6><b>Estamos ubicados en el centro comercial frente a la radio Arcángel San Miguel Ixtahuacan San Marcos</b></h6>\n                    </div>\n                    <br />\n                    <h6>NO. {data.correlativo} BR2023221201</h6>\n                </div>\n                {/* INFO DEL COMPROBANTE */}\n                <div>\n                    <h6>FECHA: {new Date(data.createdAt).toLocaleDateString()}</h6>\n                    <hr />\n                    <h6>NOMBRE: {data.nombreCliente}</h6>\n                    <h6>NIT: {data.nit ? data.nit : 'CF'}</h6>\n                    <h6>DIRECCIÓN: {data.direccion}</h6>\n                    <hr />\n                </div>                \n                {/* DESCRIPCION DEL ENCABEZADO */}\n                <div\n                    style={{display:\"flex\", justifyContent:\"space-between\"}}\n                >\n                    <div\n                        style={{marginRight: \"2px\"}}\n                    >\n                        {\n                            prods.map((p) => (\n                                <div\n                                    key={p.id}\n                                >\n                                    <div style={{display:\"flex\", justifyContent:\"space-between\"}}>\n                                        <h6>{p.Producto.name}-{p.Producto.color}</h6>\n                                        <h6>.....Q.{p.precioFinal}</h6>\n                                    </div>\n                                    {/* AGREGAR TOTAL DE VENTA */}\n                                    <div>\n                                        {\n                                            p.Producto.Categorium.name.includes(\"Kit\") && \n                                            <>\n                                                <h6>IMEI: {p.imei ? p.imei : '-'}</h6>\n                                                <h6>ICC: {p.icc ? p.icc : '-'}</h6>\n                                                <h6>No. {p.numero ? p.numero : '-'}</h6>\n                                                <h6>DPI: {data.dpi ? data.dpi : '-'}</h6>\n                                            </>\n                                        }\n                                    </div>\n                                </div>\n                            ))\n                        }\n                        <div>\n                            <h5>TOTAL VENTA: ...... Q.{data.total}</h5>\n                        </div>\n                    </div>\n                </div>\n                <div style={{textAlign: \"center\"}}>\n                    <br />\n                    <p><b>GRACIAS POR SU COMPRA</b></p>\n                    <p><b>ES UNA BENDICIÓN ATENDERLE, LOS ESPERAMOS</b></p>\n                </div>\n                <div\n                    style={{height:\"4cm\", marginTop:\"2 cm\"}}\n                >\n                    <hr />\n                </div>\n            </div>\n        );\n    }\n}\n\n\nexport default ReciboBaruch;","import React, { useEffect, useState, useRef } from 'react';\nimport {obtenerProductosVenta} from '../Redux/actions/productosBaruchActions';\nimport { useSelector, useDispatch } from 'react-redux';\nimport ProductoCardBaruch from './ProductoCardBaruch';\nimport CardItemBaruch from './CardItemBaruch';\nimport { obtenerCaja } from '../Redux/actions/cajaActionsBaruch';\nimport VentaFormBaruch from './VentaFormBaruch';\nimport Loader from 'react-loader-spinner';\nimport { useReactToPrint } from 'react-to-print';\nimport ReciboBaruch from './ReciboBaruch';\n\nconst ListadoProductosBaruch = () => {\n    // DISPATCH\n    const dispatch = useDispatch();\n    const componentRef = useRef();\n    // STATE\n    const [loading, setLoading] = useState(true);\n    const [buscador, setBuscador] = useState(\"\");\n    const [productosSeleccionados, setProductosSeleccionados] = useState([]);\n    // STORE\n    const productos = useSelector((state) => state.productosBaruch.productosVentaBaruch); \n    const productosSeleccionado = useSelector((state) => state.ventasBaruch.productosSeleccionadosBaruch);\n    const cajaAbierta = useSelector((state) => state.cajaBaruch.cajaAbiertaBaruch);\n    const infoRecibo = useSelector((state) => state.ventasBaruch.reciboBaruch);\n    const productosVendidos = useSelector((state) => state.ventasBaruch.productosVendidosBaruch);\n\n    // EFFECTS\n    useEffect(() => {\n        dispatch(obtenerProductosVenta());\n        dispatch(obtenerCaja());\n    }, [dispatch]);\n    // Cuando cambia caja\n    useEffect(() => {\n        if(cajaAbierta === true){\n            setLoading(false);\n        }else if(cajaAbierta === false){\n            setLoading(false);\n        }\n    }, [cajaAbierta])\n    // Buscador de productos\n    useEffect(() => {\n        if(productos){\n            setProductosSeleccionados(productos);\n        }\n    }, [productos])\n    useEffect(() => {\n        if(buscador !== \"\"){\n            if(productos){\n                const nuevosProductos = productos.filter(\n                    (prod) => \n                        (prod.name.toLowerCase().search(buscador.toLowerCase()) !== -1) ||  (prod.producto.toLowerCase().search(buscador.toLowerCase()) !== -1));\n                setProductosSeleccionados(nuevosProductos);\n            }\n        } else {\n            if(productos){\n                setProductosSeleccionados(productos);\n            }\n        }\n    }, [buscador, productos])\n\n    // FUNCTIONS\n    const handleChangeBuscador = (e) => {\n        setBuscador(e.target.value);\n    }\n\n    const handlePrint = useReactToPrint({\n        content: () => componentRef.current\n    });\n\n    useEffect(() => {\n        if(infoRecibo){\n            handlePrint();\n        }\n    }, [infoRecibo, handlePrint]);\n\n    if(loading){\n        return(\n            <div style={{display:\"flex\", alignItems:\"center\", justifyContent:\"center\"}}>\n                <Loader type=\"ThreeDots\" color=\"#121D3B\" height={100} width={100}/>\n            </div>\n        )\n    }\n    else if(cajaAbierta){\n        return (\n            <div className=\"contenedorVentas\">\n                {\n                    (infoRecibo && productosVendidos) &&\n                        <div style={{display: \"none\"}}>\n                            <ReciboBaruch  ref={componentRef} infoRecibo={infoRecibo} productos={productosVendidos}/>\n                        </div>\n                }\n                <div className=\"contenedorProductosVentas\">\n                    <input style={{maxWidth: \"40%\"}} className=\"form-control md-4\" type=\"text\" value={buscador} onChange={handleChangeBuscador} placeholder=\"Buscar...\"/>\n                    <div className=\"productosCategoria\">\n                        {\n                            productosSeleccionados.map((prod) => (\n                                <ProductoCardBaruch\n                                    key={prod.id}\n                                    {...prod}\n                                />\n                            ))\n                        }\n                    </div>\n                </div>\n                <div className=\"contenedorFormVenta\">\n                    <h5>Información Venta</h5>\n                    <hr/>\n                    {\n                        productosSeleccionado ? (\n                            <>\n                                {\n                                    productosSeleccionado.map((prod,index) => (\n                                        <CardItemBaruch key={prod.id} producto={prod} />\n                                    ))\n                                }\n                                <hr/>\n                                <VentaFormBaruch />\n                                <div style={{display:\"none\"}}>\n                                </div>\n                            </>\n                        ) : (\n                            <h4>No ha seleccionado ningún elemento.</h4>\n                        )\n                    }\n                </div>\n            </div>\n        );\n    } else {\n        return (\n            <div className=\"divCaja\">\n                <h1>DEBE ABRIR CAJA PARA CONTINUAR.</h1>\n            </div>\n        )\n    }\n}\nexport default ListadoProductosBaruch;","import React from 'react';\nimport { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {FaRegEye} from 'react-icons/fa';\nimport {GiCancel} from 'react-icons/gi';\nimport {cancelarVentaCaja, seleccionarVenta} from '../Redux/actions/ventasActionBaruch';\nimport Swal from 'sweetalert2';\n\nconst VentasEncabezosTableBaruch = ({data, setShowForm}) => {\n    // HOOKS\n    const dispatch = useDispatch();\n    // STATE\n\n    const usuarioVerificacion = useSelector((state) => state.usuarios);\n\n    const handleSelectVenta = (venta) => {\n        setShowForm(true);\n        dispatch(seleccionarVenta(venta.id));\n    }\n\n    const handleCancelVenta = (venta) => {\n        Swal.fire({\n            title: 'Desea cancelar la venta?',\n            showCancelButton: true,\n            confirmButtonText: `Cancelar Venta`,\n            cancelButtonText: `Cerrar`\n        }).then(async (result) => {\n            if (result.isConfirmed) {\n                const { value: text } = await Swal.fire({\n                    input: 'textarea',\n                    inputLabel: 'RAZÓN DE CANCELACIÓN',\n                    inputPlaceholder: 'Escriba la razón...',\n                    inputAttributes: {\n                    'aria-label': 'Type your message here',\n                    },\n                    showCancelButton: true,\n                    confirmButtonText: 'Confirmar',\n                    cancelButtonText: 'Cancelar'\n                })\n                if (text) {\n                    dispatch(cancelarVentaCaja({venta, razon: text}));\n                }\n            }\n        });\n    }\n\n    return (\n        <>\n        <table className=\"table table-hover table-secondary\">\n            <thead>\n                <tr>\n                    <th scope=\"col\">#</th>\n                    <th scope=\"col\">Correlativo</th>\n                    <th scope=\"col\">Cliente</th>\n                    <th scope=\"col\">NIT</th>\n                    <th scope=\"col\">Tipo Venta</th>\n                    <th scope=\"col\">Total</th>\n                    <th scope=\"col\">Fecha de Venta</th>\n                    <th scope=\"col\">Detalles</th>\n                </tr>\n            </thead>\n            <tbody>\n            {\n                data.map((venta, index) => (\n                    <tr\n                        key={venta.id}\n                    >\n                    <th scope=\"row\">{index+1}</th>\n                    <td>{venta.correlativo}</td>\n                    <td>{venta.nombreCliente}</td>\n                    <td>{venta.nit}</td>\n                    <td>{venta.tipoVenta}</td>\n                    <td>Q.{venta.total}</td>\n                    <td>{new Date(venta.createdAt).toLocaleDateString()}</td>\n                    <td>\n                        <div>\n                            <button className=\"btn btn-warning\" onClick={() => {handleSelectVenta(venta)}}>\n                                Ver\n                                <FaRegEye\n                                size=\"20px\"\n                                />\n                            </button>\n                        </div>\n                    </td>\n                    </tr>\n                ))\n            }\n            </tbody>\n        </table>\n        </>\n    )\n}\n\nexport default VentasEncabezosTableBaruch;","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { obtenerCaja, abrirCaja, cerrarCaja } from '../Redux/actions/cajaActionsBaruch';\nimport {useHistory} from 'react-router-dom';\nimport Loader from 'react-loader-spinner';\nimport Swal from 'sweetalert2';\nimport {Tab, Tabs} from 'react-bootstrap';\nimport { getReporteEncabezadosHoy, getReporteVentasCategoriaHoy } from '../Redux/actions/ventasActionBaruch';\nimport {Col, Container, Modal, Row} from 'react-bootstrap';\nimport {RiPrinterLine} from 'react-icons/ri';\nimport ReciboBaruch from '../VentasBaruch/ReciboBaruch';\nimport { useRef } from 'react';\nimport { useReactToPrint } from 'react-to-print';\nimport ReporteCategorias from '../Ventas/ReporteCategorias';\nimport VentasEncabezosTableBaruch from '../VentasBaruch/VentasEncabezadosTableBaruch';\n\nconst ControlCajaBaruch = () => {\n    const dispatch = useDispatch();\n    const history = useHistory();\n    const caja = useSelector((state) => state.cajaBaruch.cajaActualBaruch);\n    // Verificar si usuario logueado es admin\n    const [admin, setAdmin] = useState(false);\n    const ventasHoy = useSelector((state) => state.ventasBaruch.encabezadosHoyBaruch);\n    const usuario = useSelector((state) => state.usuarios);\n    const ventaSeleccionada = useSelector((state) => state.ventasBaruch.ventaSeleccionadaBaruch);\n    const reporteVentasCategoria = useSelector((state) => state.ventasBaruch.reporteVentasCategoriaBaruch);\n    const [valorCaja, setValorCaja] = useState(0);\n    const [showForm, setShowForm] = useState(false);\n    const [buttonLoader, setButtonLoader] = useState(false);\n    const [closeButtonLoader, setCloseButtonLoader] = useState(false);\n    const componentRef = useRef();\n\n    useEffect(() => {\n        dispatch(obtenerCaja());\n        dispatch(getReporteEncabezadosHoy());\n        dispatch(getReporteVentasCategoriaHoy());\n    }, [dispatch]);\n\n    useEffect(() => {\n        if(usuario){\n            if(usuario.me){\n                if(usuario.me.rol === \"ADMIN\"){\n                    setAdmin(true);\n                } else if(usuario.me.rol === \"VENTAS\"){\n                    setAdmin(false);\n                }\n            }\n        }\n    }, [usuario])\n\n    const handleInputChange = (e) => {\n        setValorCaja(e.target.value);\n    }\n\n    const handlePrint = useReactToPrint({\n        content: () => componentRef.current,\n    });\n\n    const handleAbrirCaja = () => {\n        if(valorCaja === '' || valorCaja < 0){\n            Swal.fire(\n                'Debe ingresar una cantidad válida.',\n                'Audiocell.',\n                'error'\n            );\n        } else {\n            dispatch(abrirCaja(valorCaja));\n            setButtonLoader(true); \n            setCloseButtonLoader(false);\n        }\n    }\n    \n    const handleCerrarCaja = () => {\n        setValorCaja(0);\n        dispatch(cerrarCaja());\n        setButtonLoader(false); \n        setCloseButtonLoader(true);\n    }\n\n    return ( \n        <div className=\"contenedor-ventas\">\n        <div\n            style={{display: \"flex\", flexWrap: \"wrap\"}}\n        >\n            <h1>Control de Caja</h1>\n            {\n                admin &&\n                <button\n                    className=\"btn btn-primary ml-3\"\n                    onClick={() => {history.push('/cajasBaruch')}}\n                >\n                    Historial Caja\n                </button>\n            }\n        </div>\n        <hr/>\n        {\n            caja ? (\n                caja.status === \"CERRADO\" ? (\n                    <div>\n                        <label htmlFor=\"valorCaja\">CANTIDAD EFECTIVO ACTUAL</label>\n                        <input\n                            name=\"apertura\"\n                            className=\"form-control md-6\"\n                            type=\"number\"\n                            defaultValue={valorCaja}\n                            onChange={handleInputChange}\n                        />\n                        <br/>\n                        <br/>\n                        <button\n                            className={`btn btn-primary btn-block ${buttonLoader && 'disabled'}`}\n                            onClick={handleAbrirCaja}\n                        >\n                            {\n                                buttonLoader ? (\n                                    <span className=\"spinner-border spinner-border-sm\" role=\"status\" aria-hidden=\"true\"></span>\n                                ) : (\n                                    'ABRIR CAJA'\n                                )\n                            }\n                        </button>\n                        <div className=\"mt-5\" style={{overflowX:\"auto\"}}>\n                            {\n                                ventasHoy &&\n                                    <VentasEncabezosTableBaruch\n                                        data={ventasHoy}\n                                        setShowForm={setShowForm}\n                                    />\n                            }\n                            {\n                                reporteVentasCategoria &&\n                                    <ReporteCategorias\n                                        data={reporteVentasCategoria}\n                                    />\n                            }\n                        </div>\n                    </div>\n                ) : (\n                    <div\n                        style={{color: \"black\"}}\n                    >\n                        <button\n                            className={`btn btn-primary btn-block ${closeButtonLoader && 'disabled'}`}\n                            onClick={handleCerrarCaja}\n                        >\n                            {\n                                closeButtonLoader ? (\n                                    <span className=\"spinner-border spinner-border-sm\" role=\"status\" aria-hidden=\"true\"></span>\n                                ) : (\n                                    'CERRAR CAJA'\n                                )\n                            }\n                        </button>\n                        <br/>\n                        <Tabs defaultActiveKey=\"profile\" id=\"uncontrolled-tab-example\" className=\"mb-3\">\n                            <Tab eventKey=\"home\" title=\"Movimiento del día\">\n                                <div className=\"card text-center\">\n                                    <div className=\"card-header\">\n                                        <h3>Información de caja</h3>\n                                    </div>\n                                    <div className=\"card-body\">\n                                        <h5>Actual Caja: Q.{caja.cantidadEfectivo}</h5>\n                                        <h6>EFECTIVO: Q.{caja.cantidadEfectivoDia}</h6>\n                                        <h6>TARJETA: Q.{caja.cantidadTarjeta}</h6>\n                                        <br/>\n                                        <h4>VENTAS HOY: Q.{parseInt(caja.cantidadEfectivoDia)+parseInt(caja.cantidadTarjeta)}</h4>\n                                    </div>\n                                    <div className=\"card-footer text-muted\">\n                                    Audiocell.\n                                    </div>\n                                </div>\n                            </Tab>\n                            <Tab eventKey=\"profile\" title=\"Listado Ventas\">\n                                <div style={{overflowX:\"auto\"}}>\n                                    {\n                                        ventasHoy &&\n                                            <VentasEncabezosTableBaruch\n                                                data={ventasHoy}\n                                                setShowForm={setShowForm}\n                                            />\n                                    }\n                                </div>\n                            </Tab>\n                        </Tabs>\n                        \n                    \n                    </div>\n                )\n            ) : (\n                <div\n                    style={{display: \"flex\", justifyContent:\"center\", alignItems:\"center\"}}\n                >\n                    <Loader\n                        type=\"ThreeDots\"\n                        color=\"#121D3B\"\n                        height={100}\n                        width={100}\n                    />\n                </div>\n            )\n        }\n        <br/>\n        <Modal \n                aria-labelledby=\"contained-modal-title-vcenter\"\n                show={showForm}\n                onHide={setShowForm}\n                size=\"lg\"\n            >\n                <Modal.Header closeButton>\n                    <Modal.Title id=\"contained-modal-title-vcenter\">\n                        Información de venta\n                    </Modal.Title>\n                </Modal.Header>\n                <Modal.Body className=\"show-grid\">\n                    {\n                        ventaSeleccionada ? (\n                            <Container>\n                                <div\n                                    style={{display:\"none\"}}\n                                >\n                                    <ReciboBaruch \n                                        ref={componentRef}\n                                        infoRecibo={ventaSeleccionada.encabezado}\n                                        productos={ventaSeleccionada.productosVendidos}\n                                    />\n                                </div>\n                                <Row>\n                                    <Col xs={12} md={7}>\n                                    <p><b>Correlativo: </b>{ventaSeleccionada.encabezado.correlativo}</p>\n                                    </Col>\n                                    <Col xs={6} md={5}>\n                                    <p><b>Fecha: </b>{new Date(ventaSeleccionada.encabezado.createdAt).toLocaleDateString()}</p>\n                                    </Col>\n                                </Row>\n                                <Row>\n                                    <Col xs={12} md={8}>\n                                    <p><b>Cliente: </b> {ventaSeleccionada.encabezado.nombreCliente}</p>\n                                    </Col>\n                                    <Col xs={6} md={4}>\n                                    <p><b>DPI: </b> {ventaSeleccionada.encabezado.dpi ? ventaSeleccionada.encabezado.dpi : \"---\"}</p>\n                                    </Col>\n                                </Row>\n                                <Row>\n                                    <Col xs={12} md={8}>\n                                    <p><b>Dirección</b> {ventaSeleccionada.encabezado.direccion ? ventaSeleccionada.encabezado.direccion : \" ---\"}</p>\n                                    </Col>\n                                    <Col xs={6} md={4}>\n                                    <p><b>Teléfono:</b> {ventaSeleccionada.encabezado.numero ? ventaSeleccionada.encabezado.numero : \" ---\"}</p>\n                                    </Col>\n                                </Row>\n                                <Row>\n                                    <h5>Información de productos</h5>\n                                    {\n                                        ventaSeleccionada.productosVendidos.map((prod) => (\n                                            <>\n                                                <hr></hr>\n                                                <Col xs={6} md={4}>\n                                                <p><b>Categoría</b> {prod.Producto.Categorium.name}</p>\n                                                </Col>\n                                                <Col xs={6} md={4}>\n                                                <p><b>Producto:</b> {prod.Producto.name} - {prod.Producto.color}</p>\n                                                </Col>\n                                                <Col xs={6} md={4}>\n                                                <p><b>Precio venta:</b> Q.{prod.Producto.precioVenta}</p>\n                                                </Col>\n                                                <Col xs={6} md={4}>\n                                                <p><b>Cantidad:</b>{prod.cantidad}</p>\n                                                </Col>\n                                                <Col xs={6} md={4}>\n                                                <p><b>Subtotal: </b>{prod.subTotal}</p>\n                                                </Col>\n                                            </>\n                                        ))\n                                    }\n                                </Row>\n                                <Row>\n                                    <Col xs={12} md={12}>\n                                        <button\n                                            className=\"btn btn-secondary btn-block\"\n                                            onClick={handlePrint}\n                                        >\n                                            <RiPrinterLine \n                                                size=\"20px\"\n                                            />\n                                            RECIBO\n                                        </button>\n                                    </Col>\n                                </Row>\n                            </Container>\n                        ) : (\n                            <div\n                                style={{display:\"flex\", justifyContent:\"center\"}}\n                            >\n                                <Loader\n                                    type=\"ThreeDots\"\n                                    color=\"#121D3B\"\n                                    height={100}\n                                    width={100}\n                                />\n                            </div>\n                        )\n                    }\n                </Modal.Body>\n                <Modal.Footer>\n                    <button\n                        className=\"btn btn-primary btn-block\"\n                        onClick={() => {setShowForm(false)}}\n                    >\n                        Cerrar\n                    </button>\n                </Modal.Footer>\n            </Modal>\n        </div>\n    );\n}\n\nexport default ControlCajaBaruch;","import React from 'react';\n\nconst CajasTableBaruch = ({data}) => {\n    return (\n    <table className=\"table table-hover table-secondary\">\n            <thead>\n            <tr>\n                <th scope=\"col\">#</th>\n                <th scope=\"col\">Aperturas</th>\n                <th scope=\"col\">Efectivo</th>\n                <th scope=\"col\">Tarjeta</th>\n                <th style={{color: \"blue\"}} scope=\"col\">Cierre</th>\n                <th scope=\"col\">Fecha</th>\n            </tr>\n        </thead>\n        <tbody>\n        {\n            data.map((caja, index) => (\n                <tr\n                    key={caja.id}\n                >\n                <th scope=\"row\">{index+1}</th>\n                <td>Q.{caja.cantidadEfectivoApertura}</td>\n                <td>Q.{caja.cantidadEfectivoDia}</td>\n                <td>Q.{caja.cantidadTarjeta}</td>\n                <td style={{color: \"blue\"}}>Q.{caja.cantidadEfectivoCierre}</td>\n                <td>{new Date(caja.createdAt).toLocaleDateString()}</td>\n                </tr>\n            ))\n        }\n        </tbody>\n    </table>\n    )\n}\n\nexport default CajasTableBaruch;","import React, {useEffect} from 'react';\nimport { useState } from 'react';\nimport Loader from 'react-loader-spinner';\nimport {useDispatch, useSelector} from 'react-redux';\nimport { obtenerCajas } from '../Redux/actions/cajaActionsBaruch';\nimport CajasTableBaruch from './CajasTableBaruch';\n\nconst ListadoCajasBaruch = () => {\n    const dispatch = useDispatch();\n\n    // STATE\n    const [loading, setLoading] = useState(true);\n    const [buscador, setBuscador] = useState(\"\");\n    const [cajasSeleccionadas, setCajasSeleccionadas] = useState([]);\n    // STORE\n    const cajas = useSelector((state) => state.cajaBaruch.cajasGeneralBaruch);\n\n    // Obtener ventas\n    useEffect(() => {\n        console.log(\"hola\");\n        dispatch(obtenerCajas());\n    }, [dispatch])\n\n    useEffect(() => {\n        if(cajas){\n            setLoading(false);\n        }\n    }, [cajas])\n\n    const handleChangeBuscador = (e) => {\n        setBuscador(e.target.value);\n    }\n\n    useEffect(() => {\n        if(buscador !== \"\"){\n            const nuevasCajas = cajas.filter(\n                (caja) => \n                    ((new Date(caja.createdAt).toLocaleDateString().search(buscador)) !== -1));\n            setCajasSeleccionadas(nuevasCajas);\n        } else {\n            setCajasSeleccionadas(cajas);\n        }\n    }, [buscador, cajas])\n\n    if(loading){\n        return(\n            <div\n                style={{display:\"flex\", alignItems:\"center\", justifyContent:\"center\"}}\n            >\n                <Loader \n                    type=\"ThreeDots\"\n                    color=\"#121D3B\"\n                    height={100}\n                    width={100}\n                />\n            </div>\n        )\n    } else if(cajas){\n        return (\n            <div className=\"contenedor-ventas\">\n                <div\n                    style={{display:\"flex\", justifyContent:\"space-between\", flexWrap:\"wrap\", alignItems:\"center\"}}\n                >\n                    <h1>Listado de Cajas</h1>\n                    <input\n                        style={{maxWidth: \"20%\"}}\n                        className=\"form-control md-4\"\n                        type=\"text\"\n                        value={buscador}\n                        onChange={handleChangeBuscador}\n                        placeholder=\"Buscar...\"\n                    />\n                </div>\n                <hr/>\n                <div\n                    style={{overflowY: \"scroll\", maxHeight: \"400px\"}}\n                >\n                    {\n                        cajasSeleccionadas ? (\n                            <CajasTableBaruch\n                                data={cajasSeleccionadas}\n                            />\n                        ) : (\n                            <Loader \n                                type=\"ThreeDots\"\n                                color=\"#121D3B\"\n                                height={100}\n                                width={100}\n                            />\n                        )\n                    }\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default ListadoCajasBaruch;","import React from 'react';\nimport Select from 'react-select';\nimport {Field, reduxForm} from 'redux-form';\n\nconst validate = values => {\n    const errors = {}\n\n    return errors;\n}\n\nconst renderField = ({\n    input,\n    label,\n    type,\n    placeholder,\n    meta: { touched, error }\n}) => (\n    <div>\n        <label>{label}</label>\n        <input {...input} placeholder={placeholder} type={type} className=\"form-control\"/>\n        {touched && ((error && <span style={{color: \"red\"}}>{error}</span>))}\n    </div>\n);\n\n\nconst VentaProductosBaruch = (props) => {    \n    const {handleSubmit,productos,setProductoVenta,productoStock} = props;\n    \n    const handleInputChange = (e) => {\n        setProductoVenta(e);\n    }\n\n    return (\n        <form onSubmit={handleSubmit}>\n            <div>\n                <label>Seleccione un producto</label>\n                <Select\n                    name=\"producto\"\n                    options={productos}\n                    onChange={handleInputChange}\n                    value={productoStock}\n                />\n                <br />\n            </div>\n            <div>\n                <button \n                    type=\"submit\"\n                    className=\"mt-3 btn btn-primary btn-block\"\n                >\n                Generar\n                </button>\n            </div>\n        </form>\n    );\n}\n\nexport default reduxForm({\n    form: 'ventaProductosBaruch',\n    validate\n})(VentaProductosBaruch);","import React from 'react';\nimport { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {FaRegEye} from 'react-icons/fa';\nimport {GiCancel} from 'react-icons/gi';\nimport {cancelarVentaCaja, seleccionarVenta} from '../Redux/actions/ventasActions';\nimport Swal from 'sweetalert2';\n\nconst VentasDetalleTableBaruch = ({data, setShowForm}) => {\n    // HOOKS\n    console.log(\"DeirAAAAAAAAAAAAAAAAAAA\", data);\n    const dispatch = useDispatch();\n\n    const handleSelectVenta = (venta) => {\n        setShowForm(true);\n        dispatch(seleccionarVenta(venta.id));\n    }\n\n    const handleCancelVenta = (venta) => {\n        Swal.fire({\n            title: 'Desea cancelar la venta?',\n            showCancelButton: true,\n            confirmButtonText: `Cancelar Venta`,\n            cancelButtonText: `Cerrar`\n        }).then(async (result) => {\n            if (result.isConfirmed) {\n                const { value: text } = await Swal.fire({\n                    input: 'textarea',\n                    inputLabel: 'RAZÓN DE CANCELACIÓN',\n                    inputPlaceholder: 'Escriba la razón...',\n                    inputAttributes: {\n                    'aria-label': 'Type your message here',\n                    },\n                    showCancelButton: true,\n                    confirmButtonText: 'Confirmar',\n                    cancelButtonText: 'Cancelar'\n                })\n                if (text) {\n                    dispatch(cancelarVentaCaja({venta, razon: text}));\n                }\n            }\n        });\n    }\n\n    return (\n        <>\n        <table className=\"table table-hover table-secondary\">\n            <thead>\n                <tr>\n                    <th scope=\"col\">#</th>\n                    <th scope=\"col\">Producto</th>\n                    <th scope=\"col\">Precio Unitario</th>\n                    <th scope=\"col\">Cantidad</th>\n                    <th scope=\"col\">Precio Total</th>\n                    <th scope=\"col\">Fecha</th>\n                </tr>\n            </thead>\n            <tbody>\n            {\n                data.map((venta, index) => (\n                    <tr\n                        key={venta.id}\n                    >\n                    <th scope=\"row\">{index+1}</th>\n                    <td>{venta.Producto ? venta.Producto.name + \" \" + venta.Producto.Categorium.name : \" \" }</td>\n                    <td>{venta.precioVenta ? venta.precioVenta : \"\"}</td>\n                    <td>{venta.cantidad ? venta.cantidad : \"\"}</td>\n                    <td>{venta.precioFinal ? venta.precioFinal : \"\"}</td>\n                    <td>{new Date(venta.createdAt).toLocaleDateString()}</td>\n                    </tr>\n                ))\n            }\n            </tbody>\n        </table>\n        </>\n    )\n}\n\nexport default VentasDetalleTableBaruch;","import React from 'react';\nimport { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n// import {FaRegEye} from 'react-icons/fa';\n// import {GiCancel} from 'react-icons/gi';\n// import {cancelarVentaCaja, seleccionarVenta} from '../Redux/actions/ventasActions';\n\nconst VentasTableBaruch = ({data, setShowForm}) => {\n    // HOOKS\n    const dispatch = useDispatch();\n    // STATE\n    const [actualPage, setActualPage] = useState(1);\n    const [totalVendido, setTotalVendido] = useState(0);\n    let totalPages = Math.ceil(1/10);\n\n    const usuarioVerificacion = useSelector((state) => state.usuarios);\n\n    useEffect(() => {\n        let total = 0;\n        for(let v of data){\n            total += parseInt(v.Total);\n        }\n        setTotalVendido(total);\n    }, [data])\n\n    // const paginacion = () => {\n    //     let pags = [];\n    //     for(let i=1; i <= totalPages; i++){\n    //         if(i===actualPage){\n    //             pags.push(<li key={i} className=\"page-item active\"><a className=\"page-link\" href=\"/#\">{i}</a></li>);\n    //         } else {\n    //             pags.push(<li key={i} className=\"page-item\"><a className=\"page-link\" href=\"/#\">{i}</a></li>);\n    //         }\n    //     }\n    //     return pags;\n    // }\n\n    // const nextPage = () => {\n    //     if((actualPage+1) <= totalPages){\n    //         setActualPage(actualPage+1);\n    //     }\n    // }\n\n    // const previousPage = () => {\n    //     if((actualPage-1) > 0){\n    //         setActualPage(actualPage-1);\n    //     }\n    // }\n\n    // const handleSelectVenta = (venta) => {\n    //     setShowForm(true);\n    //     dispatch(seleccionarVenta(venta));\n    // }\n\n    return (\n        <>\n        <table className=\"table table-hover table-secondary\">\n            <thead>\n                <tr>\n                    <th scope=\"col\">#</th>\n                    <th scope=\"col\">Correlativo</th>\n                    <th scope=\"col\">Categoría</th>\n                    <th scope=\"col\">Producto</th>\n                    <th scope=\"col\">Cantidad</th>\n                    <th scope=\"col\">Subtotal</th>\n                    <th scope=\"col\">Usuario</th>\n                    <th scope=\"col\">Fecha de Venta</th>\n                    {/* <th scope=\"col\">Detalles</th> */}\n                </tr>\n            </thead>\n            <tbody>\n            {\n                data.map((venta, index) => (\n                    <tr\n                        key={venta.VD}\n                    >\n                    <th scope=\"row\">{index+1}</th>\n                    <td>{venta.correlativo}</td>\n                    <td>{venta.Categoria}</td>\n                    <td>{venta.Producto} - {venta.color}</td>\n                    <td>{venta.cantidad}</td>\n                    <td>Q.{venta.Total}</td>\n                    <td>{venta.name}</td>\n                    <td>{new Date(venta.createdAt).toLocaleDateString()}</td>\n                    {/* <td style={{display: \"flex\", justifyContent: \"center\"}}>\n                        <div style={{marginLeft: \"2px\"}}>\n                            <button className=\"btn btn-warning\" onClick={() => {handleSelectVenta(venta)}}>\n                                Ver\n                                <FaRegEye\n                                size=\"20px\"\n                                />\n                            </button>\n                        </div>\n                    </td> */}\n                    </tr>\n                ))\n            }\n            </tbody>\n        </table>\n        <h5>Total Vendido: Q.{totalVendido}</h5>\n        {/* <div\n            style={{display:\"flex\", justifyContent:\"center\", overflowX:\"auto\"}}\n        >\n            <ul className=\"pagination pagination-sm\">\n                <li \n                    className=\"page-item\"\n                    onClick={previousPage}  \n                >\n                    <a className=\"page-link\" href=\"/#\" aria-label=\"Previous\">\n                    <span aria-hidden=\"true\">&laquo;</span>\n                    </a>\n                </li>\n                {\n                    paginacion()\n                }\n                <li \n                    className=\"page-item\"\n                    onClick={nextPage}\n                >\n                    <a className=\"page-link\" href=\"/#\" aria-label=\"Next\">\n                        <span aria-hidden=\"true\">&raquo;</span>\n                    </a>\n                </li>\n            </ul>\n        </div> */}\n        </>\n    )\n}\n\nexport default VentasTableBaruch;","import React from 'react';\nimport { useEffect } from 'react';\nimport { useState } from 'react';\n\nconst ReporteGananciasBaruch = ({data}) => {\n    // TOTAL GANANCIAS\n    const [totalGanancias, setGanancias] = useState(0);\n\n    useEffect(() => {\n        let total = 0;\n        if(data){\n            data.forEach((v) => {\n                total += parseInt(v.Ganancia);\n            });\n            setGanancias(total);\n        }\n    }, [data]);\n\n    return (\n        <>\n        <table className=\"table table-hover table-secondary\">\n            <thead>\n                <tr>\n                    <th scope=\"col\">#</th>\n                    <th scope=\"col\">Categoria</th>\n                    <th scope=\"col\">Producto</th>\n                    <th scope=\"col\">Color</th>\n                    <th scope=\"col\">Vendidos</th>\n                    <th scope=\"col\">Ganancia</th>\n                </tr>\n            </thead>\n            <tbody>\n            {\n                data.map((venta, index) => {\n                    return (\n                        <tr\n                            key={venta.id}\n                        >\n                            <th scope=\"row\">{index+1}</th>\n                            <td>{venta.Categoria}</td>\n                            <td>{venta.Producto}</td>\n                            <td>{venta.color}</td>\n                            <td>{venta.Vendidos}</td>\n                            <td>Q.{venta.Ganancia}</td>\n                        </tr>\n                    )\n                })\n            }\n            </tbody>\n        </table>\n        <h5>Total Ganancias: Q.{totalGanancias}</h5>\n        </>\n    )\n}\n\nexport default ReporteGananciasBaruch;","import React, {useEffect, useState} from 'react';\nimport {useDispatch, useSelector} from 'react-redux';\nimport {getReporteEncabezados, getReporteEncabezadosHoy, getReporteVentasGanancias, obtenerListadoVentasHoy, obtenerVentas, obtenerVentasUsuarios, getReporteVentasProducto} from '../Redux/actions/ventasActionBaruch';\nimport Swal from 'sweetalert2';\nimport Loader from 'react-loader-spinner';\nimport {Col, Container, Modal, Row, Tabs} from 'react-bootstrap';\nimport {RiPrinterLine} from 'react-icons/ri';\nimport { useReactToPrint } from 'react-to-print';\nimport { useRef } from 'react';\nimport { Tab } from 'bootstrap';\nimport { obtenerUsuario } from '../Redux/actions/usersActions';\nimport { Redirect } from 'react-router-dom';\nimport VentaProductosBaruch from './VentaProductosBaruch';\nimport { obtenerProductos} from '../Redux/actions/productosBaruchActions';\nimport VentasDetalleTableBaruch from './VentasDetalleTableBaruch';\nimport VentasTableBaruch from './VentasTableBaruch';\nimport ReporteGananciasBaruch from './ReporteGananciasBaruch';\n\nconst ControlVentasBaruch = () => {\n    const dispatch = useDispatch();\n    const productos = useSelector((state) => state.productosBaruch.productosBaruch);\n    const productosNoDisponibles = useSelector((state) => state.productos.productosNoDisponibles);\n    const [productoStock, setProductoVenta] = useState(null);\n    const [formFechas, setFormFechas] = useState({\n        fechaInicio: null,\n        fechaFin: null\n    });\n    const [formFechasReporte, setFormFechasReporte] = useState({\n        fechaInicio: null,\n        fechaFin: null\n    });\n    const [formFechasGanancia, setFormFechasGanancia] = useState({\n        fechaInicio: null,\n        fechaFin: null\n    });\n    const [formFechasEncabezado, setFormFechasEncabezado] = useState({\n        fechaInicio: null,\n        fechaFin: null\n    });\n    const [showForm, setShowForm] = useState(false);\n    // Opciones de productos para select\n    const [productsOptions, setProductOptions] = useState([]);\n    const componentRef = useRef();\n\n    // Obtener ventas\n    useEffect(() => {\n        dispatch(obtenerUsuario());\n        dispatch(obtenerProductos());\n    }, [dispatch])\n\n    // Transformación de data de productos.\n    useEffect(() => {\n        if(productos && productosNoDisponibles){\n            let productsTransform = productos.map((prod) => ({\n                value: prod.id,\n                label: `${prod.categoria}-${prod.name}${prod.color != null ? `-${prod.color}` : ''}`\n            }));\n            let productsTransformNo = productosNoDisponibles.map((prod) => ({\n                value: prod.id,\n                label: `${prod.categoria}-${prod.name}${prod.color != null ? `-${prod.color}` : ''}`\n            }));\n            setProductOptions([...productsTransform, ...productsTransformNo]);\n        }\n    }, [productos,productosNoDisponibles])\n\n    const usuarioVerificacion = useSelector((state) => state.usuarios);\n\n    const ventas = useSelector((state) => state.ventasBaruch.ventasBaruch);\n    const reporteVentasUsuarios = useSelector((state) => state.ventas.reporteVentasUsuarios);\n    const reporteGanancias = useSelector((state) => state.ventasBaruch.reporteGananciasBaruch);\n    const ventaSeleccionada = useSelector((state) => state.ventas.ventaSeleccionada);\n    const reporteEncabezados = useSelector((state) => state.ventas.encabezadosHoy);\n    const reporteVentasProducto = useSelector((state) => state.ventasBaruch.reporteVentasProductoBaruch);\n\n    const handlePrint = useReactToPrint({\n        content: () => componentRef.current,\n    });\n\n    const handleInputChange = (e) => {\n        setFormFechas({...formFechas,[e.target.name] : e.target.value});\n    }\n\n    const handleInputChangeReporte = (e) => {\n        setFormFechasReporte({...formFechasReporte,[e.target.name] : e.target.value});\n    }\n\n    const handleInputChangeGanancia = (e) => {\n        setFormFechasGanancia({...formFechasGanancia,[e.target.name] : e.target.value});\n    }\n\n    const handleInputChangeEncabezado = (e) => {\n        setFormFechasEncabezado({...formFechasEncabezado,[e.target.name] : e.target.value});\n    }\n\n    const handleObtenerVentas = () => {\n        const {fechaInicio, fechaFin} = formFechas;\n        if(!fechaInicio || !fechaFin){\n            Swal.fire(\n                'Debe seleccionar dos fechas.',\n                'Audiocell.',\n                'error'\n            );\n        } else {\n            const endDate = new Date(fechaFin);\n            endDate.setDate(endDate.getDate() + 1);\n            formFechas.fechaFin = endDate;\n            dispatch(obtenerVentas(formFechas));\n        }\n    }\n\n    const handleObtenerVentasHoy = () => {\n        dispatch(obtenerListadoVentasHoy());\n    }\n\n    const handleObtenerVentasUsuarios = () => {\n        const {fechaInicio, fechaFin} = formFechasReporte;\n        if(!fechaInicio || !fechaFin){\n            Swal.fire(\n                'Debe seleccionar dos fechas.',\n                'Audiocell.',\n                'error'\n            );\n        } else {\n            dispatch(obtenerVentasUsuarios(formFechasReporte));\n        }\n    }\n\n    const handleObtenerVentasGanancias = () => {\n        const {fechaInicio, fechaFin} = formFechasGanancia;\n        if(!fechaInicio || !fechaFin){\n            Swal.fire(\n                'Debe seleccionar dos fechas.',\n                'Audiocell.',\n                'error'\n            );\n        } else {\n            const endDate = new Date(fechaFin);\n            endDate.setDate(endDate.getDate() + 1);\n            formFechasGanancia.fechaFin = endDate;\n            dispatch(getReporteVentasGanancias(formFechasGanancia));\n        }\n    }\n\n    const handleObtenerEncabezados = () => {\n        const {fechaInicio, fechaFin} = formFechasEncabezado;\n        if(!fechaInicio || !fechaFin){\n            Swal.fire(\n                'Debe seleccionar dos fechas.',\n                'Audiocell.',\n                'error'\n            );\n        } else {\n            dispatch(getReporteEncabezados(formFechasEncabezado));\n        }\n    }\n\n    const handleObtenerEncabezadosHoy = () => {\n        dispatch(getReporteEncabezadosHoy());\n    }\n\n    const handleObtenerVentasProducto = (values) => {\n        if(productoStock == null)\n        {\n            Swal.fire('Error', 'Debe seleccionar un producto', 'error');\n        }\n        else\n        {\n            dispatch(getReporteVentasProducto(productoStock));\n        }\n    }\n\n    if(usuarioVerificacion){\n        if(usuarioVerificacion.me){\n            console.log(\"USUARIO VER\",usuarioVerificacion.me.rol);\n            if(usuarioVerificacion.me.rol !== \"ADMIN\"){\n                return (\n                    <Redirect to=\"/home\" />\n                )\n            }\n        }\n    }\n    return (\n        <div className=\"contenedor-ventasGeneral\">\n        <Tabs defaultActiveKey=\"home\" id=\"uncontrolled-tab-example\" className=\"mb-3\">\n            <Tab eventKey=\"home\" title=\"Reporte Ventas\">\n            <div className=\"contenedor-ventas\">\n            <h1>Listado de Ventas</h1>\n            <div\n                style={{display: \"flex\", justifyContent:\"space-around\", flexWrap:\"wrap\"}}\n            >\n                <div>\n                    <label htmlFor=\"\">Fecha Inicio</label>\n                    <input\n                            name=\"fechaInicio\"\n                            className=\"form-control md-4\"\n                            type=\"date\"\n                            value={formFechas.formInicio}\n                            onChange={handleInputChange}\n                    />\n                </div>\n                <div>\n                    <label htmlFor=\"\">Fecha Fin</label>\n                    <input\n                            name=\"fechaFin\"\n                            className=\"form-control md-4\"\n                            type=\"date\"\n                            value={formFechas.formFin}\n                            onChange={handleInputChange}\n                    />\n                </div>\n                <button\n                    className=\"btn btn-primary mt-2\"\n                    onClick={handleObtenerVentas}\n                >\n                    Buscar Ventas\n                </button>\n                <button\n                    className=\"btn btn-primary mt-2\"\n                    onClick={handleObtenerVentasHoy}\n                >\n                    Ventas Hoy\n                </button>\n            </div>\n            <hr/>\n            <div\n                style={{overflowY: \"scroll\", maxHeight: \"400px\"}}\n            >\n                {\n                    ventas ? (\n                        <VentasTableBaruch\n                            data={ventas}\n                            setShowForm={setShowForm}\n                        />\n                    ) : (\n                        <p></p>\n                    )\n                }\n            </div>\n            </div>\n            </Tab>\n            <Tab eventKey=\"ganancias\" title=\"Reporte Ganancias\">\n            <div className=\"contenedor-ventas\">\n                <h1>Reporte de Ganancias</h1>\n                <div\n                    style={{display: \"flex\", justifyContent:\"space-around\", flexWrap:\"wrap\"}}\n                >\n                    <div>\n                        <label htmlFor=\"\">Fecha Inicio</label>\n                        <input\n                                name=\"fechaInicio\"\n                                className=\"form-control md-4\"\n                                type=\"date\"\n                                value={formFechasGanancia.formInicio}\n                                onChange={handleInputChangeGanancia}\n                        />\n                    </div>\n                    <div>\n                        <label htmlFor=\"\">Fecha Fin</label>\n                        <input\n                                name=\"fechaFin\"\n                                className=\"form-control md-4\"\n                                type=\"date\"\n                                value={formFechasGanancia.formFin}\n                                onChange={handleInputChangeGanancia}\n                        />\n                    </div>\n                    <button\n                        className=\"btn btn-primary mt-2\"\n                        onClick={handleObtenerVentasGanancias}\n                    >\n                        Generar Reporte\n                    </button>\n                </div>\n                <hr />\n                <div\n                    style={{overflowY: \"scroll\", maxHeight: \"400px\"}}\n                >\n                {\n                    reporteGanancias ? (\n                        <ReporteGananciasBaruch\n                            data={reporteGanancias}\n                        />\n                    ) : (\n                        <p></p>\n                    )\n                }\n            </div>\n            </div>\n            </Tab>\n            <Tab eventKey=\"vproductos\" title=\"Ventas de producto\">\n            <div className=\"contenedor-ventas\">\n                <h1>Ventas por producto</h1>\n                <div\n                >\n                    <VentaProductosBaruch\n                        onSubmit={handleObtenerVentasProducto}\n                        productos={productsOptions}\n                        setProductoVenta={setProductoVenta}\n                        productoStock={productoStock}\n                    />\n                </div>\n                <hr />\n                <div\n                    style={{overflowY: \"scroll\", maxHeight: \"400px\"}}\n                >\n                {\n                    (reporteVentasProducto != null && reporteVentasProducto.length > 0) && (\n                        <VentasDetalleTableBaruch \n                            data={reporteVentasProducto}\n                        />\n                    )\n                }\n            </div>\n            </div>\n            </Tab>\n        </Tabs>\n        </div>\n    )\n}\n\nexport default ControlVentasBaruch;","import {React } from 'react';\nimport Login from './components/Authentication/Login';\nimport { Provider } from 'react-redux';\nimport store from './components/Redux/store';\nimport {BrowserRouter as Router, Switch, Route} from 'react-router-dom';\nimport Home from './components/Home';\nimport Navbar from './components/Navbar';\nimport VerificationAuth from './components/Authentication/VerificationAuth';\nimport ListadoProductos from './components/Ventas/ListadoProductos';\nimport Productos from './components/ControlProductos/Productos';\nimport ControlVentas from './components/Ventas/ListadoVentas';\nimport ControlCaja from './components/Caja/ControlCaja';\nimport ListadoCajas from './components/Caja/ListadoCajas';\nimport ListUsers from './components/Users/ListUsers';\nimport './index.css';\nimport ListadoVentasCanceladas from './components/Ventas/ListadoVentasCanceladas';\nimport ProductosBaruch from './components/ControlProductosBaruch/ProductosBaruch';\nimport ListadoProductosBaruch from './components/VentasBaruch/ListadoProductosBaruch';\nimport ControlCajaBaruch from './components/CajaBaruch/ControlCajaBaruch';\nimport ListadoCajasBaruch from './components/CajaBaruch/ListadoCajasBaruch';\nimport ControlVentasBaruch from './components/VentasBaruch/ListadoVentasBaruch';\n\nfunction App() {\n  \n  return (\n    <Router>\n      <Provider store={store}>\n        <Switch>\n            <Route exact path=\"/\" component={Login} />\n            <Route exact path=\"/login\" component={Login} />\n            <Route exact path=\"/home\" component={Home} />\n          <VerificationAuth>\n              <Navbar />\n              <br/>\n              <br/>\n              <br/>\n              {/* System A */}\n              <Route exact path=\"/usuarios\" component={ListUsers} />\n              <Route exact path=\"/venta\" component={ListadoProductos} />\n              <Route exact path=\"/ventas\" component={ControlVentas} />\n              <Route exact path=\"/productos\" component={Productos} />\n              <Route exact path=\"/caja\" component={ControlCaja} />\n              <Route exact path=\"/cajas\" component={ListadoCajas} />\n              <Route exact path=\"/canceladas\" component={ListadoVentasCanceladas} />\n              {/* System B */}\n              <Route exact path=\"/ventaBaruch\" component={ListadoProductosBaruch} />\n              <Route exact path=\"/ventasBaruch\" component={ControlVentasBaruch} />\n              <Route exact path=\"/productosBaruch\" component={ProductosBaruch} />\n              <Route exact path=\"/cajaBaruch\" component={ControlCajaBaruch} />\n              <Route exact path=\"/cajasBaruch\" component={ListadoCajasBaruch} />\n          </VerificationAuth>\n        </Switch>\n      </Provider>\n    </Router>\n  );\n}\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// ACTION TYPES\n\nimport {OBTENER_PRODUCTOS, CREAR_PRODUCTO, SELECTED_PRODUCT, EDITAR_PRODUCTO, OBTENER_TOTAL_PRODUCTOS, OBTENER_REPORTE_PRODUCTOS, OBTENER_LISTADO_STOCK, OBTENER_PRODUCTOS_VENTA, OBTENER_REPORTE_STOCK, CLEAR_PRODUCTOS, OBTENER_TOTAL_INVERTIDO} from \"../actionTypes\";\n\n\n// INITIAL STATE\nconst initialState = {\n    productos: [],\n    productosFilter: [],\n    productosNoDisponibles: [],\n    productosNoDisponiblesFilter: [],\n    productosVenta: null,\n    listadoStock: null,\n    loading: true,\n    errorResponse: false,\n    selectedProduct: {},\n    totalProductos: null,\n    totalInvertido: null,\n    reporteProductos: null,\n    reporteStock: null\n};\n\n// REDUCER FUNCTION\nconst productosReducer = (state = initialState, action) => {\n    switch(action.type){\n        case OBTENER_TOTAL_PRODUCTOS:\n            return {\n                ...state,\n                totalProductos: action.totalProductos\n            }\n        case OBTENER_PRODUCTOS:\n            return {\n                ...state,\n                productos: action.productos,\n                productosNoDisponibles: action.productosNoDisponibles,\n                errorResponse: false\n            }\n        case OBTENER_PRODUCTOS_VENTA:\n            return {\n                ...state,\n                productosVenta: action.productosVenta\n            }\n        case OBTENER_LISTADO_STOCK:\n            return {\n                ...state,\n                listadoStock: action.listado\n            }\n        case CREAR_PRODUCTO:\n            return {\n                ...state,\n                productos: action.productos,\n                productosNoDisponibles: action.productosNoDisponibles,\n                errorResponse: false\n            }\n        case SELECTED_PRODUCT:\n            return {\n                ...state,\n                selectedProduct: action.producto\n            }\n        case EDITAR_PRODUCTO:\n            return {\n                ...state,\n                productos: action.productos,\n                productosNoDisponibles: action.productosNoDisponibles,\n                errorResponse: false\n            }\n        case OBTENER_REPORTE_PRODUCTOS:\n            return {\n                ...state,\n                reporteProductos: action.productos\n            }\n        case OBTENER_TOTAL_INVERTIDO:\n            return {\n                totalInvertido: action.totalInvertido\n            }\n        case OBTENER_REPORTE_STOCK:\n            return {\n                ...state,\n                reporteStock: action.productos\n            }\n        case CLEAR_PRODUCTOS:\n            return initialState;\n        default:\n            return state;\n    }\n}\n\nexport default productosReducer;","// ACTION TYPES\n\nimport {OBTENER_CATEGORIAS} from \"../actionTypes\";\n\n\n// INITIAL STATE\nconst initialState = {\n    categorias: [],\n    loading: true,\n    errorResponse: false\n};\n\n// REDUCER FUNCTION\nconst categoriasReducer = (state = initialState, action) => {\n    switch(action.type){\n        case OBTENER_CATEGORIAS:\n            return {\n                ...state,\n                categorias: action.categorias,\n                errorResponse: false\n            }\n        default:\n            return state;\n    }\n}\n\nexport default categoriasReducer;","// ACTION TYPES\n\nimport {\n    AGREGAR_PRODUCTO_CARRITO, \n    CAMBIO_TOTAL_VENTA, \n    AGREGAR_PRODUCTO_CANTIDAD, \n    RESTAR_PRODUCTO_CANTIDAD, \n    ELIMINAR_PRODUCTO_CARRITO, \n    OBTENER_VENTAS, \n    VENTA_REALIZADA, \n    SELECCIONAR_VENTA, \n    OBTENER_VENTAS_CANCELADAS, \n    SELECCIONAR_VENTA_CANCELADA,\n    OBTENER_REPORTE_VENTAS,\n    ELIMINAR_REPORTE_VENTAS,\n    OBTENER_VENTAS_HOY,\n    OBTENER_VENTAS_USUARIOS,\n    OBTENER_LISTADO_VENTAS_HOY,\n    OBTENER_REPORTE_VENTAS_CATEGORIA,\n    OBTENER_VENTAS_GANANCIAS,\n    CLEAR_VENTAS,\n    AGREGAR_PRODUCTOS_CARRITO,\n    OBTENER_VENTAS_ENCABEZADO_HOY,\n    REPORTE_VENTA_PRODUCTOS,\n    CLEAR_LISTADOS_VENTAS\n} from \"../actionTypes\";\n\n\n// INITIAL STATE\nconst initialState = {\n    productosSeleccionados: null,\n    ventaSeleccionada: null,\n    ventaCanceladaSeleccionada: null,\n    tipoVenta: null,\n    ventas: null,\n    ventasHoy: null,\n    encabezadosHoy: null,\n    ventasCanceladas: null,\n    total: 0,\n    errorResponse: false,\n    informacionVenta: null,\n    recibo: null,\n    productosVendidos: null,\n    reporteVentas: null,\n    reporteVentasUsuarios: null,\n    reporteVentasCategoria: null,\n    reporteGanancias: null,\n    reporteVentasProducto: null\n};\n\n// REDUCER FUNCTION\nconst ventasReducer = (state = initialState, action) => {\n    switch(action.type){\n        case SELECCIONAR_VENTA:\n            return {\n                ...state,\n                ventaSeleccionada: action.venta\n            }\n        case SELECCIONAR_VENTA_CANCELADA:\n            return {\n                ...state,\n                ventaCanceladaSeleccionada: action.venta\n            }\n        case OBTENER_VENTAS:\n            return {\n                ...state,\n                ventas: action.ventas\n            }\n        case OBTENER_LISTADO_VENTAS_HOY:\n        return {\n            ...state,\n            ventas: action.ventas\n        }\n        case OBTENER_VENTAS_HOY:\n            return {\n                ...state,\n                ventas: action.ventas\n            }\n        case OBTENER_VENTAS_ENCABEZADO_HOY:\n            return {\n                ...state,\n                encabezadosHoy: action.ventas\n            }\n        case OBTENER_VENTAS_GANANCIAS:\n            return {\n                ...state,\n                reporteGanancias: action.ventas\n            }\n        case OBTENER_VENTAS_USUARIOS:\n            return {\n                ...state,\n                reporteVentasUsuarios: action.ventas\n            }\n        case OBTENER_REPORTE_VENTAS:\n            return {\n                ...state,\n                reporteVentas: action.ventas\n            }\n        case OBTENER_REPORTE_VENTAS_CATEGORIA:\n            return {\n                ...state,\n                reporteVentasCategoria: action.ventas\n            }\n        case OBTENER_VENTAS_CANCELADAS:\n            return {\n                ...state,\n                ventasCanceladas: action.ventas\n            }\n        case AGREGAR_PRODUCTO_CARRITO:\n            return {\n                ...state,\n                productosSeleccionados: state.productosSeleccionados === null ? [action.producto] : [action.producto, ...state.productosSeleccionados],\n                total: state.total + action.total\n            }\n        case AGREGAR_PRODUCTOS_CARRITO:\n            return {\n                ...state,\n                productosSeleccionados: action.productos,\n                total: action.total\n            }\n        case AGREGAR_PRODUCTO_CANTIDAD:\n            return {\n                ...state,\n                carrito: action.carrito,\n            }\n        case CAMBIO_TOTAL_VENTA:\n            return {\n                ...state,\n                total: action.total\n            }\n        case RESTAR_PRODUCTO_CANTIDAD:\n            return {\n                ...state,\n                carrito: action.carrito,\n                total: action.total\n            }\n        case ELIMINAR_PRODUCTO_CARRITO:\n            return {\n                ...state,\n                productosSeleccionados: null,\n                total: 0,\n                informacionVenta: null\n            }\n        case ELIMINAR_REPORTE_VENTAS:\n            return {\n                ...state,\n                reporteVentas: null\n            }\n        case VENTA_REALIZADA:\n            return {\n                ...state,\n                productosSeleccionados: null,\n                total: 0,\n                tipoVenta: null,\n                informacionVenta: null,\n                recibo: action.recibo,\n                productosVendidos: action.productosVendidos\n            }\n        case REPORTE_VENTA_PRODUCTOS:\n            return {\n                ...state,\n                reporteVentasProducto: action.ventas\n            }\n        case \"ELIMINAR_RECIBO\":\n            return {\n                ...state,\n                recibo: null\n            }\n        case CLEAR_VENTAS:\n            return initialState;\n        case CLEAR_LISTADOS_VENTAS:\n            return {\n                ...state,\n                ventaSeleccionada: null,\n                ventaCanceladaSeleccionada: null,\n                ventas: null,\n                ventasHoy: null,\n                encabezadosHoy: null,\n                ventasCanceladas: null,\n                total: 0,\n                recibo: null,\n                reporteVentas: null,\n                reporteVentasUsuarios: null,\n                reporteVentasCategoria: null,\n                reporteGanancias: null,\n                reporteVentasProducto: null\n            }\n        default:\n            return state;\n    }\n}\n\nexport default ventasReducer;","// ACTION TYPES\n\nimport {ABRIR_CAJA, CLEAR_CAJAS, OBTENER_CAJA, OBTENER_CAJAS_GENERAL} from \"../actionTypes\";\n\n\n// INITIAL STATE\nconst initialState = {\n    cajaActual: null,\n    cajasGeneral: null,\n    cajaAbierta: null,\n    loading: false,\n    errorResponse: false\n};\n\n// REDUCER FUNCTION\nconst cajaReducer = (state = initialState, action) => {\n    switch(action.type){\n        case OBTENER_CAJA:\n            return {\n                ...state,\n                cajaActual: action.cajaActual,\n                cajaAbierta: action.cajaAbierta\n            }\n        case OBTENER_CAJAS_GENERAL:\n            return {\n                ...state,\n                cajasGeneral: action.cajas\n            }\n        case ABRIR_CAJA:\n            return {\n                ...state,\n                cajaActual: action.cajaActual,\n                cajaAbierta: action.cajaAbierta\n            }\n        case CLEAR_CAJAS: {\n            return initialState;\n        }\n        default:\n            return state;\n    }\n}\n\nexport default cajaReducer;","// ACTION TYPES\n\nimport {OBTENER_USUARIOS, CREAR_USUARIO, SELECCIONAR_USUARIO, GET_ME, ELIMINAR_USUARIO, CLEAR_USUARIOS, OBTENER_TIENDAS, SELECT_TIENDA} from \"../actionTypes\";\n\n\n// INITIAL STATE\nconst initialState = {\n    usuarios: null,\n    loading: false,\n    errorResponse: false,\n    selectedUser: null,\n    me: null,\n    tiendas: null,\n    selectedTienda: 0\n};\n\n// REDUCER FUNCTION\nconst usersReducer = (state = initialState, action) => {\n    switch(action.type){\n        case GET_ME:\n            return {\n                ...state,\n                me: action.me\n            }\n        case OBTENER_USUARIOS:\n            return {\n                ...state,\n                usuarios: action.usuarios\n            }\n        case CREAR_USUARIO:\n            return {\n                ...state,\n                usuarios: action.usuarios\n            }\n        case SELECCIONAR_USUARIO:\n            return {\n                ...state,\n                selectedUser: action.usuario\n            }\n        case ELIMINAR_USUARIO:\n            return {\n                ...state,\n                usuarios: action.usuarios\n            }\n        case OBTENER_TIENDAS:\n            return {\n                ...state,\n                tiendas: action.tiendas\n            }\n        case SELECT_TIENDA:\n            return {\n                ...state,\n                selectedTienda: action.tienda\n            }\n        case CLEAR_USUARIOS:\n            return initialState;\n        default:\n            return state;\n    }\n}\nexport default usersReducer;","// ACTION TYPES\n\nimport {\n    OBTENER_TOTAL_PRODUCTOS_BARUCH,OBTENER_PRODUCTOS_BARUCH_VENTA,OBTENER_PRODUCTOS_BARUCH,OBTENER_LISTADO_STOCK_BARUCH,CREAR_PRODUCTO_BARUCH,\n    SELECTED_PRODUCT_BARUCH,EDITAR_PRODUCTO_BARUCH,OBTENER_REPORTE_PRODUCTOS_BARUCH,OBTENER_TOTAL_INVERTIDO_BARUCH,OBTENER_REPORTE_STOCK_BARUCH,CLEAR_PRODUCTOS\n} from \"../actionTypes\";\n\n\n// INITIAL STATE\nconst initialState = {\n    productosBaruch: [],\n    productosBaruchNoDisponibles: [],\n    productosVentaBaruch: null,\n    listadoStockBaruch: null,\n    loadingBaruch: true,\n    errorResponseBaruch: false,\n    selectedProductBaruch: {},\n    totalProductosBaruch: null,\n    totalInvertidoBaruch: null,\n    reporteProductosBaruch: null,\n    reporteStockBaruch: null\n};\n\n// REDUCER FUNCTION\nconst productosBaruchReducer = (state = initialState, action) => {\n    switch(action.type){\n        case OBTENER_TOTAL_PRODUCTOS_BARUCH:\n            return {\n                ...state,\n                totalProductosBaruch: action.totalProductos\n            }\n        case OBTENER_PRODUCTOS_BARUCH:\n            return {\n                ...state,\n                productosBaruch: action.productos,\n                productosBaruchNoDisponibles: action.productosNoDisponibles,\n                errorResponse: false\n            }\n        case OBTENER_PRODUCTOS_BARUCH_VENTA:\n            return {\n                ...state,\n                productosVentaBaruch: action.productosVenta\n            }\n        case OBTENER_LISTADO_STOCK_BARUCH:\n            return {\n                ...state,\n                listadoStockBaruch: action.listado\n            }\n        case CREAR_PRODUCTO_BARUCH:\n            return {\n                ...state,\n                productosBaruch: action.productos,\n                productosBaruchNoDisponibles: action.productosNoDisponibles,\n                errorResponse: false\n            }\n        case SELECTED_PRODUCT_BARUCH:\n            return {\n                ...state,\n                selectedProductBaruch: action.producto\n            }\n        case EDITAR_PRODUCTO_BARUCH:\n            return {\n                ...state,\n                productosBaruch: action.productos,\n                productosBaruchNoDisponibles: action.productosNoDisponibles,\n                errorResponseBaruch: false\n            }\n        case OBTENER_REPORTE_PRODUCTOS_BARUCH:\n            return {\n                ...state,\n                reporteProductosBaruch: action.productos\n            }\n        case OBTENER_TOTAL_INVERTIDO_BARUCH:\n            return {\n                totalInvertidoBaruch: action.totalInvertido\n            }\n        case OBTENER_REPORTE_STOCK_BARUCH:\n            return {\n                ...state,\n                reporteStockBaruch: action.productos\n            }\n        case CLEAR_PRODUCTOS:\n            return initialState;\n        default:\n            return state;\n    }\n}\n\nexport default productosBaruchReducer;","// ACTION TYPES\n\nimport {OBTENER_CATEGORIAS_BARUCH} from \"../actionTypes\";\n\n\n// INITIAL STATE\nconst initialState = {\n    categoriasBaruch: [],\n    loading: true,\n    errorResponse: false\n};\n\n// REDUCER FUNCTION\nconst categoriasBaruchReducer = (state = initialState, action) => {\n    switch(action.type){\n        case OBTENER_CATEGORIAS_BARUCH:\n            return {\n                ...state,\n                categoriasBaruch: action.categorias,\n                errorResponse: false\n            }\n        default:\n            return state;\n    }\n}\n\nexport default categoriasBaruchReducer;","// ACTION TYPES\n\nimport {ABRIR_CAJA_BARUCH, CLEAR_CAJAS, OBTENER_CAJA_BARUCH, OBTENER_CAJAS_GENERAL_BARUCH} from \"../actionTypes\";\n\n\n// INITIAL STATE\nconst initialState = {\n    cajaActualBaruch: null,\n    cajasGeneralBaruch: null,\n    cajaAbiertaBaruch: null,\n    loading: false,\n    errorResponse: false\n};\n\n// REDUCER FUNCTION\nconst cajaBaruchReducer = (state = initialState, action) => {\n    switch(action.type){\n        case OBTENER_CAJA_BARUCH:\n            return {\n                ...state,\n                cajaActualBaruch: action.cajaActual,\n                cajaAbiertaBaruch: action.cajaAbierta\n            }\n        case OBTENER_CAJAS_GENERAL_BARUCH:\n            return {\n                ...state,\n                cajasGeneralBaruch: action.cajas\n            }\n        case ABRIR_CAJA_BARUCH:\n            return {\n                ...state,\n                cajaActualBaruch: action.cajaActual,\n                cajaAbiertaBaruch: action.cajaAbierta\n            }\n        case CLEAR_CAJAS: {\n            return initialState;\n        }\n        default:\n            return state;\n    }\n}\nexport default cajaBaruchReducer;","// ACTION TYPES\n\nimport {\n    AGREGAR_PRODUCTO_CARRITO_BARUCH, \n    CAMBIO_TOTAL_VENTA_BARUCH, \n    AGREGAR_PRODUCTO_CANTIDAD_BARUCH, \n    RESTAR_PRODUCTO_CANTIDAD_BARUCH, \n    ELIMINAR_PRODUCTO_CARRITO_BARUCH, \n    OBTENER_VENTAS_BARUCH, \n    VENTA_REALIZADA_BARUCH, \n    SELECCIONAR_VENTA_BARUCH, \n    OBTENER_VENTAS_CANCELADAS_BARUCH, \n    SELECCIONAR_VENTA_CANCELADA_BARUCH,\n    OBTENER_REPORTE_VENTAS_BARUCH,\n    ELIMINAR_REPORTE_VENTAS_BARUCH,\n    OBTENER_VENTAS_HOY_BARUCH,\n    OBTENER_VENTAS_USUARIOS_BARUCH,\n    OBTENER_LISTADO_VENTAS_HOY_BARUCH,\n    OBTENER_REPORTE_VENTAS_CATEGORIA_BARUCH,\n    OBTENER_VENTAS_GANANCIAS_BARUCH,\n    CLEAR_VENTAS,\n    AGREGAR_PRODUCTOS_CARRITO_BARUCH,\n    OBTENER_VENTAS_ENCABEZADO_HOY_BARUCH,\n    REPORTE_VENTA_PRODUCTOS_BARUCH\n} from \"../actionTypes\";\n\n\n// INITIAL STATE\nconst initialState = {\n    productosSeleccionadosBaruch: null,\n    ventaSeleccionadaBaruch: null,\n    ventaCanceladaSeleccionadaBaruch: null,\n    tipoVentaBaruch: null,\n    ventasBaruch: null,\n    ventasHoyBaruch: null,\n    encabezadosHoyBaruch: null,\n    ventasCanceladasBaruch: null,\n    totalBaruch: 0,\n    errorResponse: false,\n    informacionVentaBaruch: null,\n    reciboBaruch: null,\n    productosVendidosBaruch: null,\n    reporteVentasBaruch: null,\n    reporteVentasUsuariosBaruch: null,\n    reporteVentasCategoriaBaruch: null,\n    reporteGananciasBaruch: null,\n    reporteVentasProductoBaruch: null\n};\n\n// REDUCER FUNCTION\nconst ventasBaruchReducer = (state = initialState, action) => {\n    switch(action.type){\n        case SELECCIONAR_VENTA_BARUCH:\n            return {\n                ...state,\n                ventaSeleccionadaBaruch: action.venta\n            }\n        case SELECCIONAR_VENTA_CANCELADA_BARUCH:\n            return {\n                ...state,\n                ventaCanceladaSeleccionadaBaruch: action.venta\n            }\n        case OBTENER_VENTAS_BARUCH:\n            return {\n                ...state,\n                ventasBaruch: action.ventas\n            }\n        case OBTENER_LISTADO_VENTAS_HOY_BARUCH:\n        return {\n            ...state,\n            ventasBaruch: action.ventas\n        }\n        case OBTENER_VENTAS_HOY_BARUCH:\n            return {\n                ...state,\n                ventasBaruch: action.ventas\n            }\n        case OBTENER_VENTAS_ENCABEZADO_HOY_BARUCH:\n            return {\n                ...state,\n                encabezadosHoyBaruch: action.ventas\n            }\n        case OBTENER_VENTAS_GANANCIAS_BARUCH:\n            return {\n                ...state,\n                reporteGananciasBaruch: action.ventas\n            }\n        case OBTENER_VENTAS_USUARIOS_BARUCH:\n            return {\n                ...state,\n                reporteVentasUsuariosBaruch: action.ventas\n            }\n        case OBTENER_REPORTE_VENTAS_BARUCH:\n            return {\n                ...state,\n                reporteVentasBaruch: action.ventas\n            }\n        case OBTENER_REPORTE_VENTAS_CATEGORIA_BARUCH:\n            return {\n                ...state,\n                reporteVentasCategoriaBaruch: action.ventas\n            }\n        case OBTENER_VENTAS_CANCELADAS_BARUCH:\n            return {\n                ...state,\n                ventasCanceladasBaruch: action.ventas\n            }\n        case AGREGAR_PRODUCTO_CARRITO_BARUCH:\n            return {\n                ...state,\n                productosSeleccionadosBaruch: state.productosSeleccionadosBaruch === null ? [action.producto] : [action.producto, ...state.productosSeleccionadosBaruch],\n                totalBaruch: state.totalBaruch + action.total\n            }\n        case AGREGAR_PRODUCTOS_CARRITO_BARUCH:\n            return {\n                ...state,\n                productosSeleccionadosBaruch: action.productos,\n                totalBaruch: action.total\n            }\n        case AGREGAR_PRODUCTO_CANTIDAD_BARUCH:\n            return {\n                ...state,\n                carritoBaruch: action.carrito,\n            }\n        case CAMBIO_TOTAL_VENTA_BARUCH:\n            return {\n                ...state,\n                totalBaruch: action.total\n            }\n        case RESTAR_PRODUCTO_CANTIDAD_BARUCH:\n            return {\n                ...state,\n                carritoBaruch: action.carrito,\n                totalBaruch: action.total\n            }\n        case ELIMINAR_PRODUCTO_CARRITO_BARUCH:\n            return {\n                ...state,\n                productosSeleccionadosBaruch: null,\n                totalBaruch: 0,\n                informacionVentaBaruch: null\n            }\n        case ELIMINAR_REPORTE_VENTAS_BARUCH:\n            return {\n                ...state,\n                reporteVentasBaruch: null\n            }\n        case VENTA_REALIZADA_BARUCH:\n            return {\n                ...state,\n                productosSeleccionadosBaruch: null,\n                totalBaruch: 0,\n                tipoVentaBaruch: null,\n                informacionVentaBaruch: null,\n                reciboBaruch: action.recibo,\n                productosVendidosBaruch: action.productosVendidos\n            }\n        case REPORTE_VENTA_PRODUCTOS_BARUCH:\n            return {\n                ...state,\n                reporteVentasProductoBaruch: action.ventas\n            }\n        case \"ELIMINAR_RECIBO\":\n            return {\n                ...state,\n                reciboBaruch: null\n            }\n        case CLEAR_VENTAS: \n            return initialState;\n        default:\n            return state;\n    }\n}\nexport default ventasBaruchReducer;","import { reducer as reduxFormReducer } from 'redux-form'; \nimport productosReducer from './productosReducer';\nimport categoriasReducer from './categoriasReducer';\nimport ventasReducer from './ventasReducer';\nimport cajaReducer from './cajaReducer';\nimport usersReducer from './usersReducer';\nimport productosBaruchReducer from './productosBaruchReducer';\nimport categoriasBaruchReducer from './categoriasBaruchReducer';\nimport cajaBaruchReducer from './cajaBaruchReducer';\nimport ventasBaruchReducer from './ventasBaruchReducer';\nconst { combineReducers } = require(\"redux\");\nconst { default: authenticationReducer } = require(\"./authenticationReducer\");\n\nconst reducer = combineReducers({\n    authentication: authenticationReducer,\n    usuarios: usersReducer,\n    productos: productosReducer,\n    productosBaruch: productosBaruchReducer,\n    categorias: categoriasReducer,\n    categoriasBaruch: categoriasBaruchReducer,\n    ventas: ventasReducer,\n    ventasBaruch: ventasBaruchReducer,\n    caja: cajaReducer,\n    cajaBaruch: cajaBaruchReducer,\n    form: reduxFormReducer\n});\n\nexport default reducer;","// LOGIN ACTIONS\nexport const LOGIN_EXITOSO = \"LOGIN_EXITOSO\";\nexport const LOGIN_ERROR = \"LOGIN_ERROR\";\nexport const LOGOUT = \"LOGOUT\";\n// USUARIOS ACTIONS\nexport const GET_ME = \"GET_ME\";\nexport const OBTENER_USUARIOS = \"OBTENER_USUARIOS\";\nexport const CREAR_USUARIO = \"CREAR_USUARIO\";\nexport const SELECCIONAR_USUARIO = \"SELECCIONAR_USUARIO\";\nexport const ELIMINAR_USUARIO = \"ELIMINAR_USUARIO\";\n// CATEGORIAS ACTIONS\nexport const OBTENER_CATEGORIAS = \"OBTENER_CATEGORIAS\";\nexport const OBTENER_CATEGORIAS_BARUCH = \"OBTENER_CATEGORIAS_BARUCH\";\n// PRODUCTOS ACTIONS\nexport const OBTENER_PRODUCTOS = \"OBTENER_PRODUCTOS\";\nexport const OBTENER_PRODUCTOS_VENTA = \"OBTENER_PRODUCTOS_VENTA\";\nexport const OBTENER_TOTAL_PRODUCTOS = \"OBTENER_TOTAL_PRODUCTOS\";\nexport const OBTENER_LISTADO_STOCK = \"OBTENER_LISTADO_STOCK\";\nexport const OBTENER_PRODUCTOS_ERROR = \"OBTENER_PRODUCTOS_ERROR\";\nexport const CREAR_PRODUCTO = \"CREAR_PRODUCTO\";\nexport const EDITAR_PRODUCTO = \"EDITAR_PRODUCTO\";\nexport const ELIMINAR_PRODUCTO = \"ELIMINAR_PRODUCTO\";\nexport const ELIMINAR_STOCK = \"ELIMINAR_STOCK\";\nexport const OBTENER_REPORTE_PRODUCTOS = \"OBTENER_REPORTE_PRODUCTOS\";\nexport const OBTENER_REPORTE_STOCK = \"OBTENER_REPORTE_STOCK\";\n// PRODUCTOS BARUCH ACTIONS\nexport const OBTENER_PRODUCTOS_BARUCH = \"OBTENER_PRODUCTOS_BARUCH\";\nexport const OBTENER_PRODUCTOS_BARUCH_VENTA = \"OBTENER_PRODUCTOS_BARUCH_VENTA\";\nexport const OBTENER_TOTAL_PRODUCTOS_BARUCH = \"OBTENER_TOTAL_PRODUCTOS_BARUCH\";\nexport const OBTENER_LISTADO_STOCK_BARUCH = \"OBTENER_LISTADO_STOCK_BARUCH\";\nexport const OBTENER_PRODUCTOS_ERROR_BARUCH = \"OBTENER_PRODUCTOS_ERROR_BARUCH\";\nexport const CREAR_PRODUCTO_BARUCH = \"CREAR_PRODUCTO_BARUCH\";\nexport const EDITAR_PRODUCTO_BARUCH = \"EDITAR_PRODUCTO_BARUCH\";\nexport const ELIMINAR_PRODUCTO_BARUCH = \"ELIMINAR_PRODUCTO_BARUCH\";\nexport const ELIMINAR_STOCK_BARUCH = \"ELIMINAR_STOCK_BARUCH\";\nexport const OBTENER_REPORTE_PRODUCTOS_BARUCH = \"OBTENER_REPORTE_PRODUCTOS_BARUCH\";\nexport const OBTENER_REPORTE_STOCK_BARUCH = \"OBTENER_REPORTE_STOCK_BARUCH\";\n// VENTAS ACTIONS\nexport const SELECCIONAR_VENTA = \"SELECCIONAR_VENTA\";\nexport const SELECCIONAR_VENTA_CANCELADA = \"SELECCIONAR_VENTA_CANCELADA\";\nexport const OBTENER_TOTAL_VENTAS = \"OBTENER_TOTAL_VENTAS\";\nexport const OBTENER_VENTAS = \"OBTENER_VENTAS\";\nexport const OBTENER_LISTADO_VENTAS_HOY = \"OBTENER_LISTADO_VENTAS_HOY\";\nexport const OBTENER_VENTAS_HOY = \"OBTENER_VENTAS_HOY\";\nexport const OBTENER_VENTAS_ENCABEZADO_HOY = \"OBTENER_VENTAS_ENCABEZADO_HOY\";\nexport const OBTENER_VENTAS_GANANCIAS = \"OBTENER_VENTAS_GANANCIAS\";\nexport const OBTENER_VENTAS_USUARIOS = \"OBTENER_VENTAS_USUARIOS\";\nexport const OBTENER_REPORTE_VENTAS = \"OBTENER_REPORTE_VENTAS\";\nexport const OBTENER_REPORTE_VENTAS_CATEGORIA = \"OBTENER_REPORTE_VENTAS_CATEGORIA\";\nexport const OBTENER_VENTAS_CANCELADAS = \"OBTENER_VENTAS_CANCELADAS\";\nexport const OBTENER_VENTAS_ERROR = \"OBTENER_VENTAS_ERROR\";\nexport const AGREGAR_PRODUCTO_CARRITO = \"AGREGAR_PRODUCTO_CARRITO\";\nexport const AGREGAR_PRODUCTOS_CARRITO = \"AGREGAR_PRODUCTOS_CARRITO\";\nexport const ELIMINAR_PRODUCTO_CARRITO = \"ELIMINAR_PRODUCTO_CARRITO\";\nexport const ELIMINAR_REPORTE_VENTAS = \"ELIMINAR_REPORTE_VENTAS\";\nexport const AGREGAR_PRODUCTO_CANTIDAD = \"AGREGAR_PRODUCTO_CANTIDAD\";\nexport const RESTAR_PRODUCTO_CANTIDAD = \"RESTAR_PRODUCTO_CANTIDAD\";\nexport const SELECTED_PRODUCT = \"SELECTED_PRODUCT\";\nexport const VENTA_REALIZADA = \"VENTA_REALIZADA\";\nexport const CAMBIO_TOTAL_VENTA = \"CAMBIO_TOTAL_VENTA\";\nexport const OBTENER_TOTAL_INVERTIDO = \"OBTENER_TOTAL_INVERTIDO\";\nexport const REPORTE_VENTA_PRODUCTOS = \"REPORTE_VENTA_PRODUCTOS\";\n// VENTAS ACTIONS BARUCH\nexport const SELECCIONAR_VENTA_BARUCH = \"SELECCIONAR_VENTA_BARUCH\";\nexport const SELECCIONAR_VENTA_CANCELADA_BARUCH = \"SELECCIONAR_VENTA_CANCELADA_BARUCH\";\nexport const OBTENER_TOTAL_VENTAS_BARUCH = \"OBTENER_TOTAL_VENTAS_BARUCH\";\nexport const OBTENER_VENTAS_BARUCH = \"OBTENER_VENTAS_BARUCH\";\nexport const OBTENER_LISTADO_VENTAS_HOY_BARUCH = \"OBTENER_LISTADO_VENTAS_HOY_BARUCH\";\nexport const OBTENER_VENTAS_HOY_BARUCH = \"OBTENER_VENTAS_HOY_BARUCH\";\nexport const OBTENER_VENTAS_ENCABEZADO_HOY_BARUCH = \"OBTENER_VENTAS_ENCABEZADO_HOY_BARUCH\";\nexport const OBTENER_VENTAS_GANANCIAS_BARUCH = \"OBTENER_VENTAS_GANANCIAS_BARUCH\";\nexport const OBTENER_VENTAS_USUARIOS_BARUCH = \"OBTENER_VENTAS_USUARIOS_BARUCH\";\nexport const OBTENER_REPORTE_VENTAS_BARUCH = \"OBTENER_REPORTE_VENTAS_BARUCH\";\nexport const OBTENER_REPORTE_VENTAS_CATEGORIA_BARUCH = \"OBTENER_REPORTE_VENTAS_CATEGORIA_BARUCH\";\nexport const OBTENER_VENTAS_CANCELADAS_BARUCH = \"OBTENER_VENTAS_CANCELADAS_BARUCH\";\nexport const OBTENER_VENTAS_ERROR_BARUCH = \"OBTENER_VENTAS_ERROR_BARUCH\";\nexport const AGREGAR_PRODUCTO_CARRITO_BARUCH = \"AGREGAR_PRODUCTO_CARRITO_BARUCH\";\nexport const AGREGAR_PRODUCTOS_CARRITO_BARUCH = \"AGREGAR_PRODUCTOS_CARRITO_BARUCH\";\nexport const ELIMINAR_PRODUCTO_CARRITO_BARUCH = \"ELIMINAR_PRODUCTO_CARRITO_BARUCH\";\nexport const ELIMINAR_REPORTE_VENTAS_BARUCH = \"ELIMINAR_REPORTE_VENTAS_BARUCH\";\nexport const AGREGAR_PRODUCTO_CANTIDAD_BARUCH = \"AGREGAR_PRODUCTO_CANTIDAD_BARUCH\";\nexport const RESTAR_PRODUCTO_CANTIDAD_BARUCH = \"RESTAR_PRODUCTO_CANTIDAD_BARUCH\";\nexport const SELECTED_PRODUCT_BARUCH = \"SELECTED_PRODUCT_BARUCH\";\nexport const VENTA_REALIZADA_BARUCH = \"VENTA_REALIZADA_BARUCH\";\nexport const CAMBIO_TOTAL_VENTA_BARUCH = \"CAMBIO_TOTAL_VENTA_BARUCH\";\nexport const OBTENER_TOTAL_INVERTIDO_BARUCH = \"OBTENER_TOTAL_INVERTIDO_BARUCH\";\nexport const REPORTE_VENTA_PRODUCTOS_BARUCH = \"REPORTE_VENTA_PRODUCTOS_BARUCH\";\n// CAJA ACTIONS\nexport const OBTENER_CAJAS_GENERAL = \"OBTENER_CAJAS_GENERAL\";\nexport const OBTENER_CAJAS_GENERAL_ERROR = \"OBTENER_CAJAS_GENERAL_ERROR\";\nexport const ABRIR_CAJA = \"ABRIR_CAJA\";\nexport const OBTENER_CAJA = \"OBTENER_CAJA\";\nexport const OBTENER_CAJA_ERROR = \"OBTENER_CAJA_ERROR\";\n// CAJA ACTIONS BARUCH\nexport const OBTENER_CAJAS_GENERAL_BARUCH = \"OBTENER_CAJAS_GENERAL_BARUCH\";\nexport const OBTENER_CAJAS_GENERAL_ERROR_BARUCH = \"OBTENER_CAJAS_GENERAL_ERROR_BARUCH\";\nexport const ABRIR_CAJA_BARUCH = \"ABRIR_CAJA_BARUCH\";\nexport const OBTENER_CAJA_BARUCH = \"OBTENER_CAJA_BARUCH\";\nexport const OBTENER_CAJA_ERROR_BARUCH = \"OBTENER_CAJA_ERROR_BARUCH\";\n\nexport const CLEAR_AUTENTICACION = \"CLEAR_AUTENTICACION\";\nexport const CLEAR_USUARIOS = \"CLEAR_USUARIOS\";\nexport const CLEAR_PRODUCTOS = \"CLEAR_PRODUCTOS\";\nexport const CLEAR_CATEGORIAS = \"CLEAR_CATEGORIAS\";\nexport const CLEAR_VENTAS = \"CLEAR_VENTAS\";\nexport const CLEAR_CAJAS = \"CLEAR_CAJAS\";\nexport const CLEAR_LISTADOS_VENTAS = \"CLEAR_LISTADOS_VENTAS\";\n\n\n// TIENDAS\nexport const OBTENER_TIENDAS = \"OBTENER_TIENDAS\";\nexport const SELECT_TIENDA = \"SELECT_TIENDA\";"],"sourceRoot":""}